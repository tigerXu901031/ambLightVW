/****************************************************************************
**   File       :  LIN_LDF.h
**   Controller :  Infineon XC2224L
**   LIN Version:  2.1
**   Description:  Header file from selected LDF file(LIN_LDF_HFILE)
*****************************************************************************/


#ifndef LIN_LDF_H
#define LIN_LDF_H

/*@doc API*/

#include "COMPILER.h"
#include "LIN_CFG.h"

/*   @Topic LIN LDF Application Program Interface |
**   This section defines the interface for LIN cluster. It defines the constants
**   typedef names and function names. */


/*   @def LIN_CFG_SCHD_TIME_BASE |
**   Define the time base as defined in LDF file. This is used
**   by master interface for scheduling the frames.
**   Specify time in ms.*/

     #define LIN_CFG_SCHD_TIME_BASE  (5.000 + 0.170)

/*   @def LIN_SYS_CFG_BAUD |
**   Baud rate defined by application in LDF file.*/

     #define LIN_SYS_CFG_BAUD 9000// 19200//

/*   @def LIN_SYS_CFG_NUM_OF_SIGS |
**   Total number of signals configured by application,Generated by DAvE tool.*/

     #define LIN_SYS_CFG_NUM_OF_SIGS  146

/*   @def LIN_SYS_CFG_NUM_OF_SCHD_TBL |
**   Total number of schedule tables defined in LDF file.*/

     #define LIN_SYS_CFG_NUM_OF_SCHD_TBL  5

/*   @def LIN_SYS_CFG_MAX_FRM_PER_SCH_TAB |
**   Maximum number of frame slots associated with any of the schedule table.
**   This value provided by DAvE tool.*/

     #define LIN_SYS_CFG_MAX_SLTS_PER_SCH_TAB  6

/*   @def LIN_SYS_TOTAl_NUM_FRAMES |
**   Total number of frames, value will be generated by DAvE tool.*/

     #define LIN_SYS_TOTAl_NUM_FRAMES  8

/*   @def LIN_SYS_TOTAl_FRM_BUFF_SZ |
**   Sum of lengths of all frames configured.*/

     #define LIN_SYS_TOTAl_FRM_BUFF_SZ  64

/*   @def LIN_SYS_CFG_NUM_OF_SPRDC_FRMS |
**   Number of Unconditional frames in sporadic frame, value will be generated by DAvE tool.*/

     #define LIN_SYS_CFG_NUM_OF_SPRDC_FRMS  0

/*   @def LIN_SYS_CFG_NUM_OF_EVNT_FRMS |
**   Total number of event triggered frames defined in LDF file,Generated by DAvE tool.*/

     #define LIN_SYS_CFG_NUM_OF_EVNT_FRMS  0

/*   @def LIN_SYS_CFG_MAX_FRM_PER_EVNT_FRM |
**   Maximum number of unconditional frames associated with any of the,
**   Event triggered frame.Generated by DAvE tool.*/

     #define LIN_SYS_CFG_MAX_FRM_PER_EVNT_FRM  0

/*   @def LIN_TP_N_AS_TIME  |
**   Time for transmission of the LIN frame on the transmitter side in ms.*/

     #define LIN_TP_N_AS_TIME   1000

/*   @def LIN_TP_N_CR_TIME  |
**   Time until reception of the next Consecutive Frame in ms.*/

     #define LIN_TP_N_CR_TIME   1000

/*   @enum LIN_LDF_SIG_INFO |
**   To read, write or control signals, application uses the signal name as defined in LDF file
**   configuration, LIN LLD uses the corresponding enumerated value as defined to service the
**   requested operation.Generated by DAvE tool.*/

     typedef enum
     {
        MasterReqB0=0,
        MasterReqB1=1,
        MasterReqB2=2,
        MasterReqB3=3,
        MasterReqB4=4,
        MasterReqB5=5,
        MasterReqB6=6,
        MasterReqB7=7,
        SlaveRespB0=8,
        SlaveRespB1=9,
        SlaveRespB2=10,
        SlaveRespB3=11,
        SlaveRespB4=12,
        SlaveRespB5=13,
        SlaveRespB6=14,
        SlaveRespB7=15,
        DispBrt_IC = 16,
        EBL_Stat = 17,
        HVAC_AC_R_Psd_HVAC_R = 18,
        HVAC_AC_Z1Z2_Actv = 19,
        HVAC_AC_Z3Z4_Actv = 20,
        HVAC_Ag_ResSymb_Enbl = 21,
        HVAC_Ag_ResSymb_On_Rq = 22,
        HVAC_Ag_ResSymb_Tmr = 23,
        HVAC_AirDist_RL_Rq_HVAC_R = 24,
        HVAC_AirDist_RR_Rq_HVAC_R = 25,
        HVAC_AirDist_R_Posn1 = 26,
        HVAC_AirDist_R_Posn2 = 27,
        HVAC_AirDist_R_Posn3 = 28,
        HVAC_AirDist_R_Posn4 = 29,
        HVAC_AirDist_R_Posn5 = 30,
        HVAC_AirDist_R_Posn6 = 31,
        HVAC_AirDist_R_Posn7 = 32,
        HVAC_AirDist_Zone1_Disp_Rq = 33,
        HVAC_AirDist_Zone1_Stat = 34,
        HVAC_AirDist_Zone2_Disp_Rq = 35,
        HVAC_AirDist_Zone2_Stat = 36,
        HVAC_AirDist_Zone3_Disp_Rq = 37,
        HVAC_AirDist_Zone3_Stat = 38,
        HVAC_AirDist_Zone4_Disp_Rq = 39,
        HVAC_AirDist_Zone4_Stat = 40,
        HVAC_Airflow_RL_Rq_HVAC_R = 41,
        HVAC_Airflow_RR_Rq_HVAC_R = 42,
        HVAC_Airflow_Zone1_Disp_Rq = 43,
        HVAC_Airflow_Zone1_Stat = 44,
        HVAC_Airflow_Zone2_Disp_Rq = 45,
        HVAC_Airflow_Zone2_Stat = 46,
        HVAC_Airflow_Zone3_Disp_Rq = 47,
        HVAC_Airflow_Zone3_Stat = 48,
        HVAC_Airflow_Zone4_Disp_Rq = 49,
        HVAC_Airflow_Zone4_Stat = 50,
        HVAC_Auto_RL_Psd_HVAC_R = 51,
        HVAC_Auto_RR_Psd_HVAC_R = 52,
        HVAC_Auto_Zone1_Stat = 53,
        HVAC_Auto_Zone2_Stat = 54,
        HVAC_Auto_Zone3_Stat = 55,
        HVAC_Auto_Zone4_Stat = 56,
        HVAC_Dfrst_Z1Z2_Actv = 57,
        HVAC_DispCont_RL = 58,
        HVAC_DispCont_RR = 59,
        HVAC_FanLvl_RL_Rq_HVAC_R = 60,
        HVAC_FanLvl_RR_Rq_HVAC_R = 61,
        HVAC_FanMax_R = 62,
        HVAC_FanMin_R = 63,
        HVAC_Fan_AirDistChg_RL_HVAC_R = 64,
        HVAC_Fan_AirDistChg_RR_HVAC_R = 65,
        HVAC_Fan_Zone1_Disp_Rq = 66,
        HVAC_Fan_Zone1_Stat = 67,
        HVAC_Fan_Zone2_Disp_Rq = 68,
        HVAC_Fan_Zone2_Stat = 69,
        HVAC_Fan_Zone3_Disp_Rq = 70,
        HVAC_Fan_Zone3_Stat = 71,
        HVAC_Fan_Zone4_Disp_Rq = 72,
        HVAC_Fan_Zone4_Stat = 73,
        HVAC_FtwInc_RL_Rq_HVAC_R = 74,
        HVAC_FtwInc_RR_Rq_HVAC_R = 75,
        HVAC_FtwInc_Zone1_Disp_Rq = 76,
        HVAC_FtwInc_Zone1_Stat = 77,
        HVAC_FtwInc_Zone2_Disp_Rq = 78,
        HVAC_FtwInc_Zone2_Stat = 79,
        HVAC_FtwInc_Zone3_Disp_Rq = 80,
        HVAC_FtwInc_Zone3_Stat = 81,
        HVAC_FtwInc_Zone4_Disp_Rq = 82,
        HVAC_FtwInc_Zone4_Stat = 83,
        HVAC_ICH1_2_LED_On_Rq = 84,
        HVAC_ICH_PreTm_LED_On_Rq = 85,
        HVAC_ICH_TxmtSync_Actv = 86,
        HVAC_MaxCool_R_Psd_HVAC_R = 87,
        HVAC_MaxCool_Z1Z2_Actv = 88,
        HVAC_MaxCool_Z3Z4_Actv = 89,
        HVAC_Menu1_2_Disp_LED_On_Rq = 90,
        HVAC_Menu3_4_Disp_LED_On_Rq = 91,
        HVAC_Mono_Actv = 92,
        HVAC_Mono_R_Psd_HVAC_R = 93,
        HVAC_NumOfAirDistPosn_R = 94,
        HVAC_Off_R_Psd_HVAC_R = 95,
        HVAC_Off_Z1Z2_Actv = 96,
        HVAC_Off_Z3Z4_Actv = 97,
        HVAC_OprtnVoltRng_Ok = 98,
        HVAC_RHU_R_Psd_HVAC_R = 99,
        HVAC_RHU_Z1Z2_Actv = 100,
        HVAC_RHU_Z3Z4_Actv = 101,
        HVAC_Rear_Reset_Rq = 102,
        HVAC_RecircAir_Z1Z2_Actv = 103,
        HVAC_Rem1_2_Disp_LED_On_Rq = 104,
        HVAC_Rem3_4_Disp_LED_On_Rq = 105,
        HVAC_Rem_R_Psd_HVAC_R = 106,
        HVAC_SelfChg_AirDistDsp1_Enbl = 107,
        HVAC_SelfChg_AirDistDsp2_Enbl = 108,
        HVAC_SelfChg_AirDistDsp3_Enbl = 109,
        HVAC_SelfChg_AirDistDsp4_Enbl = 110,
        HVAC_SelfChg_FanDisp1_Enbl = 111,
        HVAC_SelfChg_FanDisp2_Enbl = 112,
        HVAC_SelfChg_FanDisp3_Enbl = 113,
        HVAC_SelfChg_FanDisp4_Enbl = 114,
        HVAC_SelfChg_TempDisp1_Enbl = 115,
        HVAC_SelfChg_TempDisp2_Enbl = 116,
        HVAC_SelfChg_TempDisp3_Enbl = 117,
        HVAC_SelfChg_TempDisp4_Enbl = 118,
        HVAC_SwLED_Test_Rq = 119,
        HVAC_TempMax_R = 120,
        HVAC_TempMin_R = 121,
        HVAC_Temp_RL_Rq_HVAC_R_V2 = 122,
        HVAC_Temp_RR_Rq_HVAC_R_V2 = 123,
        HVAC_Temp_Zone1_Disp_Rq = 124,
        HVAC_Temp_Zone1_Stat = 125,
        HVAC_Temp_Zone2_Disp_Rq = 126,
        HVAC_Temp_Zone2_Stat = 127,
        HVAC_Temp_Zone3_Disp_Rq = 128,
        HVAC_Temp_Zone3_Stat = 129,
        HVAC_Temp_Zone4_Disp_Rq = 130,
        HVAC_Temp_Zone4_Stat = 131,
        HVAC_Zone1_Disp_Off = 132,
        HVAC_Zone2_Disp_Off = 133,
        HVAC_Zone3_Disp_Off = 134,
        HVAC_Zone4_Disp_Off = 135,
        HVAC_Zone_Chgovr_FL = 136,
        HVAC_Zone_Chgovr_FR = 137,
        HVAC_Zone_Chgovr_RL = 138,
        HVAC_Zone_Chgovr_RR = 139,
        ISw_Stat_LIN = 140,
        LgtSens_Night_LIN = 141,
        RsErr_HVAC_R = 142,
        SwIllLvl = 143,
        UnitTemp_Rq = 144,
        WakeupStat_HVAC_R = 145
     }LIN_LDF_SIG_INFO;


/* Mapping of dynamic functions */

     #define l_u8_rd(SIGNAL) l_u8_rd_##SIGNAL()
     #define l_u8_wr(SIGNAL, A) l_u8_wr_##SIGNAL(A)

/* defines for signal access */
     #define LIN_BYTE_OFFSET_MasterReqB0    0
     #define LIN_BIT_OFFSET_MasterReqB0     0
     #define LIN_SIGNAL_SIZE_MasterReqB0    8

     #define LIN_BYTE_OFFSET_MasterReqB1    1
     #define LIN_BIT_OFFSET_MasterReqB1     0
     #define LIN_SIGNAL_SIZE_MasterReqB1    8

     #define LIN_BYTE_OFFSET_MasterReqB2    2
     #define LIN_BIT_OFFSET_MasterReqB2     0
     #define LIN_SIGNAL_SIZE_MasterReqB2    8

     #define LIN_BYTE_OFFSET_MasterReqB3    3
     #define LIN_BIT_OFFSET_MasterReqB3     0
     #define LIN_SIGNAL_SIZE_MasterReqB3    8

     #define LIN_BYTE_OFFSET_MasterReqB4    4
     #define LIN_BIT_OFFSET_MasterReqB4     0
     #define LIN_SIGNAL_SIZE_MasterReqB4    8

     #define LIN_BYTE_OFFSET_MasterReqB5    5
     #define LIN_BIT_OFFSET_MasterReqB5     0
     #define LIN_SIGNAL_SIZE_MasterReqB5    8

     #define LIN_BYTE_OFFSET_MasterReqB6    6
     #define LIN_BIT_OFFSET_MasterReqB6     0
     #define LIN_SIGNAL_SIZE_MasterReqB6    8

     #define LIN_BYTE_OFFSET_MasterReqB7    7
     #define LIN_BIT_OFFSET_MasterReqB7     0
     #define LIN_SIGNAL_SIZE_MasterReqB7    8

     #define LIN_BYTE_OFFSET_SlaveRespB0    0
     #define LIN_BIT_OFFSET_SlaveRespB0     0
     #define LIN_SIGNAL_SIZE_SlaveRespB0    8

     #define LIN_BYTE_OFFSET_SlaveRespB1    1
     #define LIN_BIT_OFFSET_SlaveRespB1     0
     #define LIN_SIGNAL_SIZE_SlaveRespB1    8

     #define LIN_BYTE_OFFSET_SlaveRespB2    2
     #define LIN_BIT_OFFSET_SlaveRespB2     0
     #define LIN_SIGNAL_SIZE_SlaveRespB2    8

     #define LIN_BYTE_OFFSET_SlaveRespB3    3
     #define LIN_BIT_OFFSET_SlaveRespB3     0
     #define LIN_SIGNAL_SIZE_SlaveRespB3    8

     #define LIN_BYTE_OFFSET_SlaveRespB4    4
     #define LIN_BIT_OFFSET_SlaveRespB4     0
     #define LIN_SIGNAL_SIZE_SlaveRespB4    8

     #define LIN_BYTE_OFFSET_SlaveRespB5    5
     #define LIN_BIT_OFFSET_SlaveRespB5     0
     #define LIN_SIGNAL_SIZE_SlaveRespB5    8

     #define LIN_BYTE_OFFSET_SlaveRespB6    6
     #define LIN_BIT_OFFSET_SlaveRespB6     0
     #define LIN_SIGNAL_SIZE_SlaveRespB6    8

     #define LIN_BYTE_OFFSET_SlaveRespB7    7
     #define LIN_BIT_OFFSET_SlaveRespB7     0
     #define LIN_SIGNAL_SIZE_SlaveRespB7    8

/* static access macros for signalLIN_SIGNAL_MasterReqB0 */
     #define l_u8_rd_LIN_SIGNAL_MasterReqB0() l_u8_rd_MasterReqB0()
     #define l_u8_wr_LIN_SIGNAL_MasterReqB0(A) l_u8_wr_MasterReqB0(A)

     #define l_u8_rd_MasterReqB0() \
     ((Lin_DiagRxFifo[Lin_DiagRxFifoRdIdx][LIN_BYTE_OFFSET_MasterReqB0] & \
     (((1U << LIN_SIGNAL_SIZE_MasterReqB0)- 1) \
     << LIN_BIT_OFFSET_MasterReqB0)) >> LIN_BIT_OFFSET_MasterReqB0); \
     Lin_DiagRxFifoRdIdx ++ ;  \
     if ( Lin_DiagRxFifoRdIdx >= _DGNSTC_RBUFF_SZ ) \
     { Lin_DiagRxFifoRdIdx = 0; }

     #define l_u8_wr_MasterReqB0(A) \
     do {Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_MasterReqB0] = \
     (Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_MasterReqB0] & \
     ((uint8) (~(((1U << LIN_SIGNAL_SIZE_MasterReqB0) - 1) \
     << LIN_BIT_OFFSET_MasterReqB0))))  | \
     ((((1U << LIN_SIGNAL_SIZE_MasterReqB0) - 1) & (A)) \
     << LIN_BIT_OFFSET_MasterReqB0); \
     } while(0);\
     Lin_DiagTxFifoWrIdx ++;\
     if ( Lin_DiagTxFifoWrIdx >= _DGNSTC_TBUFF_SZ ) \
     { Lin_DiagTxFifoWrIdx =  0; }


/* static access macros for signalLIN_SIGNAL_MasterReqB1 */
     #define l_u8_rd_LIN_SIGNAL_MasterReqB1() l_u8_rd_MasterReqB1()
     #define l_u8_wr_LIN_SIGNAL_MasterReqB1(A) l_u8_wr_MasterReqB1(A)

     #define l_u8_rd_MasterReqB1() \
     ((Lin_DiagRxFifo[Lin_DiagRxFifoRdIdx][LIN_BYTE_OFFSET_MasterReqB1] & \
     (((1U << LIN_SIGNAL_SIZE_MasterReqB1)- 1) \
     << LIN_BIT_OFFSET_MasterReqB1)) >> LIN_BIT_OFFSET_MasterReqB1); \
     Lin_DiagRxFifoRdIdx ++ ;  \
     if ( Lin_DiagRxFifoRdIdx >= _DGNSTC_RBUFF_SZ ) \
     { Lin_DiagRxFifoRdIdx = 0; }

     #define l_u8_wr_MasterReqB1(A) \
     do {Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_MasterReqB1] = \
     (Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_MasterReqB1] & \
     ((uint8) (~(((1U << LIN_SIGNAL_SIZE_MasterReqB1) - 1) \
     << LIN_BIT_OFFSET_MasterReqB1))))  | \
     ((((1U << LIN_SIGNAL_SIZE_MasterReqB1) - 1) & (A)) \
     << LIN_BIT_OFFSET_MasterReqB1); \
     } while(0);\
     Lin_DiagTxFifoWrIdx ++;\
     if ( Lin_DiagTxFifoWrIdx >= _DGNSTC_TBUFF_SZ ) \
     { Lin_DiagTxFifoWrIdx =  0; }


/* static access macros for signalLIN_SIGNAL_MasterReqB2 */
     #define l_u8_rd_LIN_SIGNAL_MasterReqB2() l_u8_rd_MasterReqB2()
     #define l_u8_wr_LIN_SIGNAL_MasterReqB2(A) l_u8_wr_MasterReqB2(A)

     #define l_u8_rd_MasterReqB2() \
     ((Lin_DiagRxFifo[Lin_DiagRxFifoRdIdx][LIN_BYTE_OFFSET_MasterReqB2] & \
     (((1U << LIN_SIGNAL_SIZE_MasterReqB2)- 1) \
     << LIN_BIT_OFFSET_MasterReqB2)) >> LIN_BIT_OFFSET_MasterReqB2); \
     Lin_DiagRxFifoRdIdx ++ ;  \
     if ( Lin_DiagRxFifoRdIdx >= _DGNSTC_RBUFF_SZ ) \
     { Lin_DiagRxFifoRdIdx = 0; }

     #define l_u8_wr_MasterReqB2(A) \
     do {Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_MasterReqB2] = \
     (Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_MasterReqB2] & \
     ((uint8) (~(((1U << LIN_SIGNAL_SIZE_MasterReqB2) - 1) \
     << LIN_BIT_OFFSET_MasterReqB2))))  | \
     ((((1U << LIN_SIGNAL_SIZE_MasterReqB2) - 1) & (A)) \
     << LIN_BIT_OFFSET_MasterReqB2); \
     } while(0);\
     Lin_DiagTxFifoWrIdx ++;\
     if ( Lin_DiagTxFifoWrIdx >= _DGNSTC_TBUFF_SZ ) \
     { Lin_DiagTxFifoWrIdx =  0; }


/* static access macros for signalLIN_SIGNAL_MasterReqB3 */
     #define l_u8_rd_LIN_SIGNAL_MasterReqB3() l_u8_rd_MasterReqB3()
     #define l_u8_wr_LIN_SIGNAL_MasterReqB3(A) l_u8_wr_MasterReqB3(A)

     #define l_u8_rd_MasterReqB3() \
     ((Lin_DiagRxFifo[Lin_DiagRxFifoRdIdx][LIN_BYTE_OFFSET_MasterReqB3] & \
     (((1U << LIN_SIGNAL_SIZE_MasterReqB3)- 1) \
     << LIN_BIT_OFFSET_MasterReqB3)) >> LIN_BIT_OFFSET_MasterReqB3); \
     Lin_DiagRxFifoRdIdx ++ ;  \
     if ( Lin_DiagRxFifoRdIdx >= _DGNSTC_RBUFF_SZ ) \
     { Lin_DiagRxFifoRdIdx = 0; }

     #define l_u8_wr_MasterReqB3(A) \
     do {Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_MasterReqB3] = \
     (Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_MasterReqB3] & \
     ((uint8) (~(((1U << LIN_SIGNAL_SIZE_MasterReqB3) - 1) \
     << LIN_BIT_OFFSET_MasterReqB3))))  | \
     ((((1U << LIN_SIGNAL_SIZE_MasterReqB3) - 1) & (A)) \
     << LIN_BIT_OFFSET_MasterReqB3); \
     } while(0);\
     Lin_DiagTxFifoWrIdx ++;\
     if ( Lin_DiagTxFifoWrIdx >= _DGNSTC_TBUFF_SZ ) \
     { Lin_DiagTxFifoWrIdx =  0; }


/* static access macros for signalLIN_SIGNAL_MasterReqB4 */
     #define l_u8_rd_LIN_SIGNAL_MasterReqB4() l_u8_rd_MasterReqB4()
     #define l_u8_wr_LIN_SIGNAL_MasterReqB4(A) l_u8_wr_MasterReqB4(A)

     #define l_u8_rd_MasterReqB4() \
     ((Lin_DiagRxFifo[Lin_DiagRxFifoRdIdx][LIN_BYTE_OFFSET_MasterReqB4] & \
     (((1U << LIN_SIGNAL_SIZE_MasterReqB4)- 1) \
     << LIN_BIT_OFFSET_MasterReqB4)) >> LIN_BIT_OFFSET_MasterReqB4); \
     Lin_DiagRxFifoRdIdx ++ ;  \
     if ( Lin_DiagRxFifoRdIdx >= _DGNSTC_RBUFF_SZ ) \
     { Lin_DiagRxFifoRdIdx = 0; }

     #define l_u8_wr_MasterReqB4(A) \
     do {Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_MasterReqB4] = \
     (Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_MasterReqB4] & \
     ((uint8) (~(((1U << LIN_SIGNAL_SIZE_MasterReqB4) - 1) \
     << LIN_BIT_OFFSET_MasterReqB4))))  | \
     ((((1U << LIN_SIGNAL_SIZE_MasterReqB4) - 1) & (A)) \
     << LIN_BIT_OFFSET_MasterReqB4); \
     } while(0);\
     Lin_DiagTxFifoWrIdx ++;\
     if ( Lin_DiagTxFifoWrIdx >= _DGNSTC_TBUFF_SZ ) \
     { Lin_DiagTxFifoWrIdx =  0; }


/* static access macros for signalLIN_SIGNAL_MasterReqB5 */
     #define l_u8_rd_LIN_SIGNAL_MasterReqB5() l_u8_rd_MasterReqB5()
     #define l_u8_wr_LIN_SIGNAL_MasterReqB5(A) l_u8_wr_MasterReqB5(A)

     #define l_u8_rd_MasterReqB5() \
     ((Lin_DiagRxFifo[Lin_DiagRxFifoRdIdx][LIN_BYTE_OFFSET_MasterReqB5] & \
     (((1U << LIN_SIGNAL_SIZE_MasterReqB5)- 1) \
     << LIN_BIT_OFFSET_MasterReqB5)) >> LIN_BIT_OFFSET_MasterReqB5); \
     Lin_DiagRxFifoRdIdx ++ ;  \
     if ( Lin_DiagRxFifoRdIdx >= _DGNSTC_RBUFF_SZ ) \
     { Lin_DiagRxFifoRdIdx = 0; }

     #define l_u8_wr_MasterReqB5(A) \
     do {Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_MasterReqB5] = \
     (Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_MasterReqB5] & \
     ((uint8) (~(((1U << LIN_SIGNAL_SIZE_MasterReqB5) - 1) \
     << LIN_BIT_OFFSET_MasterReqB5))))  | \
     ((((1U << LIN_SIGNAL_SIZE_MasterReqB5) - 1) & (A)) \
     << LIN_BIT_OFFSET_MasterReqB5); \
     } while(0);\
     Lin_DiagTxFifoWrIdx ++;\
     if ( Lin_DiagTxFifoWrIdx >= _DGNSTC_TBUFF_SZ ) \
     { Lin_DiagTxFifoWrIdx =  0; }


/* static access macros for signalLIN_SIGNAL_MasterReqB6 */
     #define l_u8_rd_LIN_SIGNAL_MasterReqB6() l_u8_rd_MasterReqB6()
     #define l_u8_wr_LIN_SIGNAL_MasterReqB6(A) l_u8_wr_MasterReqB6(A)

     #define l_u8_rd_MasterReqB6() \
     ((Lin_DiagRxFifo[Lin_DiagRxFifoRdIdx][LIN_BYTE_OFFSET_MasterReqB6] & \
     (((1U << LIN_SIGNAL_SIZE_MasterReqB6)- 1) \
     << LIN_BIT_OFFSET_MasterReqB6)) >> LIN_BIT_OFFSET_MasterReqB6); \
     Lin_DiagRxFifoRdIdx ++ ;  \
     if ( Lin_DiagRxFifoRdIdx >= _DGNSTC_RBUFF_SZ ) \
     { Lin_DiagRxFifoRdIdx = 0; }

     #define l_u8_wr_MasterReqB6(A) \
     do {Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_MasterReqB6] = \
     (Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_MasterReqB6] & \
     ((uint8) (~(((1U << LIN_SIGNAL_SIZE_MasterReqB6) - 1) \
     << LIN_BIT_OFFSET_MasterReqB6))))  | \
     ((((1U << LIN_SIGNAL_SIZE_MasterReqB6) - 1) & (A)) \
     << LIN_BIT_OFFSET_MasterReqB6); \
     } while(0);\
     Lin_DiagTxFifoWrIdx ++;\
     if ( Lin_DiagTxFifoWrIdx >= _DGNSTC_TBUFF_SZ ) \
     { Lin_DiagTxFifoWrIdx =  0; }


/* static access macros for signalLIN_SIGNAL_MasterReqB7 */
     #define l_u8_rd_LIN_SIGNAL_MasterReqB7() l_u8_rd_MasterReqB7()
     #define l_u8_wr_LIN_SIGNAL_MasterReqB7(A) l_u8_wr_MasterReqB7(A)

     #define l_u8_rd_MasterReqB7() \
     ((Lin_DiagRxFifo[Lin_DiagRxFifoRdIdx][LIN_BYTE_OFFSET_MasterReqB7] & \
     (((1U << LIN_SIGNAL_SIZE_MasterReqB7)- 1) \
     << LIN_BIT_OFFSET_MasterReqB7)) >> LIN_BIT_OFFSET_MasterReqB7); \
     Lin_DiagRxFifoRdIdx ++ ;  \
     if ( Lin_DiagRxFifoRdIdx >= _DGNSTC_RBUFF_SZ ) \
     { Lin_DiagRxFifoRdIdx = 0; }

     #define l_u8_wr_MasterReqB7(A) \
     do {Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_MasterReqB7] = \
     (Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_MasterReqB7] & \
     ((uint8) (~(((1U << LIN_SIGNAL_SIZE_MasterReqB7) - 1) \
     << LIN_BIT_OFFSET_MasterReqB7))))  | \
     ((((1U << LIN_SIGNAL_SIZE_MasterReqB7) - 1) & (A)) \
     << LIN_BIT_OFFSET_MasterReqB7); \
     } while(0);\
     Lin_DiagTxFifoWrIdx ++;\
     if ( Lin_DiagTxFifoWrIdx >= _DGNSTC_TBUFF_SZ ) \
     { Lin_DiagTxFifoWrIdx =  0; }


/* static access macros for signalLIN_SIGNAL_SlaveRespB0 */
     #define l_u8_rd_LIN_SIGNAL_SlaveRespB0() l_u8_rd_SlaveRespB0()
     #define l_u8_wr_LIN_SIGNAL_SlaveRespB0(A) l_u8_wr_SlaveRespB0(A)

     #define l_u8_rd_SlaveRespB0() \
     ((Lin_DiagRxFifo[Lin_DiagRxFifoRdIdx][LIN_BYTE_OFFSET_SlaveRespB0] & \
     (((1U << LIN_SIGNAL_SIZE_SlaveRespB0)- 1) \
     << LIN_BIT_OFFSET_SlaveRespB0)) >> LIN_BIT_OFFSET_SlaveRespB0); \
     Lin_DiagRxFifoRdIdx ++ ;  \
     if ( Lin_DiagRxFifoRdIdx >= _DGNSTC_RBUFF_SZ ) \
     { Lin_DiagRxFifoRdIdx = 0; }

     #define l_u8_wr_SlaveRespB0(A) \
     do {Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_SlaveRespB0] = \
     (Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_SlaveRespB0] & \
     ((uint8) (~(((1U << LIN_SIGNAL_SIZE_SlaveRespB0) - 1) \
     << LIN_BIT_OFFSET_SlaveRespB0))))  | \
     ((((1U << LIN_SIGNAL_SIZE_SlaveRespB0) - 1) & (A)) \
     << LIN_BIT_OFFSET_SlaveRespB0); \
     } while(0);\
     Lin_DiagTxFifoWrIdx ++;\
     if ( Lin_DiagTxFifoWrIdx >= _DGNSTC_TBUFF_SZ ) \
     { Lin_DiagTxFifoWrIdx =  0; }


/* static access macros for signalLIN_SIGNAL_SlaveRespB1 */
     #define l_u8_rd_LIN_SIGNAL_SlaveRespB1() l_u8_rd_SlaveRespB1()
     #define l_u8_wr_LIN_SIGNAL_SlaveRespB1(A) l_u8_wr_SlaveRespB1(A)

     #define l_u8_rd_SlaveRespB1() \
     ((Lin_DiagRxFifo[Lin_DiagRxFifoRdIdx][LIN_BYTE_OFFSET_SlaveRespB1] & \
     (((1U << LIN_SIGNAL_SIZE_SlaveRespB1)- 1) \
     << LIN_BIT_OFFSET_SlaveRespB1)) >> LIN_BIT_OFFSET_SlaveRespB1); \
     Lin_DiagRxFifoRdIdx ++ ;  \
     if ( Lin_DiagRxFifoRdIdx >= _DGNSTC_RBUFF_SZ ) \
     { Lin_DiagRxFifoRdIdx = 0; }

     #define l_u8_wr_SlaveRespB1(A) \
     do {Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_SlaveRespB1] = \
     (Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_SlaveRespB1] & \
     ((uint8) (~(((1U << LIN_SIGNAL_SIZE_SlaveRespB1) - 1) \
     << LIN_BIT_OFFSET_SlaveRespB1))))  | \
     ((((1U << LIN_SIGNAL_SIZE_SlaveRespB1) - 1) & (A)) \
     << LIN_BIT_OFFSET_SlaveRespB1); \
     } while(0);\
     Lin_DiagTxFifoWrIdx ++;\
     if ( Lin_DiagTxFifoWrIdx >= _DGNSTC_TBUFF_SZ ) \
     { Lin_DiagTxFifoWrIdx =  0; }


/* static access macros for signalLIN_SIGNAL_SlaveRespB2 */
     #define l_u8_rd_LIN_SIGNAL_SlaveRespB2() l_u8_rd_SlaveRespB2()
     #define l_u8_wr_LIN_SIGNAL_SlaveRespB2(A) l_u8_wr_SlaveRespB2(A)

     #define l_u8_rd_SlaveRespB2() \
     ((Lin_DiagRxFifo[Lin_DiagRxFifoRdIdx][LIN_BYTE_OFFSET_SlaveRespB2] & \
     (((1U << LIN_SIGNAL_SIZE_SlaveRespB2)- 1) \
     << LIN_BIT_OFFSET_SlaveRespB2)) >> LIN_BIT_OFFSET_SlaveRespB2); \
     Lin_DiagRxFifoRdIdx ++ ;  \
     if ( Lin_DiagRxFifoRdIdx >= _DGNSTC_RBUFF_SZ ) \
     { Lin_DiagRxFifoRdIdx = 0; }

     #define l_u8_wr_SlaveRespB2(A) \
     do {Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_SlaveRespB2] = \
     (Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_SlaveRespB2] & \
     ((uint8) (~(((1U << LIN_SIGNAL_SIZE_SlaveRespB2) - 1) \
     << LIN_BIT_OFFSET_SlaveRespB2))))  | \
     ((((1U << LIN_SIGNAL_SIZE_SlaveRespB2) - 1) & (A)) \
     << LIN_BIT_OFFSET_SlaveRespB2); \
     } while(0);\
     Lin_DiagTxFifoWrIdx ++;\
     if ( Lin_DiagTxFifoWrIdx >= _DGNSTC_TBUFF_SZ ) \
     { Lin_DiagTxFifoWrIdx =  0; }


/* static access macros for signalLIN_SIGNAL_SlaveRespB3 */
     #define l_u8_rd_LIN_SIGNAL_SlaveRespB3() l_u8_rd_SlaveRespB3()
     #define l_u8_wr_LIN_SIGNAL_SlaveRespB3(A) l_u8_wr_SlaveRespB3(A)

     #define l_u8_rd_SlaveRespB3() \
     ((Lin_DiagRxFifo[Lin_DiagRxFifoRdIdx][LIN_BYTE_OFFSET_SlaveRespB3] & \
     (((1U << LIN_SIGNAL_SIZE_SlaveRespB3)- 1) \
     << LIN_BIT_OFFSET_SlaveRespB3)) >> LIN_BIT_OFFSET_SlaveRespB3); \
     Lin_DiagRxFifoRdIdx ++ ;  \
     if ( Lin_DiagRxFifoRdIdx >= _DGNSTC_RBUFF_SZ ) \
     { Lin_DiagRxFifoRdIdx = 0; }

     #define l_u8_wr_SlaveRespB3(A) \
     do {Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_SlaveRespB3] = \
     (Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_SlaveRespB3] & \
     ((uint8) (~(((1U << LIN_SIGNAL_SIZE_SlaveRespB3) - 1) \
     << LIN_BIT_OFFSET_SlaveRespB3))))  | \
     ((((1U << LIN_SIGNAL_SIZE_SlaveRespB3) - 1) & (A)) \
     << LIN_BIT_OFFSET_SlaveRespB3); \
     } while(0);\
     Lin_DiagTxFifoWrIdx ++;\
     if ( Lin_DiagTxFifoWrIdx >= _DGNSTC_TBUFF_SZ ) \
     { Lin_DiagTxFifoWrIdx =  0; }


/* static access macros for signalLIN_SIGNAL_SlaveRespB4 */
     #define l_u8_rd_LIN_SIGNAL_SlaveRespB4() l_u8_rd_SlaveRespB4()
     #define l_u8_wr_LIN_SIGNAL_SlaveRespB4(A) l_u8_wr_SlaveRespB4(A)

     #define l_u8_rd_SlaveRespB4() \
     ((Lin_DiagRxFifo[Lin_DiagRxFifoRdIdx][LIN_BYTE_OFFSET_SlaveRespB4] & \
     (((1U << LIN_SIGNAL_SIZE_SlaveRespB4)- 1) \
     << LIN_BIT_OFFSET_SlaveRespB4)) >> LIN_BIT_OFFSET_SlaveRespB4); \
     Lin_DiagRxFifoRdIdx ++ ;  \
     if ( Lin_DiagRxFifoRdIdx >= _DGNSTC_RBUFF_SZ ) \
     { Lin_DiagRxFifoRdIdx = 0; }

     #define l_u8_wr_SlaveRespB4(A) \
     do {Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_SlaveRespB4] = \
     (Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_SlaveRespB4] & \
     ((uint8) (~(((1U << LIN_SIGNAL_SIZE_SlaveRespB4) - 1) \
     << LIN_BIT_OFFSET_SlaveRespB4))))  | \
     ((((1U << LIN_SIGNAL_SIZE_SlaveRespB4) - 1) & (A)) \
     << LIN_BIT_OFFSET_SlaveRespB4); \
     } while(0);\
     Lin_DiagTxFifoWrIdx ++;\
     if ( Lin_DiagTxFifoWrIdx >= _DGNSTC_TBUFF_SZ ) \
     { Lin_DiagTxFifoWrIdx =  0; }


/* static access macros for signalLIN_SIGNAL_SlaveRespB5 */
     #define l_u8_rd_LIN_SIGNAL_SlaveRespB5() l_u8_rd_SlaveRespB5()
     #define l_u8_wr_LIN_SIGNAL_SlaveRespB5(A) l_u8_wr_SlaveRespB5(A)

     #define l_u8_rd_SlaveRespB5() \
     ((Lin_DiagRxFifo[Lin_DiagRxFifoRdIdx][LIN_BYTE_OFFSET_SlaveRespB5] & \
     (((1U << LIN_SIGNAL_SIZE_SlaveRespB5)- 1) \
     << LIN_BIT_OFFSET_SlaveRespB5)) >> LIN_BIT_OFFSET_SlaveRespB5); \
     Lin_DiagRxFifoRdIdx ++ ;  \
     if ( Lin_DiagRxFifoRdIdx >= _DGNSTC_RBUFF_SZ ) \
     { Lin_DiagRxFifoRdIdx = 0; }

     #define l_u8_wr_SlaveRespB5(A) \
     do {Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_SlaveRespB5] = \
     (Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_SlaveRespB5] & \
     ((uint8) (~(((1U << LIN_SIGNAL_SIZE_SlaveRespB5) - 1) \
     << LIN_BIT_OFFSET_SlaveRespB5))))  | \
     ((((1U << LIN_SIGNAL_SIZE_SlaveRespB5) - 1) & (A)) \
     << LIN_BIT_OFFSET_SlaveRespB5); \
     } while(0);\
     Lin_DiagTxFifoWrIdx ++;\
     if ( Lin_DiagTxFifoWrIdx >= _DGNSTC_TBUFF_SZ ) \
     { Lin_DiagTxFifoWrIdx =  0; }


/* static access macros for signalLIN_SIGNAL_SlaveRespB6 */
     #define l_u8_rd_LIN_SIGNAL_SlaveRespB6() l_u8_rd_SlaveRespB6()
     #define l_u8_wr_LIN_SIGNAL_SlaveRespB6(A) l_u8_wr_SlaveRespB6(A)

     #define l_u8_rd_SlaveRespB6() \
     ((Lin_DiagRxFifo[Lin_DiagRxFifoRdIdx][LIN_BYTE_OFFSET_SlaveRespB6] & \
     (((1U << LIN_SIGNAL_SIZE_SlaveRespB6)- 1) \
     << LIN_BIT_OFFSET_SlaveRespB6)) >> LIN_BIT_OFFSET_SlaveRespB6); \
     Lin_DiagRxFifoRdIdx ++ ;  \
     if ( Lin_DiagRxFifoRdIdx >= _DGNSTC_RBUFF_SZ ) \
     { Lin_DiagRxFifoRdIdx = 0; }

     #define l_u8_wr_SlaveRespB6(A) \
     do {Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_SlaveRespB6] = \
     (Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_SlaveRespB6] & \
     ((uint8) (~(((1U << LIN_SIGNAL_SIZE_SlaveRespB6) - 1) \
     << LIN_BIT_OFFSET_SlaveRespB6))))  | \
     ((((1U << LIN_SIGNAL_SIZE_SlaveRespB6) - 1) & (A)) \
     << LIN_BIT_OFFSET_SlaveRespB6); \
     } while(0);\
     Lin_DiagTxFifoWrIdx ++;\
     if ( Lin_DiagTxFifoWrIdx >= _DGNSTC_TBUFF_SZ ) \
     { Lin_DiagTxFifoWrIdx =  0; }


/* static access macros for signalLIN_SIGNAL_SlaveRespB7 */
     #define l_u8_rd_LIN_SIGNAL_SlaveRespB7() l_u8_rd_SlaveRespB7()
     #define l_u8_wr_LIN_SIGNAL_SlaveRespB7(A) l_u8_wr_SlaveRespB7(A)

     #define l_u8_rd_SlaveRespB7() \
     ((Lin_DiagRxFifo[Lin_DiagRxFifoRdIdx][LIN_BYTE_OFFSET_SlaveRespB7] & \
     (((1U << LIN_SIGNAL_SIZE_SlaveRespB7)- 1) \
     << LIN_BIT_OFFSET_SlaveRespB7)) >> LIN_BIT_OFFSET_SlaveRespB7); \
     Lin_DiagRxFifoRdIdx ++ ;  \
     if ( Lin_DiagRxFifoRdIdx >= _DGNSTC_RBUFF_SZ ) \
     { Lin_DiagRxFifoRdIdx = 0; }

     #define l_u8_wr_SlaveRespB7(A) \
     do {Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_SlaveRespB7] = \
     (Lin_DiagTxFifo[Lin_DiagTxFifoWrIdx][LIN_BYTE_OFFSET_SlaveRespB7] & \
     ((uint8) (~(((1U << LIN_SIGNAL_SIZE_SlaveRespB7) - 1) \
     << LIN_BIT_OFFSET_SlaveRespB7))))  | \
     ((((1U << LIN_SIGNAL_SIZE_SlaveRespB7) - 1) & (A)) \
     << LIN_BIT_OFFSET_SlaveRespB7); \
     } while(0);\
     Lin_DiagTxFifoWrIdx ++;\
     if ( Lin_DiagTxFifoWrIdx >= _DGNSTC_TBUFF_SZ ) \
     { Lin_DiagTxFifoWrIdx =  0; }


     #define LIN_BYTE_OFFSET_DispBrt_IC   28
     #define LIN_BIT_OFFSET_DispBrt_IC    0
     #define LIN_SIGNAL_SIZE_DispBrt_IC   8

     #define LIN_BYTE_OFFSET_EBL_Stat   5
     #define LIN_BIT_OFFSET_EBL_Stat    5
     #define LIN_SIGNAL_SIZE_EBL_Stat   2

     #define LIN_BYTE_OFFSET_HVAC_AC_R_Psd_HVAC_R   40
     #define LIN_BIT_OFFSET_HVAC_AC_R_Psd_HVAC_R    6
     #define LIN_SIGNAL_SIZE_HVAC_AC_R_Psd_HVAC_R   1

     #define LIN_BYTE_OFFSET_HVAC_AC_Z1Z2_Actv   0
     #define LIN_BIT_OFFSET_HVAC_AC_Z1Z2_Actv    6
     #define LIN_SIGNAL_SIZE_HVAC_AC_Z1Z2_Actv   1

     #define LIN_BYTE_OFFSET_HVAC_AC_Z3Z4_Actv   16
     #define LIN_BIT_OFFSET_HVAC_AC_Z3Z4_Actv    6
     #define LIN_SIGNAL_SIZE_HVAC_AC_Z3Z4_Actv   1

     #define LIN_BYTE_OFFSET_HVAC_Ag_ResSymb_Enbl   26
     #define LIN_BIT_OFFSET_HVAC_Ag_ResSymb_Enbl    3
     #define LIN_SIGNAL_SIZE_HVAC_Ag_ResSymb_Enbl   1

     #define LIN_BYTE_OFFSET_HVAC_Ag_ResSymb_On_Rq   25
     #define LIN_BIT_OFFSET_HVAC_Ag_ResSymb_On_Rq    0
     #define LIN_SIGNAL_SIZE_HVAC_Ag_ResSymb_On_Rq   7

     #define LIN_BYTE_OFFSET_HVAC_Ag_ResSymb_Tmr   26
     #define LIN_BIT_OFFSET_HVAC_Ag_ResSymb_Tmr    4
     #define LIN_SIGNAL_SIZE_HVAC_Ag_ResSymb_Tmr   1

     #define LIN_BYTE_OFFSET_HVAC_AirDist_RL_Rq_HVAC_R   45
     #define LIN_BIT_OFFSET_HVAC_AirDist_RL_Rq_HVAC_R    4
     #define LIN_SIGNAL_SIZE_HVAC_AirDist_RL_Rq_HVAC_R   4

     #define LIN_BYTE_OFFSET_HVAC_AirDist_RR_Rq_HVAC_R   45
     #define LIN_BIT_OFFSET_HVAC_AirDist_RR_Rq_HVAC_R    0
     #define LIN_SIGNAL_SIZE_HVAC_AirDist_RR_Rq_HVAC_R   4

     #define LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn1   32
     #define LIN_BIT_OFFSET_HVAC_AirDist_R_Posn1    3
     #define LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn1   4

     #define LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn2   33
     #define LIN_BIT_OFFSET_HVAC_AirDist_R_Posn2    0
     #define LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn2   4

     #define LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn3   33
     #define LIN_BIT_OFFSET_HVAC_AirDist_R_Posn3    4
     #define LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn3   4

     #define LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn4   34
     #define LIN_BIT_OFFSET_HVAC_AirDist_R_Posn4    0
     #define LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn4   4

     #define LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn5   34
     #define LIN_BIT_OFFSET_HVAC_AirDist_R_Posn5    4
     #define LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn5   4

     #define LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn6   35
     #define LIN_BIT_OFFSET_HVAC_AirDist_R_Posn6    0
     #define LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn6   4

     #define LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn7   35
     #define LIN_BIT_OFFSET_HVAC_AirDist_R_Posn7    4
     #define LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn7   4

     #define LIN_BYTE_OFFSET_HVAC_AirDist_Zone1_Disp_Rq   2
     #define LIN_BIT_OFFSET_HVAC_AirDist_Zone1_Disp_Rq    5
     #define LIN_SIGNAL_SIZE_HVAC_AirDist_Zone1_Disp_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_AirDist_Zone1_Stat   10
     #define LIN_BIT_OFFSET_HVAC_AirDist_Zone1_Stat    0
     #define LIN_SIGNAL_SIZE_HVAC_AirDist_Zone1_Stat   4

     #define LIN_BYTE_OFFSET_HVAC_AirDist_Zone2_Disp_Rq   2
     #define LIN_BIT_OFFSET_HVAC_AirDist_Zone2_Disp_Rq    6
     #define LIN_SIGNAL_SIZE_HVAC_AirDist_Zone2_Disp_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_AirDist_Zone2_Stat   10
     #define LIN_BIT_OFFSET_HVAC_AirDist_Zone2_Stat    4
     #define LIN_SIGNAL_SIZE_HVAC_AirDist_Zone2_Stat   4

     #define LIN_BYTE_OFFSET_HVAC_AirDist_Zone3_Disp_Rq   18
     #define LIN_BIT_OFFSET_HVAC_AirDist_Zone3_Disp_Rq    5
     #define LIN_SIGNAL_SIZE_HVAC_AirDist_Zone3_Disp_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_AirDist_Zone3_Stat   13
     #define LIN_BIT_OFFSET_HVAC_AirDist_Zone3_Stat    0
     #define LIN_SIGNAL_SIZE_HVAC_AirDist_Zone3_Stat   4

     #define LIN_BYTE_OFFSET_HVAC_AirDist_Zone4_Disp_Rq   18
     #define LIN_BIT_OFFSET_HVAC_AirDist_Zone4_Disp_Rq    6
     #define LIN_SIGNAL_SIZE_HVAC_AirDist_Zone4_Disp_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_AirDist_Zone4_Stat   13
     #define LIN_BIT_OFFSET_HVAC_AirDist_Zone4_Stat    4
     #define LIN_SIGNAL_SIZE_HVAC_AirDist_Zone4_Stat   4

     #define LIN_BYTE_OFFSET_HVAC_Airflow_RL_Rq_HVAC_R   43
     #define LIN_BIT_OFFSET_HVAC_Airflow_RL_Rq_HVAC_R    5
     #define LIN_SIGNAL_SIZE_HVAC_Airflow_RL_Rq_HVAC_R   3

     #define LIN_BYTE_OFFSET_HVAC_Airflow_RR_Rq_HVAC_R   44
     #define LIN_BIT_OFFSET_HVAC_Airflow_RR_Rq_HVAC_R    5
     #define LIN_SIGNAL_SIZE_HVAC_Airflow_RR_Rq_HVAC_R   3

     #define LIN_BYTE_OFFSET_HVAC_Airflow_Zone1_Disp_Rq   2
     #define LIN_BIT_OFFSET_HVAC_Airflow_Zone1_Disp_Rq    7
     #define LIN_SIGNAL_SIZE_HVAC_Airflow_Zone1_Disp_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_Airflow_Zone1_Stat   8
     #define LIN_BIT_OFFSET_HVAC_Airflow_Zone1_Stat    5
     #define LIN_SIGNAL_SIZE_HVAC_Airflow_Zone1_Stat   3

     #define LIN_BYTE_OFFSET_HVAC_Airflow_Zone2_Disp_Rq   3
     #define LIN_BIT_OFFSET_HVAC_Airflow_Zone2_Disp_Rq    0
     #define LIN_SIGNAL_SIZE_HVAC_Airflow_Zone2_Disp_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_Airflow_Zone2_Stat   9
     #define LIN_BIT_OFFSET_HVAC_Airflow_Zone2_Stat    0
     #define LIN_SIGNAL_SIZE_HVAC_Airflow_Zone2_Stat   3

     #define LIN_BYTE_OFFSET_HVAC_Airflow_Zone3_Disp_Rq   18
     #define LIN_BIT_OFFSET_HVAC_Airflow_Zone3_Disp_Rq    7
     #define LIN_SIGNAL_SIZE_HVAC_Airflow_Zone3_Disp_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_Airflow_Zone3_Stat   11
     #define LIN_BIT_OFFSET_HVAC_Airflow_Zone3_Stat    5
     #define LIN_SIGNAL_SIZE_HVAC_Airflow_Zone3_Stat   3

     #define LIN_BYTE_OFFSET_HVAC_Airflow_Zone4_Disp_Rq   19
     #define LIN_BIT_OFFSET_HVAC_Airflow_Zone4_Disp_Rq    0
     #define LIN_SIGNAL_SIZE_HVAC_Airflow_Zone4_Disp_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_Airflow_Zone4_Stat   12
     #define LIN_BIT_OFFSET_HVAC_Airflow_Zone4_Stat    0
     #define LIN_SIGNAL_SIZE_HVAC_Airflow_Zone4_Stat   3

     #define LIN_BYTE_OFFSET_HVAC_Auto_RL_Psd_HVAC_R   40
     #define LIN_BIT_OFFSET_HVAC_Auto_RL_Psd_HVAC_R    0
     #define LIN_SIGNAL_SIZE_HVAC_Auto_RL_Psd_HVAC_R   1

     #define LIN_BYTE_OFFSET_HVAC_Auto_RR_Psd_HVAC_R   40
     #define LIN_BIT_OFFSET_HVAC_Auto_RR_Psd_HVAC_R    1
     #define LIN_SIGNAL_SIZE_HVAC_Auto_RR_Psd_HVAC_R   1

     #define LIN_BYTE_OFFSET_HVAC_Auto_Zone1_Stat   0
     #define LIN_BIT_OFFSET_HVAC_Auto_Zone1_Stat    0
     #define LIN_SIGNAL_SIZE_HVAC_Auto_Zone1_Stat   2

     #define LIN_BYTE_OFFSET_HVAC_Auto_Zone2_Stat   0
     #define LIN_BIT_OFFSET_HVAC_Auto_Zone2_Stat    2
     #define LIN_SIGNAL_SIZE_HVAC_Auto_Zone2_Stat   2

     #define LIN_BYTE_OFFSET_HVAC_Auto_Zone3_Stat   16
     #define LIN_BIT_OFFSET_HVAC_Auto_Zone3_Stat    0
     #define LIN_SIGNAL_SIZE_HVAC_Auto_Zone3_Stat   2

     #define LIN_BYTE_OFFSET_HVAC_Auto_Zone4_Stat   16
     #define LIN_BIT_OFFSET_HVAC_Auto_Zone4_Stat    2
     #define LIN_SIGNAL_SIZE_HVAC_Auto_Zone4_Stat   2

     #define LIN_BYTE_OFFSET_HVAC_Dfrst_Z1Z2_Actv   5
     #define LIN_BIT_OFFSET_HVAC_Dfrst_Z1Z2_Actv    3
     #define LIN_SIGNAL_SIZE_HVAC_Dfrst_Z1Z2_Actv   1

     #define LIN_BYTE_OFFSET_HVAC_DispCont_RL   46
     #define LIN_BIT_OFFSET_HVAC_DispCont_RL    6
     #define LIN_SIGNAL_SIZE_HVAC_DispCont_RL   2

     #define LIN_BYTE_OFFSET_HVAC_DispCont_RR   47
     #define LIN_BIT_OFFSET_HVAC_DispCont_RR    0
     #define LIN_SIGNAL_SIZE_HVAC_DispCont_RR   2

     #define LIN_BYTE_OFFSET_HVAC_FanLvl_RL_Rq_HVAC_R   42
     #define LIN_BIT_OFFSET_HVAC_FanLvl_RL_Rq_HVAC_R    0
     #define LIN_SIGNAL_SIZE_HVAC_FanLvl_RL_Rq_HVAC_R   4

     #define LIN_BYTE_OFFSET_HVAC_FanLvl_RR_Rq_HVAC_R   42
     #define LIN_BIT_OFFSET_HVAC_FanLvl_RR_Rq_HVAC_R    4
     #define LIN_SIGNAL_SIZE_HVAC_FanLvl_RR_Rq_HVAC_R   4

     #define LIN_BYTE_OFFSET_HVAC_FanMax_R   36
     #define LIN_BIT_OFFSET_HVAC_FanMax_R    4
     #define LIN_SIGNAL_SIZE_HVAC_FanMax_R   4

     #define LIN_BYTE_OFFSET_HVAC_FanMin_R   36
     #define LIN_BIT_OFFSET_HVAC_FanMin_R    0
     #define LIN_SIGNAL_SIZE_HVAC_FanMin_R   4

     #define LIN_BYTE_OFFSET_HVAC_Fan_AirDistChg_RL_HVAC_R   40
     #define LIN_BIT_OFFSET_HVAC_Fan_AirDistChg_RL_HVAC_R    2
     #define LIN_SIGNAL_SIZE_HVAC_Fan_AirDistChg_RL_HVAC_R   1

     #define LIN_BYTE_OFFSET_HVAC_Fan_AirDistChg_RR_HVAC_R   40
     #define LIN_BIT_OFFSET_HVAC_Fan_AirDistChg_RR_HVAC_R    3
     #define LIN_SIGNAL_SIZE_HVAC_Fan_AirDistChg_RR_HVAC_R   1

     #define LIN_BYTE_OFFSET_HVAC_Fan_Zone1_Disp_Rq   5
     #define LIN_BIT_OFFSET_HVAC_Fan_Zone1_Disp_Rq    7
     #define LIN_SIGNAL_SIZE_HVAC_Fan_Zone1_Disp_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_Fan_Zone1_Stat   1
     #define LIN_BIT_OFFSET_HVAC_Fan_Zone1_Stat    0
     #define LIN_SIGNAL_SIZE_HVAC_Fan_Zone1_Stat   4

     #define LIN_BYTE_OFFSET_HVAC_Fan_Zone2_Disp_Rq   6
     #define LIN_BIT_OFFSET_HVAC_Fan_Zone2_Disp_Rq    0
     #define LIN_SIGNAL_SIZE_HVAC_Fan_Zone2_Disp_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_Fan_Zone2_Stat   1
     #define LIN_BIT_OFFSET_HVAC_Fan_Zone2_Stat    4
     #define LIN_SIGNAL_SIZE_HVAC_Fan_Zone2_Stat   4

     #define LIN_BYTE_OFFSET_HVAC_Fan_Zone3_Disp_Rq   20
     #define LIN_BIT_OFFSET_HVAC_Fan_Zone3_Disp_Rq    7
     #define LIN_SIGNAL_SIZE_HVAC_Fan_Zone3_Disp_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_Fan_Zone3_Stat   17
     #define LIN_BIT_OFFSET_HVAC_Fan_Zone3_Stat    4
     #define LIN_SIGNAL_SIZE_HVAC_Fan_Zone3_Stat   4

     #define LIN_BYTE_OFFSET_HVAC_Fan_Zone4_Disp_Rq   21
     #define LIN_BIT_OFFSET_HVAC_Fan_Zone4_Disp_Rq    0
     #define LIN_SIGNAL_SIZE_HVAC_Fan_Zone4_Disp_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_Fan_Zone4_Stat   17
     #define LIN_BIT_OFFSET_HVAC_Fan_Zone4_Stat    0
     #define LIN_SIGNAL_SIZE_HVAC_Fan_Zone4_Stat   4

     #define LIN_BYTE_OFFSET_HVAC_FtwInc_RL_Rq_HVAC_R   46
     #define LIN_BIT_OFFSET_HVAC_FtwInc_RL_Rq_HVAC_R    0
     #define LIN_SIGNAL_SIZE_HVAC_FtwInc_RL_Rq_HVAC_R   3

     #define LIN_BYTE_OFFSET_HVAC_FtwInc_RR_Rq_HVAC_R   46
     #define LIN_BIT_OFFSET_HVAC_FtwInc_RR_Rq_HVAC_R    3
     #define LIN_SIGNAL_SIZE_HVAC_FtwInc_RR_Rq_HVAC_R   3

     #define LIN_BYTE_OFFSET_HVAC_FtwInc_Zone1_Disp_Rq   3
     #define LIN_BIT_OFFSET_HVAC_FtwInc_Zone1_Disp_Rq    7
     #define LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone1_Disp_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_FtwInc_Zone1_Stat   3
     #define LIN_BIT_OFFSET_HVAC_FtwInc_Zone1_Stat    1
     #define LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone1_Stat   3

     #define LIN_BYTE_OFFSET_HVAC_FtwInc_Zone2_Disp_Rq   4
     #define LIN_BIT_OFFSET_HVAC_FtwInc_Zone2_Disp_Rq    0
     #define LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone2_Disp_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_FtwInc_Zone2_Stat   3
     #define LIN_BIT_OFFSET_HVAC_FtwInc_Zone2_Stat    4
     #define LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone2_Stat   3

     #define LIN_BYTE_OFFSET_HVAC_FtwInc_Zone3_Disp_Rq   19
     #define LIN_BIT_OFFSET_HVAC_FtwInc_Zone3_Disp_Rq    7
     #define LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone3_Disp_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_FtwInc_Zone3_Stat   19
     #define LIN_BIT_OFFSET_HVAC_FtwInc_Zone3_Stat    1
     #define LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone3_Stat   3

     #define LIN_BYTE_OFFSET_HVAC_FtwInc_Zone4_Disp_Rq   20
     #define LIN_BIT_OFFSET_HVAC_FtwInc_Zone4_Disp_Rq    0
     #define LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone4_Disp_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_FtwInc_Zone4_Stat   19
     #define LIN_BIT_OFFSET_HVAC_FtwInc_Zone4_Stat    4
     #define LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone4_Stat   3

     #define LIN_BYTE_OFFSET_HVAC_ICH1_2_LED_On_Rq   5
     #define LIN_BIT_OFFSET_HVAC_ICH1_2_LED_On_Rq    0
     #define LIN_SIGNAL_SIZE_HVAC_ICH1_2_LED_On_Rq   2

     #define LIN_BYTE_OFFSET_HVAC_ICH_PreTm_LED_On_Rq   5
     #define LIN_BIT_OFFSET_HVAC_ICH_PreTm_LED_On_Rq    2
     #define LIN_SIGNAL_SIZE_HVAC_ICH_PreTm_LED_On_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_ICH_TxmtSync_Actv   4
     #define LIN_BIT_OFFSET_HVAC_ICH_TxmtSync_Actv    7
     #define LIN_SIGNAL_SIZE_HVAC_ICH_TxmtSync_Actv   1

     #define LIN_BYTE_OFFSET_HVAC_MaxCool_R_Psd_HVAC_R   41
     #define LIN_BIT_OFFSET_HVAC_MaxCool_R_Psd_HVAC_R    0
     #define LIN_SIGNAL_SIZE_HVAC_MaxCool_R_Psd_HVAC_R   1

     #define LIN_BYTE_OFFSET_HVAC_MaxCool_Z1Z2_Actv   2
     #define LIN_BIT_OFFSET_HVAC_MaxCool_Z1Z2_Actv    0
     #define LIN_SIGNAL_SIZE_HVAC_MaxCool_Z1Z2_Actv   1

     #define LIN_BYTE_OFFSET_HVAC_MaxCool_Z3Z4_Actv   18
     #define LIN_BIT_OFFSET_HVAC_MaxCool_Z3Z4_Actv    0
     #define LIN_SIGNAL_SIZE_HVAC_MaxCool_Z3Z4_Actv   1

     #define LIN_BYTE_OFFSET_HVAC_Menu1_2_Disp_LED_On_Rq   2
     #define LIN_BIT_OFFSET_HVAC_Menu1_2_Disp_LED_On_Rq    2
     #define LIN_SIGNAL_SIZE_HVAC_Menu1_2_Disp_LED_On_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_Menu3_4_Disp_LED_On_Rq   18
     #define LIN_BIT_OFFSET_HVAC_Menu3_4_Disp_LED_On_Rq    2
     #define LIN_SIGNAL_SIZE_HVAC_Menu3_4_Disp_LED_On_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_Mono_Actv   5
     #define LIN_BIT_OFFSET_HVAC_Mono_Actv    4
     #define LIN_SIGNAL_SIZE_HVAC_Mono_Actv   1

     #define LIN_BYTE_OFFSET_HVAC_Mono_R_Psd_HVAC_R   41
     #define LIN_BIT_OFFSET_HVAC_Mono_R_Psd_HVAC_R    2
     #define LIN_SIGNAL_SIZE_HVAC_Mono_R_Psd_HVAC_R   1

     #define LIN_BYTE_OFFSET_HVAC_NumOfAirDistPosn_R   32
     #define LIN_BIT_OFFSET_HVAC_NumOfAirDistPosn_R    0
     #define LIN_SIGNAL_SIZE_HVAC_NumOfAirDistPosn_R   3

     #define LIN_BYTE_OFFSET_HVAC_Off_R_Psd_HVAC_R   40
     #define LIN_BIT_OFFSET_HVAC_Off_R_Psd_HVAC_R    7
     #define LIN_SIGNAL_SIZE_HVAC_Off_R_Psd_HVAC_R   1

     #define LIN_BYTE_OFFSET_HVAC_Off_Z1Z2_Actv   0
     #define LIN_BIT_OFFSET_HVAC_Off_Z1Z2_Actv    7
     #define LIN_SIGNAL_SIZE_HVAC_Off_Z1Z2_Actv   1

     #define LIN_BYTE_OFFSET_HVAC_Off_Z3Z4_Actv   16
     #define LIN_BIT_OFFSET_HVAC_Off_Z3Z4_Actv    7
     #define LIN_SIGNAL_SIZE_HVAC_Off_Z3Z4_Actv   1

     #define LIN_BYTE_OFFSET_HVAC_OprtnVoltRng_Ok   29
     #define LIN_BIT_OFFSET_HVAC_OprtnVoltRng_Ok    3
     #define LIN_SIGNAL_SIZE_HVAC_OprtnVoltRng_Ok   1

     #define LIN_BYTE_OFFSET_HVAC_RHU_R_Psd_HVAC_R   40
     #define LIN_BIT_OFFSET_HVAC_RHU_R_Psd_HVAC_R    5
     #define LIN_SIGNAL_SIZE_HVAC_RHU_R_Psd_HVAC_R   1

     #define LIN_BYTE_OFFSET_HVAC_RHU_Z1Z2_Actv   0
     #define LIN_BIT_OFFSET_HVAC_RHU_Z1Z2_Actv    5
     #define LIN_SIGNAL_SIZE_HVAC_RHU_Z1Z2_Actv   1

     #define LIN_BYTE_OFFSET_HVAC_RHU_Z3Z4_Actv   16
     #define LIN_BIT_OFFSET_HVAC_RHU_Z3Z4_Actv    5
     #define LIN_SIGNAL_SIZE_HVAC_RHU_Z3Z4_Actv   1

     #define LIN_BYTE_OFFSET_HVAC_Rear_Reset_Rq   47
     #define LIN_BIT_OFFSET_HVAC_Rear_Reset_Rq    2
     #define LIN_SIGNAL_SIZE_HVAC_Rear_Reset_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_RecircAir_Z1Z2_Actv   0
     #define LIN_BIT_OFFSET_HVAC_RecircAir_Z1Z2_Actv    4
     #define LIN_SIGNAL_SIZE_HVAC_RecircAir_Z1Z2_Actv   1

     #define LIN_BYTE_OFFSET_HVAC_Rem1_2_Disp_LED_On_Rq   2
     #define LIN_BIT_OFFSET_HVAC_Rem1_2_Disp_LED_On_Rq    1
     #define LIN_SIGNAL_SIZE_HVAC_Rem1_2_Disp_LED_On_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_Rem3_4_Disp_LED_On_Rq   18
     #define LIN_BIT_OFFSET_HVAC_Rem3_4_Disp_LED_On_Rq    1
     #define LIN_SIGNAL_SIZE_HVAC_Rem3_4_Disp_LED_On_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_Rem_R_Psd_HVAC_R   41
     #define LIN_BIT_OFFSET_HVAC_Rem_R_Psd_HVAC_R    4
     #define LIN_SIGNAL_SIZE_HVAC_Rem_R_Psd_HVAC_R   1

     #define LIN_BYTE_OFFSET_HVAC_SelfChg_AirDistDsp1_Enbl   4
     #define LIN_BIT_OFFSET_HVAC_SelfChg_AirDistDsp1_Enbl    5
     #define LIN_SIGNAL_SIZE_HVAC_SelfChg_AirDistDsp1_Enbl   1

     #define LIN_BYTE_OFFSET_HVAC_SelfChg_AirDistDsp2_Enbl   4
     #define LIN_BIT_OFFSET_HVAC_SelfChg_AirDistDsp2_Enbl    6
     #define LIN_SIGNAL_SIZE_HVAC_SelfChg_AirDistDsp2_Enbl   1

     #define LIN_BYTE_OFFSET_HVAC_SelfChg_AirDistDsp3_Enbl   20
     #define LIN_BIT_OFFSET_HVAC_SelfChg_AirDistDsp3_Enbl    5
     #define LIN_SIGNAL_SIZE_HVAC_SelfChg_AirDistDsp3_Enbl   1

     #define LIN_BYTE_OFFSET_HVAC_SelfChg_AirDistDsp4_Enbl   20
     #define LIN_BIT_OFFSET_HVAC_SelfChg_AirDistDsp4_Enbl    6
     #define LIN_SIGNAL_SIZE_HVAC_SelfChg_AirDistDsp4_Enbl   1

     #define LIN_BYTE_OFFSET_HVAC_SelfChg_FanDisp1_Enbl   4
     #define LIN_BIT_OFFSET_HVAC_SelfChg_FanDisp1_Enbl    3
     #define LIN_SIGNAL_SIZE_HVAC_SelfChg_FanDisp1_Enbl   1

     #define LIN_BYTE_OFFSET_HVAC_SelfChg_FanDisp2_Enbl   4
     #define LIN_BIT_OFFSET_HVAC_SelfChg_FanDisp2_Enbl    4
     #define LIN_SIGNAL_SIZE_HVAC_SelfChg_FanDisp2_Enbl   1

     #define LIN_BYTE_OFFSET_HVAC_SelfChg_FanDisp3_Enbl   20
     #define LIN_BIT_OFFSET_HVAC_SelfChg_FanDisp3_Enbl    3
     #define LIN_SIGNAL_SIZE_HVAC_SelfChg_FanDisp3_Enbl   1

     #define LIN_BYTE_OFFSET_HVAC_SelfChg_FanDisp4_Enbl   20
     #define LIN_BIT_OFFSET_HVAC_SelfChg_FanDisp4_Enbl    4
     #define LIN_SIGNAL_SIZE_HVAC_SelfChg_FanDisp4_Enbl   1

     #define LIN_BYTE_OFFSET_HVAC_SelfChg_TempDisp1_Enbl   4
     #define LIN_BIT_OFFSET_HVAC_SelfChg_TempDisp1_Enbl    1
     #define LIN_SIGNAL_SIZE_HVAC_SelfChg_TempDisp1_Enbl   1

     #define LIN_BYTE_OFFSET_HVAC_SelfChg_TempDisp2_Enbl   4
     #define LIN_BIT_OFFSET_HVAC_SelfChg_TempDisp2_Enbl    2
     #define LIN_SIGNAL_SIZE_HVAC_SelfChg_TempDisp2_Enbl   1

     #define LIN_BYTE_OFFSET_HVAC_SelfChg_TempDisp3_Enbl   20
     #define LIN_BIT_OFFSET_HVAC_SelfChg_TempDisp3_Enbl    1
     #define LIN_SIGNAL_SIZE_HVAC_SelfChg_TempDisp3_Enbl   1

     #define LIN_BYTE_OFFSET_HVAC_SelfChg_TempDisp4_Enbl   20
     #define LIN_BIT_OFFSET_HVAC_SelfChg_TempDisp4_Enbl    2
     #define LIN_SIGNAL_SIZE_HVAC_SelfChg_TempDisp4_Enbl   1

     #define LIN_BYTE_OFFSET_HVAC_SwLED_Test_Rq   29
     #define LIN_BIT_OFFSET_HVAC_SwLED_Test_Rq    4
     #define LIN_SIGNAL_SIZE_HVAC_SwLED_Test_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_TempMax_R   38
     #define LIN_BIT_OFFSET_HVAC_TempMax_R    0
     #define LIN_SIGNAL_SIZE_HVAC_TempMax_R   5

     #define LIN_BYTE_OFFSET_HVAC_TempMin_R   37
     #define LIN_BIT_OFFSET_HVAC_TempMin_R    0
     #define LIN_SIGNAL_SIZE_HVAC_TempMin_R   5

     #define LIN_BYTE_OFFSET_HVAC_Temp_RL_Rq_HVAC_R_V2   43
     #define LIN_BIT_OFFSET_HVAC_Temp_RL_Rq_HVAC_R_V2    0
     #define LIN_SIGNAL_SIZE_HVAC_Temp_RL_Rq_HVAC_R_V2   5

     #define LIN_BYTE_OFFSET_HVAC_Temp_RR_Rq_HVAC_R_V2   44
     #define LIN_BIT_OFFSET_HVAC_Temp_RR_Rq_HVAC_R_V2    0
     #define LIN_SIGNAL_SIZE_HVAC_Temp_RR_Rq_HVAC_R_V2   5

     #define LIN_BYTE_OFFSET_HVAC_Temp_Zone1_Disp_Rq   2
     #define LIN_BIT_OFFSET_HVAC_Temp_Zone1_Disp_Rq    3
     #define LIN_SIGNAL_SIZE_HVAC_Temp_Zone1_Disp_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_Temp_Zone1_Stat   8
     #define LIN_BIT_OFFSET_HVAC_Temp_Zone1_Stat    0
     #define LIN_SIGNAL_SIZE_HVAC_Temp_Zone1_Stat   5

     #define LIN_BYTE_OFFSET_HVAC_Temp_Zone2_Disp_Rq   2
     #define LIN_BIT_OFFSET_HVAC_Temp_Zone2_Disp_Rq    4
     #define LIN_SIGNAL_SIZE_HVAC_Temp_Zone2_Disp_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_Temp_Zone2_Stat   9
     #define LIN_BIT_OFFSET_HVAC_Temp_Zone2_Stat    3
     #define LIN_SIGNAL_SIZE_HVAC_Temp_Zone2_Stat   5

     #define LIN_BYTE_OFFSET_HVAC_Temp_Zone3_Disp_Rq   18
     #define LIN_BIT_OFFSET_HVAC_Temp_Zone3_Disp_Rq    3
     #define LIN_SIGNAL_SIZE_HVAC_Temp_Zone3_Disp_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_Temp_Zone3_Stat   11
     #define LIN_BIT_OFFSET_HVAC_Temp_Zone3_Stat    0
     #define LIN_SIGNAL_SIZE_HVAC_Temp_Zone3_Stat   5

     #define LIN_BYTE_OFFSET_HVAC_Temp_Zone4_Disp_Rq   18
     #define LIN_BIT_OFFSET_HVAC_Temp_Zone4_Disp_Rq    4
     #define LIN_SIGNAL_SIZE_HVAC_Temp_Zone4_Disp_Rq   1

     #define LIN_BYTE_OFFSET_HVAC_Temp_Zone4_Stat   12
     #define LIN_BIT_OFFSET_HVAC_Temp_Zone4_Stat    3
     #define LIN_SIGNAL_SIZE_HVAC_Temp_Zone4_Stat   5

     #define LIN_BYTE_OFFSET_HVAC_Zone1_Disp_Off   25
     #define LIN_BIT_OFFSET_HVAC_Zone1_Disp_Off    7
     #define LIN_SIGNAL_SIZE_HVAC_Zone1_Disp_Off   1

     #define LIN_BYTE_OFFSET_HVAC_Zone2_Disp_Off   26
     #define LIN_BIT_OFFSET_HVAC_Zone2_Disp_Off    0
     #define LIN_SIGNAL_SIZE_HVAC_Zone2_Disp_Off   1

     #define LIN_BYTE_OFFSET_HVAC_Zone3_Disp_Off   26
     #define LIN_BIT_OFFSET_HVAC_Zone3_Disp_Off    1
     #define LIN_SIGNAL_SIZE_HVAC_Zone3_Disp_Off   1

     #define LIN_BYTE_OFFSET_HVAC_Zone4_Disp_Off   26
     #define LIN_BIT_OFFSET_HVAC_Zone4_Disp_Off    2
     #define LIN_SIGNAL_SIZE_HVAC_Zone4_Disp_Off   1

     #define LIN_BYTE_OFFSET_HVAC_Zone_Chgovr_FL   24
     #define LIN_BIT_OFFSET_HVAC_Zone_Chgovr_FL    0
     #define LIN_SIGNAL_SIZE_HVAC_Zone_Chgovr_FL   2

     #define LIN_BYTE_OFFSET_HVAC_Zone_Chgovr_FR   24
     #define LIN_BIT_OFFSET_HVAC_Zone_Chgovr_FR    2
     #define LIN_SIGNAL_SIZE_HVAC_Zone_Chgovr_FR   2

     #define LIN_BYTE_OFFSET_HVAC_Zone_Chgovr_RL   24
     #define LIN_BIT_OFFSET_HVAC_Zone_Chgovr_RL    4
     #define LIN_SIGNAL_SIZE_HVAC_Zone_Chgovr_RL   2

     #define LIN_BYTE_OFFSET_HVAC_Zone_Chgovr_RR   24
     #define LIN_BIT_OFFSET_HVAC_Zone_Chgovr_RR    6
     #define LIN_SIGNAL_SIZE_HVAC_Zone_Chgovr_RR   2

     #define LIN_BYTE_OFFSET_ISw_Stat_LIN   26
     #define LIN_BIT_OFFSET_ISw_Stat_LIN    5
     #define LIN_SIGNAL_SIZE_ISw_Stat_LIN   3

     #define LIN_BYTE_OFFSET_LgtSens_Night_LIN   29
     #define LIN_BIT_OFFSET_LgtSens_Night_LIN    2
     #define LIN_SIGNAL_SIZE_LgtSens_Night_LIN   1

     #define LIN_BYTE_OFFSET_RsErr_HVAC_R   47
     #define LIN_BIT_OFFSET_RsErr_HVAC_R    7
     #define LIN_SIGNAL_SIZE_RsErr_HVAC_R   1

     #define LIN_BYTE_OFFSET_SwIllLvl   27
     #define LIN_BIT_OFFSET_SwIllLvl    0
     #define LIN_SIGNAL_SIZE_SwIllLvl   8

     #define LIN_BYTE_OFFSET_UnitTemp_Rq   29
     #define LIN_BIT_OFFSET_UnitTemp_Rq    0
     #define LIN_SIGNAL_SIZE_UnitTemp_Rq   2

     #define LIN_BYTE_OFFSET_WakeupStat_HVAC_R   47
     #define LIN_BIT_OFFSET_WakeupStat_HVAC_R    5
     #define LIN_SIGNAL_SIZE_WakeupStat_HVAC_R   2

/* static access macros for signalLIN_SIGNAL_DispBrt_IC */
     #define l_u8_rd_LIN_SIGNAL_DispBrt_IC() \
     l_u8_rd_DispBrt_IC()
     #define l_u8_wr_LIN_SIGNAL_DispBrt_IC(A) \
     l_u8_wr_DispBrt_IC(A)

     #define l_u8_rd_DispBrt_IC()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_DispBrt_IC] & \
        (((1U << LIN_SIGNAL_SIZE_DispBrt_IC) - 1) \
        << LIN_BIT_OFFSET_DispBrt_IC )) \
        >> LIN_BIT_OFFSET_DispBrt_IC)

     #define l_u8_wr_DispBrt_IC(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_DispBrt_IC] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_DispBrt_IC] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_DispBrt_IC) - 1) \
           << LIN_BIT_OFFSET_DispBrt_IC))))  | \
           ((((1U << LIN_SIGNAL_SIZE_DispBrt_IC) - 1) & (A)) \
           << LIN_BIT_OFFSET_DispBrt_IC);\
           Lin_FrmDataUpdtFlag[3 >> 3] |= ( 1 << (3 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_EBL_Stat */
     #define l_u8_rd_LIN_SIGNAL_EBL_Stat() \
     l_u8_rd_EBL_Stat()
     #define l_u8_wr_LIN_SIGNAL_EBL_Stat(A) \
     l_u8_wr_EBL_Stat(A)

     #define l_u8_rd_EBL_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_EBL_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_EBL_Stat) - 1) \
        << LIN_BIT_OFFSET_EBL_Stat )) \
        >> LIN_BIT_OFFSET_EBL_Stat)

     #define l_u8_wr_EBL_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_EBL_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_EBL_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_EBL_Stat) - 1) \
           << LIN_BIT_OFFSET_EBL_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_EBL_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_EBL_Stat);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_AC_R_Psd_HVAC_R */
     #define l_u8_rd_LIN_SIGNAL_HVAC_AC_R_Psd_HVAC_R() \
     l_u8_rd_HVAC_AC_R_Psd_HVAC_R()
     #define l_u8_wr_LIN_SIGNAL_HVAC_AC_R_Psd_HVAC_R(A) \
     l_u8_wr_HVAC_AC_R_Psd_HVAC_R(A)

     #define l_u8_rd_HVAC_AC_R_Psd_HVAC_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AC_R_Psd_HVAC_R] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_AC_R_Psd_HVAC_R) - 1) \
        << LIN_BIT_OFFSET_HVAC_AC_R_Psd_HVAC_R )) \
        >> LIN_BIT_OFFSET_HVAC_AC_R_Psd_HVAC_R)

     #define l_u8_wr_HVAC_AC_R_Psd_HVAC_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AC_R_Psd_HVAC_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AC_R_Psd_HVAC_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_AC_R_Psd_HVAC_R) - 1) \
           << LIN_BIT_OFFSET_HVAC_AC_R_Psd_HVAC_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_AC_R_Psd_HVAC_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_AC_R_Psd_HVAC_R);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_AC_Z1Z2_Actv */
     #define l_u8_rd_LIN_SIGNAL_HVAC_AC_Z1Z2_Actv() \
     l_u8_rd_HVAC_AC_Z1Z2_Actv()
     #define l_u8_wr_LIN_SIGNAL_HVAC_AC_Z1Z2_Actv(A) \
     l_u8_wr_HVAC_AC_Z1Z2_Actv(A)

     #define l_u8_rd_HVAC_AC_Z1Z2_Actv()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AC_Z1Z2_Actv] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_AC_Z1Z2_Actv) - 1) \
        << LIN_BIT_OFFSET_HVAC_AC_Z1Z2_Actv )) \
        >> LIN_BIT_OFFSET_HVAC_AC_Z1Z2_Actv)

     #define l_u8_wr_HVAC_AC_Z1Z2_Actv(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AC_Z1Z2_Actv] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AC_Z1Z2_Actv] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_AC_Z1Z2_Actv) - 1) \
           << LIN_BIT_OFFSET_HVAC_AC_Z1Z2_Actv))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_AC_Z1Z2_Actv) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_AC_Z1Z2_Actv);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_AC_Z3Z4_Actv */
     #define l_u8_rd_LIN_SIGNAL_HVAC_AC_Z3Z4_Actv() \
     l_u8_rd_HVAC_AC_Z3Z4_Actv()
     #define l_u8_wr_LIN_SIGNAL_HVAC_AC_Z3Z4_Actv(A) \
     l_u8_wr_HVAC_AC_Z3Z4_Actv(A)

     #define l_u8_rd_HVAC_AC_Z3Z4_Actv()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AC_Z3Z4_Actv] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_AC_Z3Z4_Actv) - 1) \
        << LIN_BIT_OFFSET_HVAC_AC_Z3Z4_Actv )) \
        >> LIN_BIT_OFFSET_HVAC_AC_Z3Z4_Actv)

     #define l_u8_wr_HVAC_AC_Z3Z4_Actv(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AC_Z3Z4_Actv] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AC_Z3Z4_Actv] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_AC_Z3Z4_Actv) - 1) \
           << LIN_BIT_OFFSET_HVAC_AC_Z3Z4_Actv))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_AC_Z3Z4_Actv) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_AC_Z3Z4_Actv);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Ag_ResSymb_Enbl */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Ag_ResSymb_Enbl() \
     l_u8_rd_HVAC_Ag_ResSymb_Enbl()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Ag_ResSymb_Enbl(A) \
     l_u8_wr_HVAC_Ag_ResSymb_Enbl(A)

     #define l_u8_rd_HVAC_Ag_ResSymb_Enbl()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Ag_ResSymb_Enbl] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Ag_ResSymb_Enbl) - 1) \
        << LIN_BIT_OFFSET_HVAC_Ag_ResSymb_Enbl )) \
        >> LIN_BIT_OFFSET_HVAC_Ag_ResSymb_Enbl)

     #define l_u8_wr_HVAC_Ag_ResSymb_Enbl(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Ag_ResSymb_Enbl] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Ag_ResSymb_Enbl] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Ag_ResSymb_Enbl) - 1) \
           << LIN_BIT_OFFSET_HVAC_Ag_ResSymb_Enbl))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Ag_ResSymb_Enbl) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Ag_ResSymb_Enbl);\
           Lin_FrmDataUpdtFlag[3 >> 3] |= ( 1 << (3 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Ag_ResSymb_On_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Ag_ResSymb_On_Rq() \
     l_u8_rd_HVAC_Ag_ResSymb_On_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Ag_ResSymb_On_Rq(A) \
     l_u8_wr_HVAC_Ag_ResSymb_On_Rq(A)

     #define l_u8_rd_HVAC_Ag_ResSymb_On_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Ag_ResSymb_On_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Ag_ResSymb_On_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_Ag_ResSymb_On_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_Ag_ResSymb_On_Rq)

     #define l_u8_wr_HVAC_Ag_ResSymb_On_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Ag_ResSymb_On_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Ag_ResSymb_On_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Ag_ResSymb_On_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_Ag_ResSymb_On_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Ag_ResSymb_On_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Ag_ResSymb_On_Rq);\
           Lin_FrmDataUpdtFlag[3 >> 3] |= ( 1 << (3 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Ag_ResSymb_Tmr */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Ag_ResSymb_Tmr() \
     l_u8_rd_HVAC_Ag_ResSymb_Tmr()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Ag_ResSymb_Tmr(A) \
     l_u8_wr_HVAC_Ag_ResSymb_Tmr(A)

     #define l_u8_rd_HVAC_Ag_ResSymb_Tmr()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Ag_ResSymb_Tmr] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Ag_ResSymb_Tmr) - 1) \
        << LIN_BIT_OFFSET_HVAC_Ag_ResSymb_Tmr )) \
        >> LIN_BIT_OFFSET_HVAC_Ag_ResSymb_Tmr)

     #define l_u8_wr_HVAC_Ag_ResSymb_Tmr(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Ag_ResSymb_Tmr] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Ag_ResSymb_Tmr] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Ag_ResSymb_Tmr) - 1) \
           << LIN_BIT_OFFSET_HVAC_Ag_ResSymb_Tmr))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Ag_ResSymb_Tmr) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Ag_ResSymb_Tmr);\
           Lin_FrmDataUpdtFlag[3 >> 3] |= ( 1 << (3 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_AirDist_RL_Rq_HVAC_R */
     #define l_u8_rd_LIN_SIGNAL_HVAC_AirDist_RL_Rq_HVAC_R() \
     l_u8_rd_HVAC_AirDist_RL_Rq_HVAC_R()
     #define l_u8_wr_LIN_SIGNAL_HVAC_AirDist_RL_Rq_HVAC_R(A) \
     l_u8_wr_HVAC_AirDist_RL_Rq_HVAC_R(A)

     #define l_u8_rd_HVAC_AirDist_RL_Rq_HVAC_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_RL_Rq_HVAC_R] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_RL_Rq_HVAC_R) - 1) \
        << LIN_BIT_OFFSET_HVAC_AirDist_RL_Rq_HVAC_R )) \
        >> LIN_BIT_OFFSET_HVAC_AirDist_RL_Rq_HVAC_R)

     #define l_u8_wr_HVAC_AirDist_RL_Rq_HVAC_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_RL_Rq_HVAC_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_RL_Rq_HVAC_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_RL_Rq_HVAC_R) - 1) \
           << LIN_BIT_OFFSET_HVAC_AirDist_RL_Rq_HVAC_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_RL_Rq_HVAC_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_AirDist_RL_Rq_HVAC_R);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_AirDist_RR_Rq_HVAC_R */
     #define l_u8_rd_LIN_SIGNAL_HVAC_AirDist_RR_Rq_HVAC_R() \
     l_u8_rd_HVAC_AirDist_RR_Rq_HVAC_R()
     #define l_u8_wr_LIN_SIGNAL_HVAC_AirDist_RR_Rq_HVAC_R(A) \
     l_u8_wr_HVAC_AirDist_RR_Rq_HVAC_R(A)

     #define l_u8_rd_HVAC_AirDist_RR_Rq_HVAC_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_RR_Rq_HVAC_R] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_RR_Rq_HVAC_R) - 1) \
        << LIN_BIT_OFFSET_HVAC_AirDist_RR_Rq_HVAC_R )) \
        >> LIN_BIT_OFFSET_HVAC_AirDist_RR_Rq_HVAC_R)

     #define l_u8_wr_HVAC_AirDist_RR_Rq_HVAC_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_RR_Rq_HVAC_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_RR_Rq_HVAC_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_RR_Rq_HVAC_R) - 1) \
           << LIN_BIT_OFFSET_HVAC_AirDist_RR_Rq_HVAC_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_RR_Rq_HVAC_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_AirDist_RR_Rq_HVAC_R);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_AirDist_R_Posn1 */
     #define l_u8_rd_LIN_SIGNAL_HVAC_AirDist_R_Posn1() \
     l_u8_rd_HVAC_AirDist_R_Posn1()
     #define l_u8_wr_LIN_SIGNAL_HVAC_AirDist_R_Posn1(A) \
     l_u8_wr_HVAC_AirDist_R_Posn1(A)

     #define l_u8_rd_HVAC_AirDist_R_Posn1()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn1] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn1) - 1) \
        << LIN_BIT_OFFSET_HVAC_AirDist_R_Posn1 )) \
        >> LIN_BIT_OFFSET_HVAC_AirDist_R_Posn1)

     #define l_u8_wr_HVAC_AirDist_R_Posn1(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn1] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn1] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn1) - 1) \
           << LIN_BIT_OFFSET_HVAC_AirDist_R_Posn1))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn1) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_AirDist_R_Posn1);\
           Lin_FrmDataUpdtFlag[4 >> 3] |= ( 1 << (4 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_AirDist_R_Posn2 */
     #define l_u8_rd_LIN_SIGNAL_HVAC_AirDist_R_Posn2() \
     l_u8_rd_HVAC_AirDist_R_Posn2()
     #define l_u8_wr_LIN_SIGNAL_HVAC_AirDist_R_Posn2(A) \
     l_u8_wr_HVAC_AirDist_R_Posn2(A)

     #define l_u8_rd_HVAC_AirDist_R_Posn2()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn2] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn2) - 1) \
        << LIN_BIT_OFFSET_HVAC_AirDist_R_Posn2 )) \
        >> LIN_BIT_OFFSET_HVAC_AirDist_R_Posn2)

     #define l_u8_wr_HVAC_AirDist_R_Posn2(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn2] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn2] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn2) - 1) \
           << LIN_BIT_OFFSET_HVAC_AirDist_R_Posn2))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn2) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_AirDist_R_Posn2);\
           Lin_FrmDataUpdtFlag[4 >> 3] |= ( 1 << (4 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_AirDist_R_Posn3 */
     #define l_u8_rd_LIN_SIGNAL_HVAC_AirDist_R_Posn3() \
     l_u8_rd_HVAC_AirDist_R_Posn3()
     #define l_u8_wr_LIN_SIGNAL_HVAC_AirDist_R_Posn3(A) \
     l_u8_wr_HVAC_AirDist_R_Posn3(A)

     #define l_u8_rd_HVAC_AirDist_R_Posn3()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn3] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn3) - 1) \
        << LIN_BIT_OFFSET_HVAC_AirDist_R_Posn3 )) \
        >> LIN_BIT_OFFSET_HVAC_AirDist_R_Posn3)

     #define l_u8_wr_HVAC_AirDist_R_Posn3(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn3] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn3] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn3) - 1) \
           << LIN_BIT_OFFSET_HVAC_AirDist_R_Posn3))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn3) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_AirDist_R_Posn3);\
           Lin_FrmDataUpdtFlag[4 >> 3] |= ( 1 << (4 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_AirDist_R_Posn4 */
     #define l_u8_rd_LIN_SIGNAL_HVAC_AirDist_R_Posn4() \
     l_u8_rd_HVAC_AirDist_R_Posn4()
     #define l_u8_wr_LIN_SIGNAL_HVAC_AirDist_R_Posn4(A) \
     l_u8_wr_HVAC_AirDist_R_Posn4(A)

     #define l_u8_rd_HVAC_AirDist_R_Posn4()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn4] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn4) - 1) \
        << LIN_BIT_OFFSET_HVAC_AirDist_R_Posn4 )) \
        >> LIN_BIT_OFFSET_HVAC_AirDist_R_Posn4)

     #define l_u8_wr_HVAC_AirDist_R_Posn4(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn4] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn4] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn4) - 1) \
           << LIN_BIT_OFFSET_HVAC_AirDist_R_Posn4))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn4) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_AirDist_R_Posn4);\
           Lin_FrmDataUpdtFlag[4 >> 3] |= ( 1 << (4 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_AirDist_R_Posn5 */
     #define l_u8_rd_LIN_SIGNAL_HVAC_AirDist_R_Posn5() \
     l_u8_rd_HVAC_AirDist_R_Posn5()
     #define l_u8_wr_LIN_SIGNAL_HVAC_AirDist_R_Posn5(A) \
     l_u8_wr_HVAC_AirDist_R_Posn5(A)

     #define l_u8_rd_HVAC_AirDist_R_Posn5()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn5] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn5) - 1) \
        << LIN_BIT_OFFSET_HVAC_AirDist_R_Posn5 )) \
        >> LIN_BIT_OFFSET_HVAC_AirDist_R_Posn5)

     #define l_u8_wr_HVAC_AirDist_R_Posn5(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn5] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn5] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn5) - 1) \
           << LIN_BIT_OFFSET_HVAC_AirDist_R_Posn5))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn5) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_AirDist_R_Posn5);\
           Lin_FrmDataUpdtFlag[4 >> 3] |= ( 1 << (4 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_AirDist_R_Posn6 */
     #define l_u8_rd_LIN_SIGNAL_HVAC_AirDist_R_Posn6() \
     l_u8_rd_HVAC_AirDist_R_Posn6()
     #define l_u8_wr_LIN_SIGNAL_HVAC_AirDist_R_Posn6(A) \
     l_u8_wr_HVAC_AirDist_R_Posn6(A)

     #define l_u8_rd_HVAC_AirDist_R_Posn6()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn6] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn6) - 1) \
        << LIN_BIT_OFFSET_HVAC_AirDist_R_Posn6 )) \
        >> LIN_BIT_OFFSET_HVAC_AirDist_R_Posn6)

     #define l_u8_wr_HVAC_AirDist_R_Posn6(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn6] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn6] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn6) - 1) \
           << LIN_BIT_OFFSET_HVAC_AirDist_R_Posn6))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn6) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_AirDist_R_Posn6);\
           Lin_FrmDataUpdtFlag[4 >> 3] |= ( 1 << (4 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_AirDist_R_Posn7 */
     #define l_u8_rd_LIN_SIGNAL_HVAC_AirDist_R_Posn7() \
     l_u8_rd_HVAC_AirDist_R_Posn7()
     #define l_u8_wr_LIN_SIGNAL_HVAC_AirDist_R_Posn7(A) \
     l_u8_wr_HVAC_AirDist_R_Posn7(A)

     #define l_u8_rd_HVAC_AirDist_R_Posn7()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn7] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn7) - 1) \
        << LIN_BIT_OFFSET_HVAC_AirDist_R_Posn7 )) \
        >> LIN_BIT_OFFSET_HVAC_AirDist_R_Posn7)

     #define l_u8_wr_HVAC_AirDist_R_Posn7(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn7] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_R_Posn7] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn7) - 1) \
           << LIN_BIT_OFFSET_HVAC_AirDist_R_Posn7))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_R_Posn7) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_AirDist_R_Posn7);\
           Lin_FrmDataUpdtFlag[4 >> 3] |= ( 1 << (4 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_AirDist_Zone1_Disp_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_AirDist_Zone1_Disp_Rq() \
     l_u8_rd_HVAC_AirDist_Zone1_Disp_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_AirDist_Zone1_Disp_Rq(A) \
     l_u8_wr_HVAC_AirDist_Zone1_Disp_Rq(A)

     #define l_u8_rd_HVAC_AirDist_Zone1_Disp_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_Zone1_Disp_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_Zone1_Disp_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_AirDist_Zone1_Disp_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_AirDist_Zone1_Disp_Rq)

     #define l_u8_wr_HVAC_AirDist_Zone1_Disp_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_Zone1_Disp_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_Zone1_Disp_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_Zone1_Disp_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_AirDist_Zone1_Disp_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_Zone1_Disp_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_AirDist_Zone1_Disp_Rq);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_AirDist_Zone1_Stat */
     #define l_u8_rd_LIN_SIGNAL_HVAC_AirDist_Zone1_Stat() \
     l_u8_rd_HVAC_AirDist_Zone1_Stat()
     #define l_u8_wr_LIN_SIGNAL_HVAC_AirDist_Zone1_Stat(A) \
     l_u8_wr_HVAC_AirDist_Zone1_Stat(A)

     #define l_u8_rd_HVAC_AirDist_Zone1_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_Zone1_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_Zone1_Stat) - 1) \
        << LIN_BIT_OFFSET_HVAC_AirDist_Zone1_Stat )) \
        >> LIN_BIT_OFFSET_HVAC_AirDist_Zone1_Stat)

     #define l_u8_wr_HVAC_AirDist_Zone1_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_Zone1_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_Zone1_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_Zone1_Stat) - 1) \
           << LIN_BIT_OFFSET_HVAC_AirDist_Zone1_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_Zone1_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_AirDist_Zone1_Stat);\
           Lin_FrmDataUpdtFlag[1 >> 3] |= ( 1 << (1 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_AirDist_Zone2_Disp_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_AirDist_Zone2_Disp_Rq() \
     l_u8_rd_HVAC_AirDist_Zone2_Disp_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_AirDist_Zone2_Disp_Rq(A) \
     l_u8_wr_HVAC_AirDist_Zone2_Disp_Rq(A)

     #define l_u8_rd_HVAC_AirDist_Zone2_Disp_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_Zone2_Disp_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_Zone2_Disp_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_AirDist_Zone2_Disp_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_AirDist_Zone2_Disp_Rq)

     #define l_u8_wr_HVAC_AirDist_Zone2_Disp_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_Zone2_Disp_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_Zone2_Disp_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_Zone2_Disp_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_AirDist_Zone2_Disp_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_Zone2_Disp_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_AirDist_Zone2_Disp_Rq);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_AirDist_Zone2_Stat */
     #define l_u8_rd_LIN_SIGNAL_HVAC_AirDist_Zone2_Stat() \
     l_u8_rd_HVAC_AirDist_Zone2_Stat()
     #define l_u8_wr_LIN_SIGNAL_HVAC_AirDist_Zone2_Stat(A) \
     l_u8_wr_HVAC_AirDist_Zone2_Stat(A)

     #define l_u8_rd_HVAC_AirDist_Zone2_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_Zone2_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_Zone2_Stat) - 1) \
        << LIN_BIT_OFFSET_HVAC_AirDist_Zone2_Stat )) \
        >> LIN_BIT_OFFSET_HVAC_AirDist_Zone2_Stat)

     #define l_u8_wr_HVAC_AirDist_Zone2_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_Zone2_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_Zone2_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_Zone2_Stat) - 1) \
           << LIN_BIT_OFFSET_HVAC_AirDist_Zone2_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_Zone2_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_AirDist_Zone2_Stat);\
           Lin_FrmDataUpdtFlag[1 >> 3] |= ( 1 << (1 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_AirDist_Zone3_Disp_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_AirDist_Zone3_Disp_Rq() \
     l_u8_rd_HVAC_AirDist_Zone3_Disp_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_AirDist_Zone3_Disp_Rq(A) \
     l_u8_wr_HVAC_AirDist_Zone3_Disp_Rq(A)

     #define l_u8_rd_HVAC_AirDist_Zone3_Disp_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_Zone3_Disp_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_Zone3_Disp_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_AirDist_Zone3_Disp_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_AirDist_Zone3_Disp_Rq)

     #define l_u8_wr_HVAC_AirDist_Zone3_Disp_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_Zone3_Disp_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_Zone3_Disp_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_Zone3_Disp_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_AirDist_Zone3_Disp_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_Zone3_Disp_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_AirDist_Zone3_Disp_Rq);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_AirDist_Zone3_Stat */
     #define l_u8_rd_LIN_SIGNAL_HVAC_AirDist_Zone3_Stat() \
     l_u8_rd_HVAC_AirDist_Zone3_Stat()
     #define l_u8_wr_LIN_SIGNAL_HVAC_AirDist_Zone3_Stat(A) \
     l_u8_wr_HVAC_AirDist_Zone3_Stat(A)

     #define l_u8_rd_HVAC_AirDist_Zone3_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_Zone3_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_Zone3_Stat) - 1) \
        << LIN_BIT_OFFSET_HVAC_AirDist_Zone3_Stat )) \
        >> LIN_BIT_OFFSET_HVAC_AirDist_Zone3_Stat)

     #define l_u8_wr_HVAC_AirDist_Zone3_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_Zone3_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_Zone3_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_Zone3_Stat) - 1) \
           << LIN_BIT_OFFSET_HVAC_AirDist_Zone3_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_Zone3_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_AirDist_Zone3_Stat);\
           Lin_FrmDataUpdtFlag[1 >> 3] |= ( 1 << (1 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_AirDist_Zone4_Disp_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_AirDist_Zone4_Disp_Rq() \
     l_u8_rd_HVAC_AirDist_Zone4_Disp_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_AirDist_Zone4_Disp_Rq(A) \
     l_u8_wr_HVAC_AirDist_Zone4_Disp_Rq(A)

     #define l_u8_rd_HVAC_AirDist_Zone4_Disp_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_Zone4_Disp_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_Zone4_Disp_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_AirDist_Zone4_Disp_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_AirDist_Zone4_Disp_Rq)

     #define l_u8_wr_HVAC_AirDist_Zone4_Disp_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_Zone4_Disp_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_Zone4_Disp_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_Zone4_Disp_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_AirDist_Zone4_Disp_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_Zone4_Disp_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_AirDist_Zone4_Disp_Rq);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_AirDist_Zone4_Stat */
     #define l_u8_rd_LIN_SIGNAL_HVAC_AirDist_Zone4_Stat() \
     l_u8_rd_HVAC_AirDist_Zone4_Stat()
     #define l_u8_wr_LIN_SIGNAL_HVAC_AirDist_Zone4_Stat(A) \
     l_u8_wr_HVAC_AirDist_Zone4_Stat(A)

     #define l_u8_rd_HVAC_AirDist_Zone4_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_Zone4_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_Zone4_Stat) - 1) \
        << LIN_BIT_OFFSET_HVAC_AirDist_Zone4_Stat )) \
        >> LIN_BIT_OFFSET_HVAC_AirDist_Zone4_Stat)

     #define l_u8_wr_HVAC_AirDist_Zone4_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_Zone4_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_AirDist_Zone4_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_Zone4_Stat) - 1) \
           << LIN_BIT_OFFSET_HVAC_AirDist_Zone4_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_AirDist_Zone4_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_AirDist_Zone4_Stat);\
           Lin_FrmDataUpdtFlag[1 >> 3] |= ( 1 << (1 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Airflow_RL_Rq_HVAC_R */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Airflow_RL_Rq_HVAC_R() \
     l_u8_rd_HVAC_Airflow_RL_Rq_HVAC_R()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Airflow_RL_Rq_HVAC_R(A) \
     l_u8_wr_HVAC_Airflow_RL_Rq_HVAC_R(A)

     #define l_u8_rd_HVAC_Airflow_RL_Rq_HVAC_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_RL_Rq_HVAC_R] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_RL_Rq_HVAC_R) - 1) \
        << LIN_BIT_OFFSET_HVAC_Airflow_RL_Rq_HVAC_R )) \
        >> LIN_BIT_OFFSET_HVAC_Airflow_RL_Rq_HVAC_R)

     #define l_u8_wr_HVAC_Airflow_RL_Rq_HVAC_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_RL_Rq_HVAC_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_RL_Rq_HVAC_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_RL_Rq_HVAC_R) - 1) \
           << LIN_BIT_OFFSET_HVAC_Airflow_RL_Rq_HVAC_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_RL_Rq_HVAC_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Airflow_RL_Rq_HVAC_R);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Airflow_RR_Rq_HVAC_R */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Airflow_RR_Rq_HVAC_R() \
     l_u8_rd_HVAC_Airflow_RR_Rq_HVAC_R()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Airflow_RR_Rq_HVAC_R(A) \
     l_u8_wr_HVAC_Airflow_RR_Rq_HVAC_R(A)

     #define l_u8_rd_HVAC_Airflow_RR_Rq_HVAC_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_RR_Rq_HVAC_R] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_RR_Rq_HVAC_R) - 1) \
        << LIN_BIT_OFFSET_HVAC_Airflow_RR_Rq_HVAC_R )) \
        >> LIN_BIT_OFFSET_HVAC_Airflow_RR_Rq_HVAC_R)

     #define l_u8_wr_HVAC_Airflow_RR_Rq_HVAC_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_RR_Rq_HVAC_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_RR_Rq_HVAC_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_RR_Rq_HVAC_R) - 1) \
           << LIN_BIT_OFFSET_HVAC_Airflow_RR_Rq_HVAC_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_RR_Rq_HVAC_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Airflow_RR_Rq_HVAC_R);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Airflow_Zone1_Disp_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Airflow_Zone1_Disp_Rq() \
     l_u8_rd_HVAC_Airflow_Zone1_Disp_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Airflow_Zone1_Disp_Rq(A) \
     l_u8_wr_HVAC_Airflow_Zone1_Disp_Rq(A)

     #define l_u8_rd_HVAC_Airflow_Zone1_Disp_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_Zone1_Disp_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_Zone1_Disp_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_Airflow_Zone1_Disp_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_Airflow_Zone1_Disp_Rq)

     #define l_u8_wr_HVAC_Airflow_Zone1_Disp_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_Zone1_Disp_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_Zone1_Disp_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_Zone1_Disp_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_Airflow_Zone1_Disp_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_Zone1_Disp_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Airflow_Zone1_Disp_Rq);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Airflow_Zone1_Stat */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Airflow_Zone1_Stat() \
     l_u8_rd_HVAC_Airflow_Zone1_Stat()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Airflow_Zone1_Stat(A) \
     l_u8_wr_HVAC_Airflow_Zone1_Stat(A)

     #define l_u8_rd_HVAC_Airflow_Zone1_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_Zone1_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_Zone1_Stat) - 1) \
        << LIN_BIT_OFFSET_HVAC_Airflow_Zone1_Stat )) \
        >> LIN_BIT_OFFSET_HVAC_Airflow_Zone1_Stat)

     #define l_u8_wr_HVAC_Airflow_Zone1_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_Zone1_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_Zone1_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_Zone1_Stat) - 1) \
           << LIN_BIT_OFFSET_HVAC_Airflow_Zone1_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_Zone1_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Airflow_Zone1_Stat);\
           Lin_FrmDataUpdtFlag[1 >> 3] |= ( 1 << (1 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Airflow_Zone2_Disp_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Airflow_Zone2_Disp_Rq() \
     l_u8_rd_HVAC_Airflow_Zone2_Disp_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Airflow_Zone2_Disp_Rq(A) \
     l_u8_wr_HVAC_Airflow_Zone2_Disp_Rq(A)

     #define l_u8_rd_HVAC_Airflow_Zone2_Disp_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_Zone2_Disp_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_Zone2_Disp_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_Airflow_Zone2_Disp_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_Airflow_Zone2_Disp_Rq)

     #define l_u8_wr_HVAC_Airflow_Zone2_Disp_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_Zone2_Disp_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_Zone2_Disp_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_Zone2_Disp_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_Airflow_Zone2_Disp_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_Zone2_Disp_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Airflow_Zone2_Disp_Rq);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Airflow_Zone2_Stat */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Airflow_Zone2_Stat() \
     l_u8_rd_HVAC_Airflow_Zone2_Stat()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Airflow_Zone2_Stat(A) \
     l_u8_wr_HVAC_Airflow_Zone2_Stat(A)

     #define l_u8_rd_HVAC_Airflow_Zone2_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_Zone2_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_Zone2_Stat) - 1) \
        << LIN_BIT_OFFSET_HVAC_Airflow_Zone2_Stat )) \
        >> LIN_BIT_OFFSET_HVAC_Airflow_Zone2_Stat)

     #define l_u8_wr_HVAC_Airflow_Zone2_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_Zone2_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_Zone2_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_Zone2_Stat) - 1) \
           << LIN_BIT_OFFSET_HVAC_Airflow_Zone2_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_Zone2_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Airflow_Zone2_Stat);\
           Lin_FrmDataUpdtFlag[1 >> 3] |= ( 1 << (1 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Airflow_Zone3_Disp_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Airflow_Zone3_Disp_Rq() \
     l_u8_rd_HVAC_Airflow_Zone3_Disp_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Airflow_Zone3_Disp_Rq(A) \
     l_u8_wr_HVAC_Airflow_Zone3_Disp_Rq(A)

     #define l_u8_rd_HVAC_Airflow_Zone3_Disp_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_Zone3_Disp_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_Zone3_Disp_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_Airflow_Zone3_Disp_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_Airflow_Zone3_Disp_Rq)

     #define l_u8_wr_HVAC_Airflow_Zone3_Disp_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_Zone3_Disp_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_Zone3_Disp_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_Zone3_Disp_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_Airflow_Zone3_Disp_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_Zone3_Disp_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Airflow_Zone3_Disp_Rq);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Airflow_Zone3_Stat */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Airflow_Zone3_Stat() \
     l_u8_rd_HVAC_Airflow_Zone3_Stat()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Airflow_Zone3_Stat(A) \
     l_u8_wr_HVAC_Airflow_Zone3_Stat(A)

     #define l_u8_rd_HVAC_Airflow_Zone3_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_Zone3_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_Zone3_Stat) - 1) \
        << LIN_BIT_OFFSET_HVAC_Airflow_Zone3_Stat )) \
        >> LIN_BIT_OFFSET_HVAC_Airflow_Zone3_Stat)

     #define l_u8_wr_HVAC_Airflow_Zone3_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_Zone3_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_Zone3_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_Zone3_Stat) - 1) \
           << LIN_BIT_OFFSET_HVAC_Airflow_Zone3_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_Zone3_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Airflow_Zone3_Stat);\
           Lin_FrmDataUpdtFlag[1 >> 3] |= ( 1 << (1 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Airflow_Zone4_Disp_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Airflow_Zone4_Disp_Rq() \
     l_u8_rd_HVAC_Airflow_Zone4_Disp_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Airflow_Zone4_Disp_Rq(A) \
     l_u8_wr_HVAC_Airflow_Zone4_Disp_Rq(A)

     #define l_u8_rd_HVAC_Airflow_Zone4_Disp_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_Zone4_Disp_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_Zone4_Disp_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_Airflow_Zone4_Disp_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_Airflow_Zone4_Disp_Rq)

     #define l_u8_wr_HVAC_Airflow_Zone4_Disp_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_Zone4_Disp_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_Zone4_Disp_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_Zone4_Disp_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_Airflow_Zone4_Disp_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_Zone4_Disp_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Airflow_Zone4_Disp_Rq);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Airflow_Zone4_Stat */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Airflow_Zone4_Stat() \
     l_u8_rd_HVAC_Airflow_Zone4_Stat()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Airflow_Zone4_Stat(A) \
     l_u8_wr_HVAC_Airflow_Zone4_Stat(A)

     #define l_u8_rd_HVAC_Airflow_Zone4_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_Zone4_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_Zone4_Stat) - 1) \
        << LIN_BIT_OFFSET_HVAC_Airflow_Zone4_Stat )) \
        >> LIN_BIT_OFFSET_HVAC_Airflow_Zone4_Stat)

     #define l_u8_wr_HVAC_Airflow_Zone4_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_Zone4_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Airflow_Zone4_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_Zone4_Stat) - 1) \
           << LIN_BIT_OFFSET_HVAC_Airflow_Zone4_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Airflow_Zone4_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Airflow_Zone4_Stat);\
           Lin_FrmDataUpdtFlag[1 >> 3] |= ( 1 << (1 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Auto_RL_Psd_HVAC_R */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Auto_RL_Psd_HVAC_R() \
     l_u8_rd_HVAC_Auto_RL_Psd_HVAC_R()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Auto_RL_Psd_HVAC_R(A) \
     l_u8_wr_HVAC_Auto_RL_Psd_HVAC_R(A)

     #define l_u8_rd_HVAC_Auto_RL_Psd_HVAC_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Auto_RL_Psd_HVAC_R] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Auto_RL_Psd_HVAC_R) - 1) \
        << LIN_BIT_OFFSET_HVAC_Auto_RL_Psd_HVAC_R )) \
        >> LIN_BIT_OFFSET_HVAC_Auto_RL_Psd_HVAC_R)

     #define l_u8_wr_HVAC_Auto_RL_Psd_HVAC_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Auto_RL_Psd_HVAC_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Auto_RL_Psd_HVAC_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Auto_RL_Psd_HVAC_R) - 1) \
           << LIN_BIT_OFFSET_HVAC_Auto_RL_Psd_HVAC_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Auto_RL_Psd_HVAC_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Auto_RL_Psd_HVAC_R);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Auto_RR_Psd_HVAC_R */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Auto_RR_Psd_HVAC_R() \
     l_u8_rd_HVAC_Auto_RR_Psd_HVAC_R()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Auto_RR_Psd_HVAC_R(A) \
     l_u8_wr_HVAC_Auto_RR_Psd_HVAC_R(A)

     #define l_u8_rd_HVAC_Auto_RR_Psd_HVAC_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Auto_RR_Psd_HVAC_R] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Auto_RR_Psd_HVAC_R) - 1) \
        << LIN_BIT_OFFSET_HVAC_Auto_RR_Psd_HVAC_R )) \
        >> LIN_BIT_OFFSET_HVAC_Auto_RR_Psd_HVAC_R)

     #define l_u8_wr_HVAC_Auto_RR_Psd_HVAC_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Auto_RR_Psd_HVAC_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Auto_RR_Psd_HVAC_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Auto_RR_Psd_HVAC_R) - 1) \
           << LIN_BIT_OFFSET_HVAC_Auto_RR_Psd_HVAC_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Auto_RR_Psd_HVAC_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Auto_RR_Psd_HVAC_R);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Auto_Zone1_Stat */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Auto_Zone1_Stat() \
     l_u8_rd_HVAC_Auto_Zone1_Stat()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Auto_Zone1_Stat(A) \
     l_u8_wr_HVAC_Auto_Zone1_Stat(A)

     #define l_u8_rd_HVAC_Auto_Zone1_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Auto_Zone1_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Auto_Zone1_Stat) - 1) \
        << LIN_BIT_OFFSET_HVAC_Auto_Zone1_Stat )) \
        >> LIN_BIT_OFFSET_HVAC_Auto_Zone1_Stat)

     #define l_u8_wr_HVAC_Auto_Zone1_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Auto_Zone1_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Auto_Zone1_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Auto_Zone1_Stat) - 1) \
           << LIN_BIT_OFFSET_HVAC_Auto_Zone1_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Auto_Zone1_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Auto_Zone1_Stat);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Auto_Zone2_Stat */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Auto_Zone2_Stat() \
     l_u8_rd_HVAC_Auto_Zone2_Stat()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Auto_Zone2_Stat(A) \
     l_u8_wr_HVAC_Auto_Zone2_Stat(A)

     #define l_u8_rd_HVAC_Auto_Zone2_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Auto_Zone2_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Auto_Zone2_Stat) - 1) \
        << LIN_BIT_OFFSET_HVAC_Auto_Zone2_Stat )) \
        >> LIN_BIT_OFFSET_HVAC_Auto_Zone2_Stat)

     #define l_u8_wr_HVAC_Auto_Zone2_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Auto_Zone2_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Auto_Zone2_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Auto_Zone2_Stat) - 1) \
           << LIN_BIT_OFFSET_HVAC_Auto_Zone2_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Auto_Zone2_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Auto_Zone2_Stat);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Auto_Zone3_Stat */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Auto_Zone3_Stat() \
     l_u8_rd_HVAC_Auto_Zone3_Stat()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Auto_Zone3_Stat(A) \
     l_u8_wr_HVAC_Auto_Zone3_Stat(A)

     #define l_u8_rd_HVAC_Auto_Zone3_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Auto_Zone3_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Auto_Zone3_Stat) - 1) \
        << LIN_BIT_OFFSET_HVAC_Auto_Zone3_Stat )) \
        >> LIN_BIT_OFFSET_HVAC_Auto_Zone3_Stat)

     #define l_u8_wr_HVAC_Auto_Zone3_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Auto_Zone3_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Auto_Zone3_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Auto_Zone3_Stat) - 1) \
           << LIN_BIT_OFFSET_HVAC_Auto_Zone3_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Auto_Zone3_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Auto_Zone3_Stat);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Auto_Zone4_Stat */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Auto_Zone4_Stat() \
     l_u8_rd_HVAC_Auto_Zone4_Stat()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Auto_Zone4_Stat(A) \
     l_u8_wr_HVAC_Auto_Zone4_Stat(A)

     #define l_u8_rd_HVAC_Auto_Zone4_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Auto_Zone4_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Auto_Zone4_Stat) - 1) \
        << LIN_BIT_OFFSET_HVAC_Auto_Zone4_Stat )) \
        >> LIN_BIT_OFFSET_HVAC_Auto_Zone4_Stat)

     #define l_u8_wr_HVAC_Auto_Zone4_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Auto_Zone4_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Auto_Zone4_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Auto_Zone4_Stat) - 1) \
           << LIN_BIT_OFFSET_HVAC_Auto_Zone4_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Auto_Zone4_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Auto_Zone4_Stat);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Dfrst_Z1Z2_Actv */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Dfrst_Z1Z2_Actv() \
     l_u8_rd_HVAC_Dfrst_Z1Z2_Actv()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Dfrst_Z1Z2_Actv(A) \
     l_u8_wr_HVAC_Dfrst_Z1Z2_Actv(A)

     #define l_u8_rd_HVAC_Dfrst_Z1Z2_Actv()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Dfrst_Z1Z2_Actv] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Dfrst_Z1Z2_Actv) - 1) \
        << LIN_BIT_OFFSET_HVAC_Dfrst_Z1Z2_Actv )) \
        >> LIN_BIT_OFFSET_HVAC_Dfrst_Z1Z2_Actv)

     #define l_u8_wr_HVAC_Dfrst_Z1Z2_Actv(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Dfrst_Z1Z2_Actv] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Dfrst_Z1Z2_Actv] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Dfrst_Z1Z2_Actv) - 1) \
           << LIN_BIT_OFFSET_HVAC_Dfrst_Z1Z2_Actv))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Dfrst_Z1Z2_Actv) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Dfrst_Z1Z2_Actv);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_DispCont_RL */
     #define l_u8_rd_LIN_SIGNAL_HVAC_DispCont_RL() \
     l_u8_rd_HVAC_DispCont_RL()
     #define l_u8_wr_LIN_SIGNAL_HVAC_DispCont_RL(A) \
     l_u8_wr_HVAC_DispCont_RL(A)

     #define l_u8_rd_HVAC_DispCont_RL()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_DispCont_RL] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_DispCont_RL) - 1) \
        << LIN_BIT_OFFSET_HVAC_DispCont_RL )) \
        >> LIN_BIT_OFFSET_HVAC_DispCont_RL)

     #define l_u8_wr_HVAC_DispCont_RL(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_DispCont_RL] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_DispCont_RL] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_DispCont_RL) - 1) \
           << LIN_BIT_OFFSET_HVAC_DispCont_RL))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_DispCont_RL) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_DispCont_RL);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_DispCont_RR */
     #define l_u8_rd_LIN_SIGNAL_HVAC_DispCont_RR() \
     l_u8_rd_HVAC_DispCont_RR()
     #define l_u8_wr_LIN_SIGNAL_HVAC_DispCont_RR(A) \
     l_u8_wr_HVAC_DispCont_RR(A)

     #define l_u8_rd_HVAC_DispCont_RR()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_DispCont_RR] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_DispCont_RR) - 1) \
        << LIN_BIT_OFFSET_HVAC_DispCont_RR )) \
        >> LIN_BIT_OFFSET_HVAC_DispCont_RR)

     #define l_u8_wr_HVAC_DispCont_RR(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_DispCont_RR] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_DispCont_RR] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_DispCont_RR) - 1) \
           << LIN_BIT_OFFSET_HVAC_DispCont_RR))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_DispCont_RR) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_DispCont_RR);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_FanLvl_RL_Rq_HVAC_R */
     #define l_u8_rd_LIN_SIGNAL_HVAC_FanLvl_RL_Rq_HVAC_R() \
     l_u8_rd_HVAC_FanLvl_RL_Rq_HVAC_R()
     #define l_u8_wr_LIN_SIGNAL_HVAC_FanLvl_RL_Rq_HVAC_R(A) \
     l_u8_wr_HVAC_FanLvl_RL_Rq_HVAC_R(A)

     #define l_u8_rd_HVAC_FanLvl_RL_Rq_HVAC_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FanLvl_RL_Rq_HVAC_R] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_FanLvl_RL_Rq_HVAC_R) - 1) \
        << LIN_BIT_OFFSET_HVAC_FanLvl_RL_Rq_HVAC_R )) \
        >> LIN_BIT_OFFSET_HVAC_FanLvl_RL_Rq_HVAC_R)

     #define l_u8_wr_HVAC_FanLvl_RL_Rq_HVAC_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FanLvl_RL_Rq_HVAC_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FanLvl_RL_Rq_HVAC_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_FanLvl_RL_Rq_HVAC_R) - 1) \
           << LIN_BIT_OFFSET_HVAC_FanLvl_RL_Rq_HVAC_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_FanLvl_RL_Rq_HVAC_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_FanLvl_RL_Rq_HVAC_R);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_FanLvl_RR_Rq_HVAC_R */
     #define l_u8_rd_LIN_SIGNAL_HVAC_FanLvl_RR_Rq_HVAC_R() \
     l_u8_rd_HVAC_FanLvl_RR_Rq_HVAC_R()
     #define l_u8_wr_LIN_SIGNAL_HVAC_FanLvl_RR_Rq_HVAC_R(A) \
     l_u8_wr_HVAC_FanLvl_RR_Rq_HVAC_R(A)

     #define l_u8_rd_HVAC_FanLvl_RR_Rq_HVAC_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FanLvl_RR_Rq_HVAC_R] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_FanLvl_RR_Rq_HVAC_R) - 1) \
        << LIN_BIT_OFFSET_HVAC_FanLvl_RR_Rq_HVAC_R )) \
        >> LIN_BIT_OFFSET_HVAC_FanLvl_RR_Rq_HVAC_R)

     #define l_u8_wr_HVAC_FanLvl_RR_Rq_HVAC_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FanLvl_RR_Rq_HVAC_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FanLvl_RR_Rq_HVAC_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_FanLvl_RR_Rq_HVAC_R) - 1) \
           << LIN_BIT_OFFSET_HVAC_FanLvl_RR_Rq_HVAC_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_FanLvl_RR_Rq_HVAC_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_FanLvl_RR_Rq_HVAC_R);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_FanMax_R */
     #define l_u8_rd_LIN_SIGNAL_HVAC_FanMax_R() \
     l_u8_rd_HVAC_FanMax_R()
     #define l_u8_wr_LIN_SIGNAL_HVAC_FanMax_R(A) \
     l_u8_wr_HVAC_FanMax_R(A)

     #define l_u8_rd_HVAC_FanMax_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FanMax_R] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_FanMax_R) - 1) \
        << LIN_BIT_OFFSET_HVAC_FanMax_R )) \
        >> LIN_BIT_OFFSET_HVAC_FanMax_R)

     #define l_u8_wr_HVAC_FanMax_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FanMax_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FanMax_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_FanMax_R) - 1) \
           << LIN_BIT_OFFSET_HVAC_FanMax_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_FanMax_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_FanMax_R);\
           Lin_FrmDataUpdtFlag[4 >> 3] |= ( 1 << (4 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_FanMin_R */
     #define l_u8_rd_LIN_SIGNAL_HVAC_FanMin_R() \
     l_u8_rd_HVAC_FanMin_R()
     #define l_u8_wr_LIN_SIGNAL_HVAC_FanMin_R(A) \
     l_u8_wr_HVAC_FanMin_R(A)

     #define l_u8_rd_HVAC_FanMin_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FanMin_R] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_FanMin_R) - 1) \
        << LIN_BIT_OFFSET_HVAC_FanMin_R )) \
        >> LIN_BIT_OFFSET_HVAC_FanMin_R)

     #define l_u8_wr_HVAC_FanMin_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FanMin_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FanMin_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_FanMin_R) - 1) \
           << LIN_BIT_OFFSET_HVAC_FanMin_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_FanMin_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_FanMin_R);\
           Lin_FrmDataUpdtFlag[4 >> 3] |= ( 1 << (4 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Fan_AirDistChg_RL_HVAC_R */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Fan_AirDistChg_RL_HVAC_R() \
     l_u8_rd_HVAC_Fan_AirDistChg_RL_HVAC_R()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Fan_AirDistChg_RL_HVAC_R(A) \
     l_u8_wr_HVAC_Fan_AirDistChg_RL_HVAC_R(A)

     #define l_u8_rd_HVAC_Fan_AirDistChg_RL_HVAC_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_AirDistChg_RL_HVAC_R] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Fan_AirDistChg_RL_HVAC_R) - 1) \
        << LIN_BIT_OFFSET_HVAC_Fan_AirDistChg_RL_HVAC_R )) \
        >> LIN_BIT_OFFSET_HVAC_Fan_AirDistChg_RL_HVAC_R)

     #define l_u8_wr_HVAC_Fan_AirDistChg_RL_HVAC_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_AirDistChg_RL_HVAC_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_AirDistChg_RL_HVAC_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Fan_AirDistChg_RL_HVAC_R) - 1) \
           << LIN_BIT_OFFSET_HVAC_Fan_AirDistChg_RL_HVAC_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Fan_AirDistChg_RL_HVAC_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Fan_AirDistChg_RL_HVAC_R);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Fan_AirDistChg_RR_HVAC_R */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Fan_AirDistChg_RR_HVAC_R() \
     l_u8_rd_HVAC_Fan_AirDistChg_RR_HVAC_R()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Fan_AirDistChg_RR_HVAC_R(A) \
     l_u8_wr_HVAC_Fan_AirDistChg_RR_HVAC_R(A)

     #define l_u8_rd_HVAC_Fan_AirDistChg_RR_HVAC_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_AirDistChg_RR_HVAC_R] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Fan_AirDistChg_RR_HVAC_R) - 1) \
        << LIN_BIT_OFFSET_HVAC_Fan_AirDistChg_RR_HVAC_R )) \
        >> LIN_BIT_OFFSET_HVAC_Fan_AirDistChg_RR_HVAC_R)

     #define l_u8_wr_HVAC_Fan_AirDistChg_RR_HVAC_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_AirDistChg_RR_HVAC_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_AirDistChg_RR_HVAC_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Fan_AirDistChg_RR_HVAC_R) - 1) \
           << LIN_BIT_OFFSET_HVAC_Fan_AirDistChg_RR_HVAC_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Fan_AirDistChg_RR_HVAC_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Fan_AirDistChg_RR_HVAC_R);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Fan_Zone1_Disp_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Fan_Zone1_Disp_Rq() \
     l_u8_rd_HVAC_Fan_Zone1_Disp_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Fan_Zone1_Disp_Rq(A) \
     l_u8_wr_HVAC_Fan_Zone1_Disp_Rq(A)

     #define l_u8_rd_HVAC_Fan_Zone1_Disp_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_Zone1_Disp_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Fan_Zone1_Disp_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_Fan_Zone1_Disp_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_Fan_Zone1_Disp_Rq)

     #define l_u8_wr_HVAC_Fan_Zone1_Disp_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_Zone1_Disp_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_Zone1_Disp_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Fan_Zone1_Disp_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_Fan_Zone1_Disp_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Fan_Zone1_Disp_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Fan_Zone1_Disp_Rq);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Fan_Zone1_Stat */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Fan_Zone1_Stat() \
     l_u8_rd_HVAC_Fan_Zone1_Stat()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Fan_Zone1_Stat(A) \
     l_u8_wr_HVAC_Fan_Zone1_Stat(A)

     #define l_u8_rd_HVAC_Fan_Zone1_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_Zone1_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Fan_Zone1_Stat) - 1) \
        << LIN_BIT_OFFSET_HVAC_Fan_Zone1_Stat )) \
        >> LIN_BIT_OFFSET_HVAC_Fan_Zone1_Stat)

     #define l_u8_wr_HVAC_Fan_Zone1_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_Zone1_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_Zone1_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Fan_Zone1_Stat) - 1) \
           << LIN_BIT_OFFSET_HVAC_Fan_Zone1_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Fan_Zone1_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Fan_Zone1_Stat);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Fan_Zone2_Disp_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Fan_Zone2_Disp_Rq() \
     l_u8_rd_HVAC_Fan_Zone2_Disp_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Fan_Zone2_Disp_Rq(A) \
     l_u8_wr_HVAC_Fan_Zone2_Disp_Rq(A)

     #define l_u8_rd_HVAC_Fan_Zone2_Disp_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_Zone2_Disp_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Fan_Zone2_Disp_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_Fan_Zone2_Disp_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_Fan_Zone2_Disp_Rq)

     #define l_u8_wr_HVAC_Fan_Zone2_Disp_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_Zone2_Disp_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_Zone2_Disp_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Fan_Zone2_Disp_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_Fan_Zone2_Disp_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Fan_Zone2_Disp_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Fan_Zone2_Disp_Rq);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Fan_Zone2_Stat */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Fan_Zone2_Stat() \
     l_u8_rd_HVAC_Fan_Zone2_Stat()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Fan_Zone2_Stat(A) \
     l_u8_wr_HVAC_Fan_Zone2_Stat(A)

     #define l_u8_rd_HVAC_Fan_Zone2_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_Zone2_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Fan_Zone2_Stat) - 1) \
        << LIN_BIT_OFFSET_HVAC_Fan_Zone2_Stat )) \
        >> LIN_BIT_OFFSET_HVAC_Fan_Zone2_Stat)

     #define l_u8_wr_HVAC_Fan_Zone2_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_Zone2_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_Zone2_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Fan_Zone2_Stat) - 1) \
           << LIN_BIT_OFFSET_HVAC_Fan_Zone2_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Fan_Zone2_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Fan_Zone2_Stat);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Fan_Zone3_Disp_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Fan_Zone3_Disp_Rq() \
     l_u8_rd_HVAC_Fan_Zone3_Disp_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Fan_Zone3_Disp_Rq(A) \
     l_u8_wr_HVAC_Fan_Zone3_Disp_Rq(A)

     #define l_u8_rd_HVAC_Fan_Zone3_Disp_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_Zone3_Disp_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Fan_Zone3_Disp_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_Fan_Zone3_Disp_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_Fan_Zone3_Disp_Rq)

     #define l_u8_wr_HVAC_Fan_Zone3_Disp_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_Zone3_Disp_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_Zone3_Disp_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Fan_Zone3_Disp_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_Fan_Zone3_Disp_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Fan_Zone3_Disp_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Fan_Zone3_Disp_Rq);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Fan_Zone3_Stat */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Fan_Zone3_Stat() \
     l_u8_rd_HVAC_Fan_Zone3_Stat()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Fan_Zone3_Stat(A) \
     l_u8_wr_HVAC_Fan_Zone3_Stat(A)

     #define l_u8_rd_HVAC_Fan_Zone3_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_Zone3_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Fan_Zone3_Stat) - 1) \
        << LIN_BIT_OFFSET_HVAC_Fan_Zone3_Stat )) \
        >> LIN_BIT_OFFSET_HVAC_Fan_Zone3_Stat)

     #define l_u8_wr_HVAC_Fan_Zone3_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_Zone3_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_Zone3_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Fan_Zone3_Stat) - 1) \
           << LIN_BIT_OFFSET_HVAC_Fan_Zone3_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Fan_Zone3_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Fan_Zone3_Stat);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Fan_Zone4_Disp_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Fan_Zone4_Disp_Rq() \
     l_u8_rd_HVAC_Fan_Zone4_Disp_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Fan_Zone4_Disp_Rq(A) \
     l_u8_wr_HVAC_Fan_Zone4_Disp_Rq(A)

     #define l_u8_rd_HVAC_Fan_Zone4_Disp_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_Zone4_Disp_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Fan_Zone4_Disp_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_Fan_Zone4_Disp_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_Fan_Zone4_Disp_Rq)

     #define l_u8_wr_HVAC_Fan_Zone4_Disp_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_Zone4_Disp_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_Zone4_Disp_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Fan_Zone4_Disp_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_Fan_Zone4_Disp_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Fan_Zone4_Disp_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Fan_Zone4_Disp_Rq);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Fan_Zone4_Stat */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Fan_Zone4_Stat() \
     l_u8_rd_HVAC_Fan_Zone4_Stat()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Fan_Zone4_Stat(A) \
     l_u8_wr_HVAC_Fan_Zone4_Stat(A)

     #define l_u8_rd_HVAC_Fan_Zone4_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_Zone4_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Fan_Zone4_Stat) - 1) \
        << LIN_BIT_OFFSET_HVAC_Fan_Zone4_Stat )) \
        >> LIN_BIT_OFFSET_HVAC_Fan_Zone4_Stat)

     #define l_u8_wr_HVAC_Fan_Zone4_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_Zone4_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Fan_Zone4_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Fan_Zone4_Stat) - 1) \
           << LIN_BIT_OFFSET_HVAC_Fan_Zone4_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Fan_Zone4_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Fan_Zone4_Stat);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_FtwInc_RL_Rq_HVAC_R */
     #define l_u8_rd_LIN_SIGNAL_HVAC_FtwInc_RL_Rq_HVAC_R() \
     l_u8_rd_HVAC_FtwInc_RL_Rq_HVAC_R()
     #define l_u8_wr_LIN_SIGNAL_HVAC_FtwInc_RL_Rq_HVAC_R(A) \
     l_u8_wr_HVAC_FtwInc_RL_Rq_HVAC_R(A)

     #define l_u8_rd_HVAC_FtwInc_RL_Rq_HVAC_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_RL_Rq_HVAC_R] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_RL_Rq_HVAC_R) - 1) \
        << LIN_BIT_OFFSET_HVAC_FtwInc_RL_Rq_HVAC_R )) \
        >> LIN_BIT_OFFSET_HVAC_FtwInc_RL_Rq_HVAC_R)

     #define l_u8_wr_HVAC_FtwInc_RL_Rq_HVAC_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_RL_Rq_HVAC_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_RL_Rq_HVAC_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_RL_Rq_HVAC_R) - 1) \
           << LIN_BIT_OFFSET_HVAC_FtwInc_RL_Rq_HVAC_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_RL_Rq_HVAC_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_FtwInc_RL_Rq_HVAC_R);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_FtwInc_RR_Rq_HVAC_R */
     #define l_u8_rd_LIN_SIGNAL_HVAC_FtwInc_RR_Rq_HVAC_R() \
     l_u8_rd_HVAC_FtwInc_RR_Rq_HVAC_R()
     #define l_u8_wr_LIN_SIGNAL_HVAC_FtwInc_RR_Rq_HVAC_R(A) \
     l_u8_wr_HVAC_FtwInc_RR_Rq_HVAC_R(A)

     #define l_u8_rd_HVAC_FtwInc_RR_Rq_HVAC_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_RR_Rq_HVAC_R] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_RR_Rq_HVAC_R) - 1) \
        << LIN_BIT_OFFSET_HVAC_FtwInc_RR_Rq_HVAC_R )) \
        >> LIN_BIT_OFFSET_HVAC_FtwInc_RR_Rq_HVAC_R)

     #define l_u8_wr_HVAC_FtwInc_RR_Rq_HVAC_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_RR_Rq_HVAC_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_RR_Rq_HVAC_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_RR_Rq_HVAC_R) - 1) \
           << LIN_BIT_OFFSET_HVAC_FtwInc_RR_Rq_HVAC_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_RR_Rq_HVAC_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_FtwInc_RR_Rq_HVAC_R);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_FtwInc_Zone1_Disp_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_FtwInc_Zone1_Disp_Rq() \
     l_u8_rd_HVAC_FtwInc_Zone1_Disp_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_FtwInc_Zone1_Disp_Rq(A) \
     l_u8_wr_HVAC_FtwInc_Zone1_Disp_Rq(A)

     #define l_u8_rd_HVAC_FtwInc_Zone1_Disp_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_Zone1_Disp_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone1_Disp_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_FtwInc_Zone1_Disp_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_FtwInc_Zone1_Disp_Rq)

     #define l_u8_wr_HVAC_FtwInc_Zone1_Disp_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_Zone1_Disp_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_Zone1_Disp_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone1_Disp_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_FtwInc_Zone1_Disp_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone1_Disp_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_FtwInc_Zone1_Disp_Rq);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_FtwInc_Zone1_Stat */
     #define l_u8_rd_LIN_SIGNAL_HVAC_FtwInc_Zone1_Stat() \
     l_u8_rd_HVAC_FtwInc_Zone1_Stat()
     #define l_u8_wr_LIN_SIGNAL_HVAC_FtwInc_Zone1_Stat(A) \
     l_u8_wr_HVAC_FtwInc_Zone1_Stat(A)

     #define l_u8_rd_HVAC_FtwInc_Zone1_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_Zone1_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone1_Stat) - 1) \
        << LIN_BIT_OFFSET_HVAC_FtwInc_Zone1_Stat )) \
        >> LIN_BIT_OFFSET_HVAC_FtwInc_Zone1_Stat)

     #define l_u8_wr_HVAC_FtwInc_Zone1_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_Zone1_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_Zone1_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone1_Stat) - 1) \
           << LIN_BIT_OFFSET_HVAC_FtwInc_Zone1_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone1_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_FtwInc_Zone1_Stat);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_FtwInc_Zone2_Disp_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_FtwInc_Zone2_Disp_Rq() \
     l_u8_rd_HVAC_FtwInc_Zone2_Disp_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_FtwInc_Zone2_Disp_Rq(A) \
     l_u8_wr_HVAC_FtwInc_Zone2_Disp_Rq(A)

     #define l_u8_rd_HVAC_FtwInc_Zone2_Disp_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_Zone2_Disp_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone2_Disp_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_FtwInc_Zone2_Disp_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_FtwInc_Zone2_Disp_Rq)

     #define l_u8_wr_HVAC_FtwInc_Zone2_Disp_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_Zone2_Disp_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_Zone2_Disp_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone2_Disp_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_FtwInc_Zone2_Disp_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone2_Disp_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_FtwInc_Zone2_Disp_Rq);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_FtwInc_Zone2_Stat */
     #define l_u8_rd_LIN_SIGNAL_HVAC_FtwInc_Zone2_Stat() \
     l_u8_rd_HVAC_FtwInc_Zone2_Stat()
     #define l_u8_wr_LIN_SIGNAL_HVAC_FtwInc_Zone2_Stat(A) \
     l_u8_wr_HVAC_FtwInc_Zone2_Stat(A)

     #define l_u8_rd_HVAC_FtwInc_Zone2_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_Zone2_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone2_Stat) - 1) \
        << LIN_BIT_OFFSET_HVAC_FtwInc_Zone2_Stat )) \
        >> LIN_BIT_OFFSET_HVAC_FtwInc_Zone2_Stat)

     #define l_u8_wr_HVAC_FtwInc_Zone2_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_Zone2_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_Zone2_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone2_Stat) - 1) \
           << LIN_BIT_OFFSET_HVAC_FtwInc_Zone2_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone2_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_FtwInc_Zone2_Stat);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_FtwInc_Zone3_Disp_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_FtwInc_Zone3_Disp_Rq() \
     l_u8_rd_HVAC_FtwInc_Zone3_Disp_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_FtwInc_Zone3_Disp_Rq(A) \
     l_u8_wr_HVAC_FtwInc_Zone3_Disp_Rq(A)

     #define l_u8_rd_HVAC_FtwInc_Zone3_Disp_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_Zone3_Disp_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone3_Disp_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_FtwInc_Zone3_Disp_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_FtwInc_Zone3_Disp_Rq)

     #define l_u8_wr_HVAC_FtwInc_Zone3_Disp_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_Zone3_Disp_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_Zone3_Disp_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone3_Disp_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_FtwInc_Zone3_Disp_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone3_Disp_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_FtwInc_Zone3_Disp_Rq);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_FtwInc_Zone3_Stat */
     #define l_u8_rd_LIN_SIGNAL_HVAC_FtwInc_Zone3_Stat() \
     l_u8_rd_HVAC_FtwInc_Zone3_Stat()
     #define l_u8_wr_LIN_SIGNAL_HVAC_FtwInc_Zone3_Stat(A) \
     l_u8_wr_HVAC_FtwInc_Zone3_Stat(A)

     #define l_u8_rd_HVAC_FtwInc_Zone3_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_Zone3_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone3_Stat) - 1) \
        << LIN_BIT_OFFSET_HVAC_FtwInc_Zone3_Stat )) \
        >> LIN_BIT_OFFSET_HVAC_FtwInc_Zone3_Stat)

     #define l_u8_wr_HVAC_FtwInc_Zone3_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_Zone3_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_Zone3_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone3_Stat) - 1) \
           << LIN_BIT_OFFSET_HVAC_FtwInc_Zone3_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone3_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_FtwInc_Zone3_Stat);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_FtwInc_Zone4_Disp_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_FtwInc_Zone4_Disp_Rq() \
     l_u8_rd_HVAC_FtwInc_Zone4_Disp_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_FtwInc_Zone4_Disp_Rq(A) \
     l_u8_wr_HVAC_FtwInc_Zone4_Disp_Rq(A)

     #define l_u8_rd_HVAC_FtwInc_Zone4_Disp_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_Zone4_Disp_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone4_Disp_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_FtwInc_Zone4_Disp_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_FtwInc_Zone4_Disp_Rq)

     #define l_u8_wr_HVAC_FtwInc_Zone4_Disp_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_Zone4_Disp_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_Zone4_Disp_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone4_Disp_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_FtwInc_Zone4_Disp_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone4_Disp_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_FtwInc_Zone4_Disp_Rq);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_FtwInc_Zone4_Stat */
     #define l_u8_rd_LIN_SIGNAL_HVAC_FtwInc_Zone4_Stat() \
     l_u8_rd_HVAC_FtwInc_Zone4_Stat()
     #define l_u8_wr_LIN_SIGNAL_HVAC_FtwInc_Zone4_Stat(A) \
     l_u8_wr_HVAC_FtwInc_Zone4_Stat(A)

     #define l_u8_rd_HVAC_FtwInc_Zone4_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_Zone4_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone4_Stat) - 1) \
        << LIN_BIT_OFFSET_HVAC_FtwInc_Zone4_Stat )) \
        >> LIN_BIT_OFFSET_HVAC_FtwInc_Zone4_Stat)

     #define l_u8_wr_HVAC_FtwInc_Zone4_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_Zone4_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_FtwInc_Zone4_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone4_Stat) - 1) \
           << LIN_BIT_OFFSET_HVAC_FtwInc_Zone4_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_FtwInc_Zone4_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_FtwInc_Zone4_Stat);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_ICH1_2_LED_On_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_ICH1_2_LED_On_Rq() \
     l_u8_rd_HVAC_ICH1_2_LED_On_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_ICH1_2_LED_On_Rq(A) \
     l_u8_wr_HVAC_ICH1_2_LED_On_Rq(A)

     #define l_u8_rd_HVAC_ICH1_2_LED_On_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_ICH1_2_LED_On_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_ICH1_2_LED_On_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_ICH1_2_LED_On_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_ICH1_2_LED_On_Rq)

     #define l_u8_wr_HVAC_ICH1_2_LED_On_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_ICH1_2_LED_On_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_ICH1_2_LED_On_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_ICH1_2_LED_On_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_ICH1_2_LED_On_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_ICH1_2_LED_On_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_ICH1_2_LED_On_Rq);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_ICH_PreTm_LED_On_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_ICH_PreTm_LED_On_Rq() \
     l_u8_rd_HVAC_ICH_PreTm_LED_On_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_ICH_PreTm_LED_On_Rq(A) \
     l_u8_wr_HVAC_ICH_PreTm_LED_On_Rq(A)

     #define l_u8_rd_HVAC_ICH_PreTm_LED_On_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_ICH_PreTm_LED_On_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_ICH_PreTm_LED_On_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_ICH_PreTm_LED_On_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_ICH_PreTm_LED_On_Rq)

     #define l_u8_wr_HVAC_ICH_PreTm_LED_On_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_ICH_PreTm_LED_On_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_ICH_PreTm_LED_On_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_ICH_PreTm_LED_On_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_ICH_PreTm_LED_On_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_ICH_PreTm_LED_On_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_ICH_PreTm_LED_On_Rq);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_ICH_TxmtSync_Actv */
     #define l_u8_rd_LIN_SIGNAL_HVAC_ICH_TxmtSync_Actv() \
     l_u8_rd_HVAC_ICH_TxmtSync_Actv()
     #define l_u8_wr_LIN_SIGNAL_HVAC_ICH_TxmtSync_Actv(A) \
     l_u8_wr_HVAC_ICH_TxmtSync_Actv(A)

     #define l_u8_rd_HVAC_ICH_TxmtSync_Actv()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_ICH_TxmtSync_Actv] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_ICH_TxmtSync_Actv) - 1) \
        << LIN_BIT_OFFSET_HVAC_ICH_TxmtSync_Actv )) \
        >> LIN_BIT_OFFSET_HVAC_ICH_TxmtSync_Actv)

     #define l_u8_wr_HVAC_ICH_TxmtSync_Actv(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_ICH_TxmtSync_Actv] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_ICH_TxmtSync_Actv] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_ICH_TxmtSync_Actv) - 1) \
           << LIN_BIT_OFFSET_HVAC_ICH_TxmtSync_Actv))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_ICH_TxmtSync_Actv) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_ICH_TxmtSync_Actv);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_MaxCool_R_Psd_HVAC_R */
     #define l_u8_rd_LIN_SIGNAL_HVAC_MaxCool_R_Psd_HVAC_R() \
     l_u8_rd_HVAC_MaxCool_R_Psd_HVAC_R()
     #define l_u8_wr_LIN_SIGNAL_HVAC_MaxCool_R_Psd_HVAC_R(A) \
     l_u8_wr_HVAC_MaxCool_R_Psd_HVAC_R(A)

     #define l_u8_rd_HVAC_MaxCool_R_Psd_HVAC_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_MaxCool_R_Psd_HVAC_R] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_MaxCool_R_Psd_HVAC_R) - 1) \
        << LIN_BIT_OFFSET_HVAC_MaxCool_R_Psd_HVAC_R )) \
        >> LIN_BIT_OFFSET_HVAC_MaxCool_R_Psd_HVAC_R)

     #define l_u8_wr_HVAC_MaxCool_R_Psd_HVAC_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_MaxCool_R_Psd_HVAC_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_MaxCool_R_Psd_HVAC_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_MaxCool_R_Psd_HVAC_R) - 1) \
           << LIN_BIT_OFFSET_HVAC_MaxCool_R_Psd_HVAC_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_MaxCool_R_Psd_HVAC_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_MaxCool_R_Psd_HVAC_R);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_MaxCool_Z1Z2_Actv */
     #define l_u8_rd_LIN_SIGNAL_HVAC_MaxCool_Z1Z2_Actv() \
     l_u8_rd_HVAC_MaxCool_Z1Z2_Actv()
     #define l_u8_wr_LIN_SIGNAL_HVAC_MaxCool_Z1Z2_Actv(A) \
     l_u8_wr_HVAC_MaxCool_Z1Z2_Actv(A)

     #define l_u8_rd_HVAC_MaxCool_Z1Z2_Actv()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_MaxCool_Z1Z2_Actv] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_MaxCool_Z1Z2_Actv) - 1) \
        << LIN_BIT_OFFSET_HVAC_MaxCool_Z1Z2_Actv )) \
        >> LIN_BIT_OFFSET_HVAC_MaxCool_Z1Z2_Actv)

     #define l_u8_wr_HVAC_MaxCool_Z1Z2_Actv(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_MaxCool_Z1Z2_Actv] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_MaxCool_Z1Z2_Actv] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_MaxCool_Z1Z2_Actv) - 1) \
           << LIN_BIT_OFFSET_HVAC_MaxCool_Z1Z2_Actv))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_MaxCool_Z1Z2_Actv) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_MaxCool_Z1Z2_Actv);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_MaxCool_Z3Z4_Actv */
     #define l_u8_rd_LIN_SIGNAL_HVAC_MaxCool_Z3Z4_Actv() \
     l_u8_rd_HVAC_MaxCool_Z3Z4_Actv()
     #define l_u8_wr_LIN_SIGNAL_HVAC_MaxCool_Z3Z4_Actv(A) \
     l_u8_wr_HVAC_MaxCool_Z3Z4_Actv(A)

     #define l_u8_rd_HVAC_MaxCool_Z3Z4_Actv()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_MaxCool_Z3Z4_Actv] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_MaxCool_Z3Z4_Actv) - 1) \
        << LIN_BIT_OFFSET_HVAC_MaxCool_Z3Z4_Actv )) \
        >> LIN_BIT_OFFSET_HVAC_MaxCool_Z3Z4_Actv)

     #define l_u8_wr_HVAC_MaxCool_Z3Z4_Actv(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_MaxCool_Z3Z4_Actv] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_MaxCool_Z3Z4_Actv] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_MaxCool_Z3Z4_Actv) - 1) \
           << LIN_BIT_OFFSET_HVAC_MaxCool_Z3Z4_Actv))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_MaxCool_Z3Z4_Actv) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_MaxCool_Z3Z4_Actv);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Menu1_2_Disp_LED_On_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Menu1_2_Disp_LED_On_Rq() \
     l_u8_rd_HVAC_Menu1_2_Disp_LED_On_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Menu1_2_Disp_LED_On_Rq(A) \
     l_u8_wr_HVAC_Menu1_2_Disp_LED_On_Rq(A)

     #define l_u8_rd_HVAC_Menu1_2_Disp_LED_On_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Menu1_2_Disp_LED_On_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Menu1_2_Disp_LED_On_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_Menu1_2_Disp_LED_On_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_Menu1_2_Disp_LED_On_Rq)

     #define l_u8_wr_HVAC_Menu1_2_Disp_LED_On_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Menu1_2_Disp_LED_On_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Menu1_2_Disp_LED_On_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Menu1_2_Disp_LED_On_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_Menu1_2_Disp_LED_On_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Menu1_2_Disp_LED_On_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Menu1_2_Disp_LED_On_Rq);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Menu3_4_Disp_LED_On_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Menu3_4_Disp_LED_On_Rq() \
     l_u8_rd_HVAC_Menu3_4_Disp_LED_On_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Menu3_4_Disp_LED_On_Rq(A) \
     l_u8_wr_HVAC_Menu3_4_Disp_LED_On_Rq(A)

     #define l_u8_rd_HVAC_Menu3_4_Disp_LED_On_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Menu3_4_Disp_LED_On_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Menu3_4_Disp_LED_On_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_Menu3_4_Disp_LED_On_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_Menu3_4_Disp_LED_On_Rq)

     #define l_u8_wr_HVAC_Menu3_4_Disp_LED_On_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Menu3_4_Disp_LED_On_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Menu3_4_Disp_LED_On_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Menu3_4_Disp_LED_On_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_Menu3_4_Disp_LED_On_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Menu3_4_Disp_LED_On_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Menu3_4_Disp_LED_On_Rq);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Mono_Actv */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Mono_Actv() \
     l_u8_rd_HVAC_Mono_Actv()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Mono_Actv(A) \
     l_u8_wr_HVAC_Mono_Actv(A)

     #define l_u8_rd_HVAC_Mono_Actv()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Mono_Actv] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Mono_Actv) - 1) \
        << LIN_BIT_OFFSET_HVAC_Mono_Actv )) \
        >> LIN_BIT_OFFSET_HVAC_Mono_Actv)

     #define l_u8_wr_HVAC_Mono_Actv(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Mono_Actv] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Mono_Actv] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Mono_Actv) - 1) \
           << LIN_BIT_OFFSET_HVAC_Mono_Actv))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Mono_Actv) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Mono_Actv);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Mono_R_Psd_HVAC_R */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Mono_R_Psd_HVAC_R() \
     l_u8_rd_HVAC_Mono_R_Psd_HVAC_R()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Mono_R_Psd_HVAC_R(A) \
     l_u8_wr_HVAC_Mono_R_Psd_HVAC_R(A)

     #define l_u8_rd_HVAC_Mono_R_Psd_HVAC_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Mono_R_Psd_HVAC_R] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Mono_R_Psd_HVAC_R) - 1) \
        << LIN_BIT_OFFSET_HVAC_Mono_R_Psd_HVAC_R )) \
        >> LIN_BIT_OFFSET_HVAC_Mono_R_Psd_HVAC_R)

     #define l_u8_wr_HVAC_Mono_R_Psd_HVAC_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Mono_R_Psd_HVAC_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Mono_R_Psd_HVAC_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Mono_R_Psd_HVAC_R) - 1) \
           << LIN_BIT_OFFSET_HVAC_Mono_R_Psd_HVAC_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Mono_R_Psd_HVAC_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Mono_R_Psd_HVAC_R);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_NumOfAirDistPosn_R */
     #define l_u8_rd_LIN_SIGNAL_HVAC_NumOfAirDistPosn_R() \
     l_u8_rd_HVAC_NumOfAirDistPosn_R()
     #define l_u8_wr_LIN_SIGNAL_HVAC_NumOfAirDistPosn_R(A) \
     l_u8_wr_HVAC_NumOfAirDistPosn_R(A)

     #define l_u8_rd_HVAC_NumOfAirDistPosn_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_NumOfAirDistPosn_R] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_NumOfAirDistPosn_R) - 1) \
        << LIN_BIT_OFFSET_HVAC_NumOfAirDistPosn_R )) \
        >> LIN_BIT_OFFSET_HVAC_NumOfAirDistPosn_R)

     #define l_u8_wr_HVAC_NumOfAirDistPosn_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_NumOfAirDistPosn_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_NumOfAirDistPosn_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_NumOfAirDistPosn_R) - 1) \
           << LIN_BIT_OFFSET_HVAC_NumOfAirDistPosn_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_NumOfAirDistPosn_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_NumOfAirDistPosn_R);\
           Lin_FrmDataUpdtFlag[4 >> 3] |= ( 1 << (4 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Off_R_Psd_HVAC_R */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Off_R_Psd_HVAC_R() \
     l_u8_rd_HVAC_Off_R_Psd_HVAC_R()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Off_R_Psd_HVAC_R(A) \
     l_u8_wr_HVAC_Off_R_Psd_HVAC_R(A)

     #define l_u8_rd_HVAC_Off_R_Psd_HVAC_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Off_R_Psd_HVAC_R] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Off_R_Psd_HVAC_R) - 1) \
        << LIN_BIT_OFFSET_HVAC_Off_R_Psd_HVAC_R )) \
        >> LIN_BIT_OFFSET_HVAC_Off_R_Psd_HVAC_R)

     #define l_u8_wr_HVAC_Off_R_Psd_HVAC_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Off_R_Psd_HVAC_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Off_R_Psd_HVAC_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Off_R_Psd_HVAC_R) - 1) \
           << LIN_BIT_OFFSET_HVAC_Off_R_Psd_HVAC_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Off_R_Psd_HVAC_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Off_R_Psd_HVAC_R);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Off_Z1Z2_Actv */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Off_Z1Z2_Actv() \
     l_u8_rd_HVAC_Off_Z1Z2_Actv()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Off_Z1Z2_Actv(A) \
     l_u8_wr_HVAC_Off_Z1Z2_Actv(A)

     #define l_u8_rd_HVAC_Off_Z1Z2_Actv()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Off_Z1Z2_Actv] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Off_Z1Z2_Actv) - 1) \
        << LIN_BIT_OFFSET_HVAC_Off_Z1Z2_Actv )) \
        >> LIN_BIT_OFFSET_HVAC_Off_Z1Z2_Actv)

     #define l_u8_wr_HVAC_Off_Z1Z2_Actv(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Off_Z1Z2_Actv] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Off_Z1Z2_Actv] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Off_Z1Z2_Actv) - 1) \
           << LIN_BIT_OFFSET_HVAC_Off_Z1Z2_Actv))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Off_Z1Z2_Actv) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Off_Z1Z2_Actv);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Off_Z3Z4_Actv */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Off_Z3Z4_Actv() \
     l_u8_rd_HVAC_Off_Z3Z4_Actv()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Off_Z3Z4_Actv(A) \
     l_u8_wr_HVAC_Off_Z3Z4_Actv(A)

     #define l_u8_rd_HVAC_Off_Z3Z4_Actv()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Off_Z3Z4_Actv] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Off_Z3Z4_Actv) - 1) \
        << LIN_BIT_OFFSET_HVAC_Off_Z3Z4_Actv )) \
        >> LIN_BIT_OFFSET_HVAC_Off_Z3Z4_Actv)

     #define l_u8_wr_HVAC_Off_Z3Z4_Actv(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Off_Z3Z4_Actv] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Off_Z3Z4_Actv] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Off_Z3Z4_Actv) - 1) \
           << LIN_BIT_OFFSET_HVAC_Off_Z3Z4_Actv))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Off_Z3Z4_Actv) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Off_Z3Z4_Actv);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_OprtnVoltRng_Ok */
     #define l_u8_rd_LIN_SIGNAL_HVAC_OprtnVoltRng_Ok() \
     l_u8_rd_HVAC_OprtnVoltRng_Ok()
     #define l_u8_wr_LIN_SIGNAL_HVAC_OprtnVoltRng_Ok(A) \
     l_u8_wr_HVAC_OprtnVoltRng_Ok(A)

     #define l_u8_rd_HVAC_OprtnVoltRng_Ok()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_OprtnVoltRng_Ok] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_OprtnVoltRng_Ok) - 1) \
        << LIN_BIT_OFFSET_HVAC_OprtnVoltRng_Ok )) \
        >> LIN_BIT_OFFSET_HVAC_OprtnVoltRng_Ok)

     #define l_u8_wr_HVAC_OprtnVoltRng_Ok(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_OprtnVoltRng_Ok] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_OprtnVoltRng_Ok] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_OprtnVoltRng_Ok) - 1) \
           << LIN_BIT_OFFSET_HVAC_OprtnVoltRng_Ok))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_OprtnVoltRng_Ok) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_OprtnVoltRng_Ok);\
           Lin_FrmDataUpdtFlag[3 >> 3] |= ( 1 << (3 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_RHU_R_Psd_HVAC_R */
     #define l_u8_rd_LIN_SIGNAL_HVAC_RHU_R_Psd_HVAC_R() \
     l_u8_rd_HVAC_RHU_R_Psd_HVAC_R()
     #define l_u8_wr_LIN_SIGNAL_HVAC_RHU_R_Psd_HVAC_R(A) \
     l_u8_wr_HVAC_RHU_R_Psd_HVAC_R(A)

     #define l_u8_rd_HVAC_RHU_R_Psd_HVAC_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_RHU_R_Psd_HVAC_R] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_RHU_R_Psd_HVAC_R) - 1) \
        << LIN_BIT_OFFSET_HVAC_RHU_R_Psd_HVAC_R )) \
        >> LIN_BIT_OFFSET_HVAC_RHU_R_Psd_HVAC_R)

     #define l_u8_wr_HVAC_RHU_R_Psd_HVAC_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_RHU_R_Psd_HVAC_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_RHU_R_Psd_HVAC_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_RHU_R_Psd_HVAC_R) - 1) \
           << LIN_BIT_OFFSET_HVAC_RHU_R_Psd_HVAC_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_RHU_R_Psd_HVAC_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_RHU_R_Psd_HVAC_R);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_RHU_Z1Z2_Actv */
     #define l_u8_rd_LIN_SIGNAL_HVAC_RHU_Z1Z2_Actv() \
     l_u8_rd_HVAC_RHU_Z1Z2_Actv()
     #define l_u8_wr_LIN_SIGNAL_HVAC_RHU_Z1Z2_Actv(A) \
     l_u8_wr_HVAC_RHU_Z1Z2_Actv(A)

     #define l_u8_rd_HVAC_RHU_Z1Z2_Actv()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_RHU_Z1Z2_Actv] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_RHU_Z1Z2_Actv) - 1) \
        << LIN_BIT_OFFSET_HVAC_RHU_Z1Z2_Actv )) \
        >> LIN_BIT_OFFSET_HVAC_RHU_Z1Z2_Actv)

     #define l_u8_wr_HVAC_RHU_Z1Z2_Actv(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_RHU_Z1Z2_Actv] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_RHU_Z1Z2_Actv] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_RHU_Z1Z2_Actv) - 1) \
           << LIN_BIT_OFFSET_HVAC_RHU_Z1Z2_Actv))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_RHU_Z1Z2_Actv) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_RHU_Z1Z2_Actv);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_RHU_Z3Z4_Actv */
     #define l_u8_rd_LIN_SIGNAL_HVAC_RHU_Z3Z4_Actv() \
     l_u8_rd_HVAC_RHU_Z3Z4_Actv()
     #define l_u8_wr_LIN_SIGNAL_HVAC_RHU_Z3Z4_Actv(A) \
     l_u8_wr_HVAC_RHU_Z3Z4_Actv(A)

     #define l_u8_rd_HVAC_RHU_Z3Z4_Actv()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_RHU_Z3Z4_Actv] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_RHU_Z3Z4_Actv) - 1) \
        << LIN_BIT_OFFSET_HVAC_RHU_Z3Z4_Actv )) \
        >> LIN_BIT_OFFSET_HVAC_RHU_Z3Z4_Actv)

     #define l_u8_wr_HVAC_RHU_Z3Z4_Actv(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_RHU_Z3Z4_Actv] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_RHU_Z3Z4_Actv] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_RHU_Z3Z4_Actv) - 1) \
           << LIN_BIT_OFFSET_HVAC_RHU_Z3Z4_Actv))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_RHU_Z3Z4_Actv) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_RHU_Z3Z4_Actv);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Rear_Reset_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Rear_Reset_Rq() \
     l_u8_rd_HVAC_Rear_Reset_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Rear_Reset_Rq(A) \
     l_u8_wr_HVAC_Rear_Reset_Rq(A)

     #define l_u8_rd_HVAC_Rear_Reset_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Rear_Reset_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Rear_Reset_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_Rear_Reset_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_Rear_Reset_Rq)

     #define l_u8_wr_HVAC_Rear_Reset_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Rear_Reset_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Rear_Reset_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Rear_Reset_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_Rear_Reset_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Rear_Reset_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Rear_Reset_Rq);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_RecircAir_Z1Z2_Actv */
     #define l_u8_rd_LIN_SIGNAL_HVAC_RecircAir_Z1Z2_Actv() \
     l_u8_rd_HVAC_RecircAir_Z1Z2_Actv()
     #define l_u8_wr_LIN_SIGNAL_HVAC_RecircAir_Z1Z2_Actv(A) \
     l_u8_wr_HVAC_RecircAir_Z1Z2_Actv(A)

     #define l_u8_rd_HVAC_RecircAir_Z1Z2_Actv()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_RecircAir_Z1Z2_Actv] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_RecircAir_Z1Z2_Actv) - 1) \
        << LIN_BIT_OFFSET_HVAC_RecircAir_Z1Z2_Actv )) \
        >> LIN_BIT_OFFSET_HVAC_RecircAir_Z1Z2_Actv)

     #define l_u8_wr_HVAC_RecircAir_Z1Z2_Actv(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_RecircAir_Z1Z2_Actv] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_RecircAir_Z1Z2_Actv] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_RecircAir_Z1Z2_Actv) - 1) \
           << LIN_BIT_OFFSET_HVAC_RecircAir_Z1Z2_Actv))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_RecircAir_Z1Z2_Actv) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_RecircAir_Z1Z2_Actv);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Rem1_2_Disp_LED_On_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Rem1_2_Disp_LED_On_Rq() \
     l_u8_rd_HVAC_Rem1_2_Disp_LED_On_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Rem1_2_Disp_LED_On_Rq(A) \
     l_u8_wr_HVAC_Rem1_2_Disp_LED_On_Rq(A)

     #define l_u8_rd_HVAC_Rem1_2_Disp_LED_On_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Rem1_2_Disp_LED_On_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Rem1_2_Disp_LED_On_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_Rem1_2_Disp_LED_On_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_Rem1_2_Disp_LED_On_Rq)

     #define l_u8_wr_HVAC_Rem1_2_Disp_LED_On_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Rem1_2_Disp_LED_On_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Rem1_2_Disp_LED_On_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Rem1_2_Disp_LED_On_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_Rem1_2_Disp_LED_On_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Rem1_2_Disp_LED_On_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Rem1_2_Disp_LED_On_Rq);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Rem3_4_Disp_LED_On_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Rem3_4_Disp_LED_On_Rq() \
     l_u8_rd_HVAC_Rem3_4_Disp_LED_On_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Rem3_4_Disp_LED_On_Rq(A) \
     l_u8_wr_HVAC_Rem3_4_Disp_LED_On_Rq(A)

     #define l_u8_rd_HVAC_Rem3_4_Disp_LED_On_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Rem3_4_Disp_LED_On_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Rem3_4_Disp_LED_On_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_Rem3_4_Disp_LED_On_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_Rem3_4_Disp_LED_On_Rq)

     #define l_u8_wr_HVAC_Rem3_4_Disp_LED_On_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Rem3_4_Disp_LED_On_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Rem3_4_Disp_LED_On_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Rem3_4_Disp_LED_On_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_Rem3_4_Disp_LED_On_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Rem3_4_Disp_LED_On_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Rem3_4_Disp_LED_On_Rq);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Rem_R_Psd_HVAC_R */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Rem_R_Psd_HVAC_R() \
     l_u8_rd_HVAC_Rem_R_Psd_HVAC_R()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Rem_R_Psd_HVAC_R(A) \
     l_u8_wr_HVAC_Rem_R_Psd_HVAC_R(A)

     #define l_u8_rd_HVAC_Rem_R_Psd_HVAC_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Rem_R_Psd_HVAC_R] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Rem_R_Psd_HVAC_R) - 1) \
        << LIN_BIT_OFFSET_HVAC_Rem_R_Psd_HVAC_R )) \
        >> LIN_BIT_OFFSET_HVAC_Rem_R_Psd_HVAC_R)

     #define l_u8_wr_HVAC_Rem_R_Psd_HVAC_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Rem_R_Psd_HVAC_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Rem_R_Psd_HVAC_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Rem_R_Psd_HVAC_R) - 1) \
           << LIN_BIT_OFFSET_HVAC_Rem_R_Psd_HVAC_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Rem_R_Psd_HVAC_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Rem_R_Psd_HVAC_R);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_SelfChg_AirDistDsp1_Enbl */
     #define l_u8_rd_LIN_SIGNAL_HVAC_SelfChg_AirDistDsp1_Enbl() \
     l_u8_rd_HVAC_SelfChg_AirDistDsp1_Enbl()
     #define l_u8_wr_LIN_SIGNAL_HVAC_SelfChg_AirDistDsp1_Enbl(A) \
     l_u8_wr_HVAC_SelfChg_AirDistDsp1_Enbl(A)

     #define l_u8_rd_HVAC_SelfChg_AirDistDsp1_Enbl()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_AirDistDsp1_Enbl] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_AirDistDsp1_Enbl) - 1) \
        << LIN_BIT_OFFSET_HVAC_SelfChg_AirDistDsp1_Enbl )) \
        >> LIN_BIT_OFFSET_HVAC_SelfChg_AirDistDsp1_Enbl)

     #define l_u8_wr_HVAC_SelfChg_AirDistDsp1_Enbl(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_AirDistDsp1_Enbl] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_AirDistDsp1_Enbl] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_AirDistDsp1_Enbl) - 1) \
           << LIN_BIT_OFFSET_HVAC_SelfChg_AirDistDsp1_Enbl))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_AirDistDsp1_Enbl) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_SelfChg_AirDistDsp1_Enbl);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_SelfChg_AirDistDsp2_Enbl */
     #define l_u8_rd_LIN_SIGNAL_HVAC_SelfChg_AirDistDsp2_Enbl() \
     l_u8_rd_HVAC_SelfChg_AirDistDsp2_Enbl()
     #define l_u8_wr_LIN_SIGNAL_HVAC_SelfChg_AirDistDsp2_Enbl(A) \
     l_u8_wr_HVAC_SelfChg_AirDistDsp2_Enbl(A)

     #define l_u8_rd_HVAC_SelfChg_AirDistDsp2_Enbl()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_AirDistDsp2_Enbl] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_AirDistDsp2_Enbl) - 1) \
        << LIN_BIT_OFFSET_HVAC_SelfChg_AirDistDsp2_Enbl )) \
        >> LIN_BIT_OFFSET_HVAC_SelfChg_AirDistDsp2_Enbl)

     #define l_u8_wr_HVAC_SelfChg_AirDistDsp2_Enbl(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_AirDistDsp2_Enbl] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_AirDistDsp2_Enbl] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_AirDistDsp2_Enbl) - 1) \
           << LIN_BIT_OFFSET_HVAC_SelfChg_AirDistDsp2_Enbl))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_AirDistDsp2_Enbl) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_SelfChg_AirDistDsp2_Enbl);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_SelfChg_AirDistDsp3_Enbl */
     #define l_u8_rd_LIN_SIGNAL_HVAC_SelfChg_AirDistDsp3_Enbl() \
     l_u8_rd_HVAC_SelfChg_AirDistDsp3_Enbl()
     #define l_u8_wr_LIN_SIGNAL_HVAC_SelfChg_AirDistDsp3_Enbl(A) \
     l_u8_wr_HVAC_SelfChg_AirDistDsp3_Enbl(A)

     #define l_u8_rd_HVAC_SelfChg_AirDistDsp3_Enbl()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_AirDistDsp3_Enbl] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_AirDistDsp3_Enbl) - 1) \
        << LIN_BIT_OFFSET_HVAC_SelfChg_AirDistDsp3_Enbl )) \
        >> LIN_BIT_OFFSET_HVAC_SelfChg_AirDistDsp3_Enbl)

     #define l_u8_wr_HVAC_SelfChg_AirDistDsp3_Enbl(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_AirDistDsp3_Enbl] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_AirDistDsp3_Enbl] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_AirDistDsp3_Enbl) - 1) \
           << LIN_BIT_OFFSET_HVAC_SelfChg_AirDistDsp3_Enbl))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_AirDistDsp3_Enbl) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_SelfChg_AirDistDsp3_Enbl);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_SelfChg_AirDistDsp4_Enbl */
     #define l_u8_rd_LIN_SIGNAL_HVAC_SelfChg_AirDistDsp4_Enbl() \
     l_u8_rd_HVAC_SelfChg_AirDistDsp4_Enbl()
     #define l_u8_wr_LIN_SIGNAL_HVAC_SelfChg_AirDistDsp4_Enbl(A) \
     l_u8_wr_HVAC_SelfChg_AirDistDsp4_Enbl(A)

     #define l_u8_rd_HVAC_SelfChg_AirDistDsp4_Enbl()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_AirDistDsp4_Enbl] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_AirDistDsp4_Enbl) - 1) \
        << LIN_BIT_OFFSET_HVAC_SelfChg_AirDistDsp4_Enbl )) \
        >> LIN_BIT_OFFSET_HVAC_SelfChg_AirDistDsp4_Enbl)

     #define l_u8_wr_HVAC_SelfChg_AirDistDsp4_Enbl(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_AirDistDsp4_Enbl] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_AirDistDsp4_Enbl] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_AirDistDsp4_Enbl) - 1) \
           << LIN_BIT_OFFSET_HVAC_SelfChg_AirDistDsp4_Enbl))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_AirDistDsp4_Enbl) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_SelfChg_AirDistDsp4_Enbl);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_SelfChg_FanDisp1_Enbl */
     #define l_u8_rd_LIN_SIGNAL_HVAC_SelfChg_FanDisp1_Enbl() \
     l_u8_rd_HVAC_SelfChg_FanDisp1_Enbl()
     #define l_u8_wr_LIN_SIGNAL_HVAC_SelfChg_FanDisp1_Enbl(A) \
     l_u8_wr_HVAC_SelfChg_FanDisp1_Enbl(A)

     #define l_u8_rd_HVAC_SelfChg_FanDisp1_Enbl()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_FanDisp1_Enbl] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_FanDisp1_Enbl) - 1) \
        << LIN_BIT_OFFSET_HVAC_SelfChg_FanDisp1_Enbl )) \
        >> LIN_BIT_OFFSET_HVAC_SelfChg_FanDisp1_Enbl)

     #define l_u8_wr_HVAC_SelfChg_FanDisp1_Enbl(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_FanDisp1_Enbl] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_FanDisp1_Enbl] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_FanDisp1_Enbl) - 1) \
           << LIN_BIT_OFFSET_HVAC_SelfChg_FanDisp1_Enbl))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_FanDisp1_Enbl) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_SelfChg_FanDisp1_Enbl);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_SelfChg_FanDisp2_Enbl */
     #define l_u8_rd_LIN_SIGNAL_HVAC_SelfChg_FanDisp2_Enbl() \
     l_u8_rd_HVAC_SelfChg_FanDisp2_Enbl()
     #define l_u8_wr_LIN_SIGNAL_HVAC_SelfChg_FanDisp2_Enbl(A) \
     l_u8_wr_HVAC_SelfChg_FanDisp2_Enbl(A)

     #define l_u8_rd_HVAC_SelfChg_FanDisp2_Enbl()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_FanDisp2_Enbl] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_FanDisp2_Enbl) - 1) \
        << LIN_BIT_OFFSET_HVAC_SelfChg_FanDisp2_Enbl )) \
        >> LIN_BIT_OFFSET_HVAC_SelfChg_FanDisp2_Enbl)

     #define l_u8_wr_HVAC_SelfChg_FanDisp2_Enbl(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_FanDisp2_Enbl] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_FanDisp2_Enbl] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_FanDisp2_Enbl) - 1) \
           << LIN_BIT_OFFSET_HVAC_SelfChg_FanDisp2_Enbl))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_FanDisp2_Enbl) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_SelfChg_FanDisp2_Enbl);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_SelfChg_FanDisp3_Enbl */
     #define l_u8_rd_LIN_SIGNAL_HVAC_SelfChg_FanDisp3_Enbl() \
     l_u8_rd_HVAC_SelfChg_FanDisp3_Enbl()
     #define l_u8_wr_LIN_SIGNAL_HVAC_SelfChg_FanDisp3_Enbl(A) \
     l_u8_wr_HVAC_SelfChg_FanDisp3_Enbl(A)

     #define l_u8_rd_HVAC_SelfChg_FanDisp3_Enbl()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_FanDisp3_Enbl] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_FanDisp3_Enbl) - 1) \
        << LIN_BIT_OFFSET_HVAC_SelfChg_FanDisp3_Enbl )) \
        >> LIN_BIT_OFFSET_HVAC_SelfChg_FanDisp3_Enbl)

     #define l_u8_wr_HVAC_SelfChg_FanDisp3_Enbl(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_FanDisp3_Enbl] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_FanDisp3_Enbl] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_FanDisp3_Enbl) - 1) \
           << LIN_BIT_OFFSET_HVAC_SelfChg_FanDisp3_Enbl))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_FanDisp3_Enbl) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_SelfChg_FanDisp3_Enbl);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_SelfChg_FanDisp4_Enbl */
     #define l_u8_rd_LIN_SIGNAL_HVAC_SelfChg_FanDisp4_Enbl() \
     l_u8_rd_HVAC_SelfChg_FanDisp4_Enbl()
     #define l_u8_wr_LIN_SIGNAL_HVAC_SelfChg_FanDisp4_Enbl(A) \
     l_u8_wr_HVAC_SelfChg_FanDisp4_Enbl(A)

     #define l_u8_rd_HVAC_SelfChg_FanDisp4_Enbl()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_FanDisp4_Enbl] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_FanDisp4_Enbl) - 1) \
        << LIN_BIT_OFFSET_HVAC_SelfChg_FanDisp4_Enbl )) \
        >> LIN_BIT_OFFSET_HVAC_SelfChg_FanDisp4_Enbl)

     #define l_u8_wr_HVAC_SelfChg_FanDisp4_Enbl(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_FanDisp4_Enbl] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_FanDisp4_Enbl] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_FanDisp4_Enbl) - 1) \
           << LIN_BIT_OFFSET_HVAC_SelfChg_FanDisp4_Enbl))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_FanDisp4_Enbl) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_SelfChg_FanDisp4_Enbl);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_SelfChg_TempDisp1_Enbl */
     #define l_u8_rd_LIN_SIGNAL_HVAC_SelfChg_TempDisp1_Enbl() \
     l_u8_rd_HVAC_SelfChg_TempDisp1_Enbl()
     #define l_u8_wr_LIN_SIGNAL_HVAC_SelfChg_TempDisp1_Enbl(A) \
     l_u8_wr_HVAC_SelfChg_TempDisp1_Enbl(A)

     #define l_u8_rd_HVAC_SelfChg_TempDisp1_Enbl()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_TempDisp1_Enbl] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_TempDisp1_Enbl) - 1) \
        << LIN_BIT_OFFSET_HVAC_SelfChg_TempDisp1_Enbl )) \
        >> LIN_BIT_OFFSET_HVAC_SelfChg_TempDisp1_Enbl)

     #define l_u8_wr_HVAC_SelfChg_TempDisp1_Enbl(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_TempDisp1_Enbl] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_TempDisp1_Enbl] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_TempDisp1_Enbl) - 1) \
           << LIN_BIT_OFFSET_HVAC_SelfChg_TempDisp1_Enbl))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_TempDisp1_Enbl) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_SelfChg_TempDisp1_Enbl);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_SelfChg_TempDisp2_Enbl */
     #define l_u8_rd_LIN_SIGNAL_HVAC_SelfChg_TempDisp2_Enbl() \
     l_u8_rd_HVAC_SelfChg_TempDisp2_Enbl()
     #define l_u8_wr_LIN_SIGNAL_HVAC_SelfChg_TempDisp2_Enbl(A) \
     l_u8_wr_HVAC_SelfChg_TempDisp2_Enbl(A)

     #define l_u8_rd_HVAC_SelfChg_TempDisp2_Enbl()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_TempDisp2_Enbl] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_TempDisp2_Enbl) - 1) \
        << LIN_BIT_OFFSET_HVAC_SelfChg_TempDisp2_Enbl )) \
        >> LIN_BIT_OFFSET_HVAC_SelfChg_TempDisp2_Enbl)

     #define l_u8_wr_HVAC_SelfChg_TempDisp2_Enbl(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_TempDisp2_Enbl] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_TempDisp2_Enbl] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_TempDisp2_Enbl) - 1) \
           << LIN_BIT_OFFSET_HVAC_SelfChg_TempDisp2_Enbl))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_TempDisp2_Enbl) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_SelfChg_TempDisp2_Enbl);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_SelfChg_TempDisp3_Enbl */
     #define l_u8_rd_LIN_SIGNAL_HVAC_SelfChg_TempDisp3_Enbl() \
     l_u8_rd_HVAC_SelfChg_TempDisp3_Enbl()
     #define l_u8_wr_LIN_SIGNAL_HVAC_SelfChg_TempDisp3_Enbl(A) \
     l_u8_wr_HVAC_SelfChg_TempDisp3_Enbl(A)

     #define l_u8_rd_HVAC_SelfChg_TempDisp3_Enbl()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_TempDisp3_Enbl] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_TempDisp3_Enbl) - 1) \
        << LIN_BIT_OFFSET_HVAC_SelfChg_TempDisp3_Enbl )) \
        >> LIN_BIT_OFFSET_HVAC_SelfChg_TempDisp3_Enbl)

     #define l_u8_wr_HVAC_SelfChg_TempDisp3_Enbl(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_TempDisp3_Enbl] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_TempDisp3_Enbl] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_TempDisp3_Enbl) - 1) \
           << LIN_BIT_OFFSET_HVAC_SelfChg_TempDisp3_Enbl))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_TempDisp3_Enbl) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_SelfChg_TempDisp3_Enbl);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_SelfChg_TempDisp4_Enbl */
     #define l_u8_rd_LIN_SIGNAL_HVAC_SelfChg_TempDisp4_Enbl() \
     l_u8_rd_HVAC_SelfChg_TempDisp4_Enbl()
     #define l_u8_wr_LIN_SIGNAL_HVAC_SelfChg_TempDisp4_Enbl(A) \
     l_u8_wr_HVAC_SelfChg_TempDisp4_Enbl(A)

     #define l_u8_rd_HVAC_SelfChg_TempDisp4_Enbl()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_TempDisp4_Enbl] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_TempDisp4_Enbl) - 1) \
        << LIN_BIT_OFFSET_HVAC_SelfChg_TempDisp4_Enbl )) \
        >> LIN_BIT_OFFSET_HVAC_SelfChg_TempDisp4_Enbl)

     #define l_u8_wr_HVAC_SelfChg_TempDisp4_Enbl(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_TempDisp4_Enbl] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SelfChg_TempDisp4_Enbl] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_TempDisp4_Enbl) - 1) \
           << LIN_BIT_OFFSET_HVAC_SelfChg_TempDisp4_Enbl))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_SelfChg_TempDisp4_Enbl) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_SelfChg_TempDisp4_Enbl);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_SwLED_Test_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_SwLED_Test_Rq() \
     l_u8_rd_HVAC_SwLED_Test_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_SwLED_Test_Rq(A) \
     l_u8_wr_HVAC_SwLED_Test_Rq(A)

     #define l_u8_rd_HVAC_SwLED_Test_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SwLED_Test_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_SwLED_Test_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_SwLED_Test_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_SwLED_Test_Rq)

     #define l_u8_wr_HVAC_SwLED_Test_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SwLED_Test_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_SwLED_Test_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_SwLED_Test_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_SwLED_Test_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_SwLED_Test_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_SwLED_Test_Rq);\
           Lin_FrmDataUpdtFlag[3 >> 3] |= ( 1 << (3 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_TempMax_R */
     #define l_u8_rd_LIN_SIGNAL_HVAC_TempMax_R() \
     l_u8_rd_HVAC_TempMax_R()
     #define l_u8_wr_LIN_SIGNAL_HVAC_TempMax_R(A) \
     l_u8_wr_HVAC_TempMax_R(A)

     #define l_u8_rd_HVAC_TempMax_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_TempMax_R] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_TempMax_R) - 1) \
        << LIN_BIT_OFFSET_HVAC_TempMax_R )) \
        >> LIN_BIT_OFFSET_HVAC_TempMax_R)

     #define l_u8_wr_HVAC_TempMax_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_TempMax_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_TempMax_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_TempMax_R) - 1) \
           << LIN_BIT_OFFSET_HVAC_TempMax_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_TempMax_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_TempMax_R);\
           Lin_FrmDataUpdtFlag[4 >> 3] |= ( 1 << (4 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_TempMin_R */
     #define l_u8_rd_LIN_SIGNAL_HVAC_TempMin_R() \
     l_u8_rd_HVAC_TempMin_R()
     #define l_u8_wr_LIN_SIGNAL_HVAC_TempMin_R(A) \
     l_u8_wr_HVAC_TempMin_R(A)

     #define l_u8_rd_HVAC_TempMin_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_TempMin_R] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_TempMin_R) - 1) \
        << LIN_BIT_OFFSET_HVAC_TempMin_R )) \
        >> LIN_BIT_OFFSET_HVAC_TempMin_R)

     #define l_u8_wr_HVAC_TempMin_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_TempMin_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_TempMin_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_TempMin_R) - 1) \
           << LIN_BIT_OFFSET_HVAC_TempMin_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_TempMin_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_TempMin_R);\
           Lin_FrmDataUpdtFlag[4 >> 3] |= ( 1 << (4 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Temp_RL_Rq_HVAC_R_V2 */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Temp_RL_Rq_HVAC_R_V2() \
     l_u8_rd_HVAC_Temp_RL_Rq_HVAC_R_V2()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Temp_RL_Rq_HVAC_R_V2(A) \
     l_u8_wr_HVAC_Temp_RL_Rq_HVAC_R_V2(A)

     #define l_u8_rd_HVAC_Temp_RL_Rq_HVAC_R_V2()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_RL_Rq_HVAC_R_V2] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Temp_RL_Rq_HVAC_R_V2) - 1) \
        << LIN_BIT_OFFSET_HVAC_Temp_RL_Rq_HVAC_R_V2 )) \
        >> LIN_BIT_OFFSET_HVAC_Temp_RL_Rq_HVAC_R_V2)

     #define l_u8_wr_HVAC_Temp_RL_Rq_HVAC_R_V2(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_RL_Rq_HVAC_R_V2] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_RL_Rq_HVAC_R_V2] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Temp_RL_Rq_HVAC_R_V2) - 1) \
           << LIN_BIT_OFFSET_HVAC_Temp_RL_Rq_HVAC_R_V2))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Temp_RL_Rq_HVAC_R_V2) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Temp_RL_Rq_HVAC_R_V2);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Temp_RR_Rq_HVAC_R_V2 */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Temp_RR_Rq_HVAC_R_V2() \
     l_u8_rd_HVAC_Temp_RR_Rq_HVAC_R_V2()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Temp_RR_Rq_HVAC_R_V2(A) \
     l_u8_wr_HVAC_Temp_RR_Rq_HVAC_R_V2(A)

     #define l_u8_rd_HVAC_Temp_RR_Rq_HVAC_R_V2()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_RR_Rq_HVAC_R_V2] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Temp_RR_Rq_HVAC_R_V2) - 1) \
        << LIN_BIT_OFFSET_HVAC_Temp_RR_Rq_HVAC_R_V2 )) \
        >> LIN_BIT_OFFSET_HVAC_Temp_RR_Rq_HVAC_R_V2)

     #define l_u8_wr_HVAC_Temp_RR_Rq_HVAC_R_V2(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_RR_Rq_HVAC_R_V2] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_RR_Rq_HVAC_R_V2] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Temp_RR_Rq_HVAC_R_V2) - 1) \
           << LIN_BIT_OFFSET_HVAC_Temp_RR_Rq_HVAC_R_V2))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Temp_RR_Rq_HVAC_R_V2) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Temp_RR_Rq_HVAC_R_V2);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Temp_Zone1_Disp_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Temp_Zone1_Disp_Rq() \
     l_u8_rd_HVAC_Temp_Zone1_Disp_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Temp_Zone1_Disp_Rq(A) \
     l_u8_wr_HVAC_Temp_Zone1_Disp_Rq(A)

     #define l_u8_rd_HVAC_Temp_Zone1_Disp_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_Zone1_Disp_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Temp_Zone1_Disp_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_Temp_Zone1_Disp_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_Temp_Zone1_Disp_Rq)

     #define l_u8_wr_HVAC_Temp_Zone1_Disp_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_Zone1_Disp_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_Zone1_Disp_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Temp_Zone1_Disp_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_Temp_Zone1_Disp_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Temp_Zone1_Disp_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Temp_Zone1_Disp_Rq);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Temp_Zone1_Stat */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Temp_Zone1_Stat() \
     l_u8_rd_HVAC_Temp_Zone1_Stat()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Temp_Zone1_Stat(A) \
     l_u8_wr_HVAC_Temp_Zone1_Stat(A)

     #define l_u8_rd_HVAC_Temp_Zone1_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_Zone1_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Temp_Zone1_Stat) - 1) \
        << LIN_BIT_OFFSET_HVAC_Temp_Zone1_Stat )) \
        >> LIN_BIT_OFFSET_HVAC_Temp_Zone1_Stat)

     #define l_u8_wr_HVAC_Temp_Zone1_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_Zone1_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_Zone1_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Temp_Zone1_Stat) - 1) \
           << LIN_BIT_OFFSET_HVAC_Temp_Zone1_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Temp_Zone1_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Temp_Zone1_Stat);\
           Lin_FrmDataUpdtFlag[1 >> 3] |= ( 1 << (1 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Temp_Zone2_Disp_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Temp_Zone2_Disp_Rq() \
     l_u8_rd_HVAC_Temp_Zone2_Disp_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Temp_Zone2_Disp_Rq(A) \
     l_u8_wr_HVAC_Temp_Zone2_Disp_Rq(A)

     #define l_u8_rd_HVAC_Temp_Zone2_Disp_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_Zone2_Disp_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Temp_Zone2_Disp_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_Temp_Zone2_Disp_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_Temp_Zone2_Disp_Rq)

     #define l_u8_wr_HVAC_Temp_Zone2_Disp_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_Zone2_Disp_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_Zone2_Disp_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Temp_Zone2_Disp_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_Temp_Zone2_Disp_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Temp_Zone2_Disp_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Temp_Zone2_Disp_Rq);\
           Lin_FrmDataUpdtFlag[0 >> 3] |= ( 1 << (0 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Temp_Zone2_Stat */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Temp_Zone2_Stat() \
     l_u8_rd_HVAC_Temp_Zone2_Stat()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Temp_Zone2_Stat(A) \
     l_u8_wr_HVAC_Temp_Zone2_Stat(A)

     #define l_u8_rd_HVAC_Temp_Zone2_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_Zone2_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Temp_Zone2_Stat) - 1) \
        << LIN_BIT_OFFSET_HVAC_Temp_Zone2_Stat )) \
        >> LIN_BIT_OFFSET_HVAC_Temp_Zone2_Stat)

     #define l_u8_wr_HVAC_Temp_Zone2_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_Zone2_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_Zone2_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Temp_Zone2_Stat) - 1) \
           << LIN_BIT_OFFSET_HVAC_Temp_Zone2_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Temp_Zone2_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Temp_Zone2_Stat);\
           Lin_FrmDataUpdtFlag[1 >> 3] |= ( 1 << (1 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Temp_Zone3_Disp_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Temp_Zone3_Disp_Rq() \
     l_u8_rd_HVAC_Temp_Zone3_Disp_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Temp_Zone3_Disp_Rq(A) \
     l_u8_wr_HVAC_Temp_Zone3_Disp_Rq(A)

     #define l_u8_rd_HVAC_Temp_Zone3_Disp_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_Zone3_Disp_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Temp_Zone3_Disp_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_Temp_Zone3_Disp_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_Temp_Zone3_Disp_Rq)

     #define l_u8_wr_HVAC_Temp_Zone3_Disp_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_Zone3_Disp_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_Zone3_Disp_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Temp_Zone3_Disp_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_Temp_Zone3_Disp_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Temp_Zone3_Disp_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Temp_Zone3_Disp_Rq);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Temp_Zone3_Stat */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Temp_Zone3_Stat() \
     l_u8_rd_HVAC_Temp_Zone3_Stat()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Temp_Zone3_Stat(A) \
     l_u8_wr_HVAC_Temp_Zone3_Stat(A)

     #define l_u8_rd_HVAC_Temp_Zone3_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_Zone3_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Temp_Zone3_Stat) - 1) \
        << LIN_BIT_OFFSET_HVAC_Temp_Zone3_Stat )) \
        >> LIN_BIT_OFFSET_HVAC_Temp_Zone3_Stat)

     #define l_u8_wr_HVAC_Temp_Zone3_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_Zone3_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_Zone3_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Temp_Zone3_Stat) - 1) \
           << LIN_BIT_OFFSET_HVAC_Temp_Zone3_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Temp_Zone3_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Temp_Zone3_Stat);\
           Lin_FrmDataUpdtFlag[1 >> 3] |= ( 1 << (1 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Temp_Zone4_Disp_Rq */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Temp_Zone4_Disp_Rq() \
     l_u8_rd_HVAC_Temp_Zone4_Disp_Rq()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Temp_Zone4_Disp_Rq(A) \
     l_u8_wr_HVAC_Temp_Zone4_Disp_Rq(A)

     #define l_u8_rd_HVAC_Temp_Zone4_Disp_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_Zone4_Disp_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Temp_Zone4_Disp_Rq) - 1) \
        << LIN_BIT_OFFSET_HVAC_Temp_Zone4_Disp_Rq )) \
        >> LIN_BIT_OFFSET_HVAC_Temp_Zone4_Disp_Rq)

     #define l_u8_wr_HVAC_Temp_Zone4_Disp_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_Zone4_Disp_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_Zone4_Disp_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Temp_Zone4_Disp_Rq) - 1) \
           << LIN_BIT_OFFSET_HVAC_Temp_Zone4_Disp_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Temp_Zone4_Disp_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Temp_Zone4_Disp_Rq);\
           Lin_FrmDataUpdtFlag[2 >> 3] |= ( 1 << (2 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Temp_Zone4_Stat */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Temp_Zone4_Stat() \
     l_u8_rd_HVAC_Temp_Zone4_Stat()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Temp_Zone4_Stat(A) \
     l_u8_wr_HVAC_Temp_Zone4_Stat(A)

     #define l_u8_rd_HVAC_Temp_Zone4_Stat()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_Zone4_Stat] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Temp_Zone4_Stat) - 1) \
        << LIN_BIT_OFFSET_HVAC_Temp_Zone4_Stat )) \
        >> LIN_BIT_OFFSET_HVAC_Temp_Zone4_Stat)

     #define l_u8_wr_HVAC_Temp_Zone4_Stat(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_Zone4_Stat] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Temp_Zone4_Stat] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Temp_Zone4_Stat) - 1) \
           << LIN_BIT_OFFSET_HVAC_Temp_Zone4_Stat))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Temp_Zone4_Stat) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Temp_Zone4_Stat);\
           Lin_FrmDataUpdtFlag[1 >> 3] |= ( 1 << (1 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Zone1_Disp_Off */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Zone1_Disp_Off() \
     l_u8_rd_HVAC_Zone1_Disp_Off()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Zone1_Disp_Off(A) \
     l_u8_wr_HVAC_Zone1_Disp_Off(A)

     #define l_u8_rd_HVAC_Zone1_Disp_Off()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Zone1_Disp_Off] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Zone1_Disp_Off) - 1) \
        << LIN_BIT_OFFSET_HVAC_Zone1_Disp_Off )) \
        >> LIN_BIT_OFFSET_HVAC_Zone1_Disp_Off)

     #define l_u8_wr_HVAC_Zone1_Disp_Off(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Zone1_Disp_Off] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Zone1_Disp_Off] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Zone1_Disp_Off) - 1) \
           << LIN_BIT_OFFSET_HVAC_Zone1_Disp_Off))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Zone1_Disp_Off) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Zone1_Disp_Off);\
           Lin_FrmDataUpdtFlag[3 >> 3] |= ( 1 << (3 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Zone2_Disp_Off */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Zone2_Disp_Off() \
     l_u8_rd_HVAC_Zone2_Disp_Off()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Zone2_Disp_Off(A) \
     l_u8_wr_HVAC_Zone2_Disp_Off(A)

     #define l_u8_rd_HVAC_Zone2_Disp_Off()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Zone2_Disp_Off] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Zone2_Disp_Off) - 1) \
        << LIN_BIT_OFFSET_HVAC_Zone2_Disp_Off )) \
        >> LIN_BIT_OFFSET_HVAC_Zone2_Disp_Off)

     #define l_u8_wr_HVAC_Zone2_Disp_Off(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Zone2_Disp_Off] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Zone2_Disp_Off] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Zone2_Disp_Off) - 1) \
           << LIN_BIT_OFFSET_HVAC_Zone2_Disp_Off))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Zone2_Disp_Off) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Zone2_Disp_Off);\
           Lin_FrmDataUpdtFlag[3 >> 3] |= ( 1 << (3 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Zone3_Disp_Off */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Zone3_Disp_Off() \
     l_u8_rd_HVAC_Zone3_Disp_Off()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Zone3_Disp_Off(A) \
     l_u8_wr_HVAC_Zone3_Disp_Off(A)

     #define l_u8_rd_HVAC_Zone3_Disp_Off()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Zone3_Disp_Off] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Zone3_Disp_Off) - 1) \
        << LIN_BIT_OFFSET_HVAC_Zone3_Disp_Off )) \
        >> LIN_BIT_OFFSET_HVAC_Zone3_Disp_Off)

     #define l_u8_wr_HVAC_Zone3_Disp_Off(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Zone3_Disp_Off] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Zone3_Disp_Off] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Zone3_Disp_Off) - 1) \
           << LIN_BIT_OFFSET_HVAC_Zone3_Disp_Off))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Zone3_Disp_Off) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Zone3_Disp_Off);\
           Lin_FrmDataUpdtFlag[3 >> 3] |= ( 1 << (3 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Zone4_Disp_Off */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Zone4_Disp_Off() \
     l_u8_rd_HVAC_Zone4_Disp_Off()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Zone4_Disp_Off(A) \
     l_u8_wr_HVAC_Zone4_Disp_Off(A)

     #define l_u8_rd_HVAC_Zone4_Disp_Off()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Zone4_Disp_Off] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Zone4_Disp_Off) - 1) \
        << LIN_BIT_OFFSET_HVAC_Zone4_Disp_Off )) \
        >> LIN_BIT_OFFSET_HVAC_Zone4_Disp_Off)

     #define l_u8_wr_HVAC_Zone4_Disp_Off(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Zone4_Disp_Off] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Zone4_Disp_Off] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Zone4_Disp_Off) - 1) \
           << LIN_BIT_OFFSET_HVAC_Zone4_Disp_Off))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Zone4_Disp_Off) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Zone4_Disp_Off);\
           Lin_FrmDataUpdtFlag[3 >> 3] |= ( 1 << (3 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Zone_Chgovr_FL */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Zone_Chgovr_FL() \
     l_u8_rd_HVAC_Zone_Chgovr_FL()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Zone_Chgovr_FL(A) \
     l_u8_wr_HVAC_Zone_Chgovr_FL(A)

     #define l_u8_rd_HVAC_Zone_Chgovr_FL()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Zone_Chgovr_FL] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Zone_Chgovr_FL) - 1) \
        << LIN_BIT_OFFSET_HVAC_Zone_Chgovr_FL )) \
        >> LIN_BIT_OFFSET_HVAC_Zone_Chgovr_FL)

     #define l_u8_wr_HVAC_Zone_Chgovr_FL(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Zone_Chgovr_FL] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Zone_Chgovr_FL] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Zone_Chgovr_FL) - 1) \
           << LIN_BIT_OFFSET_HVAC_Zone_Chgovr_FL))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Zone_Chgovr_FL) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Zone_Chgovr_FL);\
           Lin_FrmDataUpdtFlag[3 >> 3] |= ( 1 << (3 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Zone_Chgovr_FR */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Zone_Chgovr_FR() \
     l_u8_rd_HVAC_Zone_Chgovr_FR()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Zone_Chgovr_FR(A) \
     l_u8_wr_HVAC_Zone_Chgovr_FR(A)

     #define l_u8_rd_HVAC_Zone_Chgovr_FR()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Zone_Chgovr_FR] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Zone_Chgovr_FR) - 1) \
        << LIN_BIT_OFFSET_HVAC_Zone_Chgovr_FR )) \
        >> LIN_BIT_OFFSET_HVAC_Zone_Chgovr_FR)

     #define l_u8_wr_HVAC_Zone_Chgovr_FR(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Zone_Chgovr_FR] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Zone_Chgovr_FR] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Zone_Chgovr_FR) - 1) \
           << LIN_BIT_OFFSET_HVAC_Zone_Chgovr_FR))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Zone_Chgovr_FR) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Zone_Chgovr_FR);\
           Lin_FrmDataUpdtFlag[3 >> 3] |= ( 1 << (3 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Zone_Chgovr_RL */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Zone_Chgovr_RL() \
     l_u8_rd_HVAC_Zone_Chgovr_RL()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Zone_Chgovr_RL(A) \
     l_u8_wr_HVAC_Zone_Chgovr_RL(A)

     #define l_u8_rd_HVAC_Zone_Chgovr_RL()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Zone_Chgovr_RL] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Zone_Chgovr_RL) - 1) \
        << LIN_BIT_OFFSET_HVAC_Zone_Chgovr_RL )) \
        >> LIN_BIT_OFFSET_HVAC_Zone_Chgovr_RL)

     #define l_u8_wr_HVAC_Zone_Chgovr_RL(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Zone_Chgovr_RL] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Zone_Chgovr_RL] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Zone_Chgovr_RL) - 1) \
           << LIN_BIT_OFFSET_HVAC_Zone_Chgovr_RL))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Zone_Chgovr_RL) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Zone_Chgovr_RL);\
           Lin_FrmDataUpdtFlag[3 >> 3] |= ( 1 << (3 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_HVAC_Zone_Chgovr_RR */
     #define l_u8_rd_LIN_SIGNAL_HVAC_Zone_Chgovr_RR() \
     l_u8_rd_HVAC_Zone_Chgovr_RR()
     #define l_u8_wr_LIN_SIGNAL_HVAC_Zone_Chgovr_RR(A) \
     l_u8_wr_HVAC_Zone_Chgovr_RR(A)

     #define l_u8_rd_HVAC_Zone_Chgovr_RR()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Zone_Chgovr_RR] & \
        (((1U << LIN_SIGNAL_SIZE_HVAC_Zone_Chgovr_RR) - 1) \
        << LIN_BIT_OFFSET_HVAC_Zone_Chgovr_RR )) \
        >> LIN_BIT_OFFSET_HVAC_Zone_Chgovr_RR)

     #define l_u8_wr_HVAC_Zone_Chgovr_RR(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Zone_Chgovr_RR] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_HVAC_Zone_Chgovr_RR] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_HVAC_Zone_Chgovr_RR) - 1) \
           << LIN_BIT_OFFSET_HVAC_Zone_Chgovr_RR))))  | \
           ((((1U << LIN_SIGNAL_SIZE_HVAC_Zone_Chgovr_RR) - 1) & (A)) \
           << LIN_BIT_OFFSET_HVAC_Zone_Chgovr_RR);\
           Lin_FrmDataUpdtFlag[3 >> 3] |= ( 1 << (3 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_ISw_Stat_LIN */
     #define l_u8_rd_LIN_SIGNAL_ISw_Stat_LIN() \
     l_u8_rd_ISw_Stat_LIN()
     #define l_u8_wr_LIN_SIGNAL_ISw_Stat_LIN(A) \
     l_u8_wr_ISw_Stat_LIN(A)

     #define l_u8_rd_ISw_Stat_LIN()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_ISw_Stat_LIN] & \
        (((1U << LIN_SIGNAL_SIZE_ISw_Stat_LIN) - 1) \
        << LIN_BIT_OFFSET_ISw_Stat_LIN )) \
        >> LIN_BIT_OFFSET_ISw_Stat_LIN)

     #define l_u8_wr_ISw_Stat_LIN(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_ISw_Stat_LIN] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_ISw_Stat_LIN] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_ISw_Stat_LIN) - 1) \
           << LIN_BIT_OFFSET_ISw_Stat_LIN))))  | \
           ((((1U << LIN_SIGNAL_SIZE_ISw_Stat_LIN) - 1) & (A)) \
           << LIN_BIT_OFFSET_ISw_Stat_LIN);\
           Lin_FrmDataUpdtFlag[3 >> 3] |= ( 1 << (3 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_LgtSens_Night_LIN */
     #define l_u8_rd_LIN_SIGNAL_LgtSens_Night_LIN() \
     l_u8_rd_LgtSens_Night_LIN()
     #define l_u8_wr_LIN_SIGNAL_LgtSens_Night_LIN(A) \
     l_u8_wr_LgtSens_Night_LIN(A)

     #define l_u8_rd_LgtSens_Night_LIN()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_LgtSens_Night_LIN] & \
        (((1U << LIN_SIGNAL_SIZE_LgtSens_Night_LIN) - 1) \
        << LIN_BIT_OFFSET_LgtSens_Night_LIN )) \
        >> LIN_BIT_OFFSET_LgtSens_Night_LIN)

     #define l_u8_wr_LgtSens_Night_LIN(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_LgtSens_Night_LIN] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_LgtSens_Night_LIN] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_LgtSens_Night_LIN) - 1) \
           << LIN_BIT_OFFSET_LgtSens_Night_LIN))))  | \
           ((((1U << LIN_SIGNAL_SIZE_LgtSens_Night_LIN) - 1) & (A)) \
           << LIN_BIT_OFFSET_LgtSens_Night_LIN);\
           Lin_FrmDataUpdtFlag[3 >> 3] |= ( 1 << (3 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_RsErr_HVAC_R */
     #define l_u8_rd_LIN_SIGNAL_RsErr_HVAC_R() \
     l_u8_rd_RsErr_HVAC_R()
     #define l_u8_wr_LIN_SIGNAL_RsErr_HVAC_R(A) \
     l_u8_wr_RsErr_HVAC_R(A)

     #define l_u8_rd_RsErr_HVAC_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_RsErr_HVAC_R] & \
        (((1U << LIN_SIGNAL_SIZE_RsErr_HVAC_R) - 1) \
        << LIN_BIT_OFFSET_RsErr_HVAC_R )) \
        >> LIN_BIT_OFFSET_RsErr_HVAC_R)

     #define l_u8_wr_RsErr_HVAC_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_RsErr_HVAC_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_RsErr_HVAC_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_RsErr_HVAC_R) - 1) \
           << LIN_BIT_OFFSET_RsErr_HVAC_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_RsErr_HVAC_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_RsErr_HVAC_R);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_SwIllLvl */
     #define l_u8_rd_LIN_SIGNAL_SwIllLvl() \
     l_u8_rd_SwIllLvl()
     #define l_u8_wr_LIN_SIGNAL_SwIllLvl(A) \
     l_u8_wr_SwIllLvl(A)

     #define l_u8_rd_SwIllLvl()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_SwIllLvl] & \
        (((1U << LIN_SIGNAL_SIZE_SwIllLvl) - 1) \
        << LIN_BIT_OFFSET_SwIllLvl )) \
        >> LIN_BIT_OFFSET_SwIllLvl)

     #define l_u8_wr_SwIllLvl(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_SwIllLvl] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_SwIllLvl] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_SwIllLvl) - 1) \
           << LIN_BIT_OFFSET_SwIllLvl))))  | \
           ((((1U << LIN_SIGNAL_SIZE_SwIllLvl) - 1) & (A)) \
           << LIN_BIT_OFFSET_SwIllLvl);\
           Lin_FrmDataUpdtFlag[3 >> 3] |= ( 1 << (3 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_UnitTemp_Rq */
     #define l_u8_rd_LIN_SIGNAL_UnitTemp_Rq() \
     l_u8_rd_UnitTemp_Rq()
     #define l_u8_wr_LIN_SIGNAL_UnitTemp_Rq(A) \
     l_u8_wr_UnitTemp_Rq(A)

     #define l_u8_rd_UnitTemp_Rq()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_UnitTemp_Rq] & \
        (((1U << LIN_SIGNAL_SIZE_UnitTemp_Rq) - 1) \
        << LIN_BIT_OFFSET_UnitTemp_Rq )) \
        >> LIN_BIT_OFFSET_UnitTemp_Rq)

     #define l_u8_wr_UnitTemp_Rq(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_UnitTemp_Rq] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_UnitTemp_Rq] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_UnitTemp_Rq) - 1) \
           << LIN_BIT_OFFSET_UnitTemp_Rq))))  | \
           ((((1U << LIN_SIGNAL_SIZE_UnitTemp_Rq) - 1) & (A)) \
           << LIN_BIT_OFFSET_UnitTemp_Rq);\
           Lin_FrmDataUpdtFlag[3 >> 3] |= ( 1 << (3 & 0x07)); \
           } while(0)

/* static access macros for signalLIN_SIGNAL_WakeupStat_HVAC_R */
     #define l_u8_rd_LIN_SIGNAL_WakeupStat_HVAC_R() \
     l_u8_rd_WakeupStat_HVAC_R()
     #define l_u8_wr_LIN_SIGNAL_WakeupStat_HVAC_R(A) \
     l_u8_wr_WakeupStat_HVAC_R(A)

     #define l_u8_rd_WakeupStat_HVAC_R()  \
        ((Lin_FrmData[LIN_BYTE_OFFSET_WakeupStat_HVAC_R] & \
        (((1U << LIN_SIGNAL_SIZE_WakeupStat_HVAC_R) - 1) \
        << LIN_BIT_OFFSET_WakeupStat_HVAC_R )) \
        >> LIN_BIT_OFFSET_WakeupStat_HVAC_R)

     #define l_u8_wr_WakeupStat_HVAC_R(A) \
        do {Lin_FrmData[LIN_BYTE_OFFSET_WakeupStat_HVAC_R] = \
           (Lin_FrmData[LIN_BYTE_OFFSET_WakeupStat_HVAC_R] & \
           ((uint8) (~(((1U << LIN_SIGNAL_SIZE_WakeupStat_HVAC_R) - 1) \
           << LIN_BIT_OFFSET_WakeupStat_HVAC_R))))  | \
           ((((1U << LIN_SIGNAL_SIZE_WakeupStat_HVAC_R) - 1) & (A)) \
           << LIN_BIT_OFFSET_WakeupStat_HVAC_R);\
           Lin_FrmDataUpdtFlag[5 >> 3] |= ( 1 << (5 & 0x07)); \
           } while(0)

/*   type l_signal_handle |
**   Used as an alias to read, write or control signal information.*/

     typedef  LIN_LDF_SIG_INFO l_signal_handle;

/*   @enum LIN_FRM_TYPE |
**   Defines the type of LIN frame.*/

     typedef enum
     {
        LIN_FRM_UNCD  = 0,         /*@enum Unconditional frame*/
        LIN_FRM_EVNT  = 1,         /*@enum Event triggered frame.*/
        LIN_FRM_SPRDC = 2          /*@enum Sporadic frame.*/
     }LIN_FRM_TYPE;

/*   @struct LIN_EVNT_FRM_INFO |
**   Provide the event triggered frames details. This information used in case of collisions.
**   Master set the collision flag in corresponding slot when collision occurs,
**   in the following slots associated unconditional frames are published by
**   master until all associated unconditional frames are published.
**   At the end master reset the collision flag.*/

     typedef struct
     {
        uint8 frm_id;                /*@field Event triggered frame ID.*/
        uint8 max_num_of_uncd_frms;  /*@field Number of unconditional frames are associated with this
                                             event triggered frame*/
        uint8 asctd_uncd_frm_ids[1]; /*@field Unconditional frame IDs associated with this
                                             event triggered frame.*/
        /* In LDF file, Event triggered frames not configured with UNCD frames. */
     }LIN_EVNT_FRM_INFO;


/*   @struct tassctd_frm_info |
**   Includes the details of each schedule table member */

     typedef struct
     {
        uint8         frm_id;         /*@field Frame ID, in case of unconditional or event triggered frame.
                                             For sporadic frame the value will be 0 (zero). */
        uint8         slot_time;      /*@field Slot timeout period in ms*/
        LIN_FRM_TYPE frm_type;       /*@field Frame type (unconditional, event triggered or sporadic)*/
     }tassctd_frm_info;

/*   @struct LIN_SYS_SCHD_INFO |
**   Define the schedule table information such as the number of frame slots 
**   and frame ID associated with each slot.*/

     typedef struct
     {
        uint8   num_slots_ascted;         /*@field Total number of frame slots with current schedule table.*/
        tassctd_frm_info assctd_frm_info[LIN_SYS_CFG_MAX_SLTS_PER_SCH_TAB]; 
                                         /*@field Associated frame details */
     }LIN_SYS_SCHD_INFO;

     /* @type LIN_EVNT_FRM_INFO Lin_EvntSchTbl[] not defined, Because */
     /* In LDF file, Event triggered frames are not defined. */

/*   @type Lin_FrmInfo |
**   Every byte of Lin_FrmInfo represents the frame properties
**   i.e. Lin_FrmInfo[0] --> represents the LIN_sys_frm_tbl[0] properties
**        Lin_FrmInfo[1] --> represents the LIN_sys_frm_tbl[1] properties
**   And the each frame properties represented as follows  V T O RR LLL .
**   V --> (Validity) Frame is registered as publisher/subscriber
**      0--> Frame is not registered (may be event triggered frame)
**      1--> Frame is registered
**   T --> Transfer type
**      0 --> Subscriber
**      1 --> Publisher
**   O --> Offset of frame data in Lin_FrmData buffer
**         The unsigned character is used for offset to save the memory usage.
**         By using unsigned character only 256 bytes can be accessed directly.
**         To access all 64 frames data (64 frames * 8 bytes = 512 bytes) 8 bit
**         offset pointer is not sufficient. So this value is used to add an
**         additional 256 (from base location of Lin_FrmData)to the existing offset.
**   RR --> Reserved
**   LLL --> Length of the frame (LLL + 1) */

     extern uint8 Lin_FrmInfo[];

/*   @type Lin_FrmOffset |
**   Specifies the offset of frame data location in Lin_FrmData and this
**   is used only incase of pointer to buffer is used. If frame is neither a
**   publisher or subscriber then the value is ignored by LLD and length of 
**   this frame is not included in the total length of buffer required by
**   this interface (LIN_SYS_TOTAl_FRM_BUFF_SZ). the offset mentioned for each
**   frame is related with frame ID zero. Incase offset exceeds 255, 255 is 
**   subtracted from the offset and offset bit will be set in Lin_FrmInfo
**   data structure.*/

     extern uint8 Lin_FrmOffset[];

/*   @typedef Lin_FrmTbl |
**   The data structure defines the Frame Table*/

     extern uint8 Lin_FrmTbl[8];

/*   This is used to refer Lin_FrmDataUpdtFlag, Lin_BufferDataLost
**     and Lin_BufferInUse.*/

     #define LIN_SYS_NUM_FRMS                     8

/*   The following defines are used by LIN LLD to refer the data encoded in
**   Lin_FrmInfo and not exported to application.*/

     #define LIN_SYS_FRM_INFO_REG_ID_MSK      0x80
     #define LIN_SYS_FRM_INFO_PBLSHR_MSK      0x40
     #define LIN_SYS_FRM_INFO_LEN_MASK        0x07
     #define LIN_SYS_FRM_INFO_OFFSET_MSK      0x20

/*   The buffer contains the frame data at their particular offset indicated by
**   LIN_sys_frm_offset.

**   8 more bytes are used to store the data temporarily incase master
**   publishes the event triggered frame and current interface is not the
**   publisher. So by default the interface is subscribed to the event
**   triggered frame and updates the received data ,after receiving full
**   frame the LLD_sys_frm_data[LIN_SYS_TOTAl_FRM_BUFF_SZ]
**   value is verified for the subscriber status and update frame buffer.
**   accordingly. */

     extern uint8 Lin_FrmData[LIN_SYS_TOTAl_FRM_BUFF_SZ + 8];

/*   The following defines are used by LIN LLD to refer the data encoded in
**   Lin_FrmInfo and not exported to application.
**   e.g.
**   LIN v2.0
**   i.e. LLD_frm_data_updt_flg[0] 0th bit--> represents the
**   frame ID 0 (0x80) properties
**   LLD_frm_data_updt_flg[0] 1st bit --> represents the
**   frame ID 1 (0xC1) properties

**   LIN v2.1
**   i.e. LLD_frm_data_updt_flg[0] 0th bit--> represents the
**   LIN_sys_frm_tbl[0] properties
**   LLD_frm_data_updt_flg[0] 1st bit --> represents the
**   LIN_sys_frm_tbl[1] properties */

     extern uint8 Lin_FrmDataUpdtFlag[(LIN_SYS_NUM_FRMS >> 3) + 1];

/*   The LDF file have the init data for each frame, this data shall always be
**   used by nodes till it get the updated data from application/user (refer
**   9.2.3.1 standard signal section of LIN spec v2.1). This flag is used in
**   relation to LLD_frm_data_updt_flg.
**   LLD_frm_data_init_flg = 1 --> Init data will be used by slaves
**   LLD_frm_data_init_flg = 0 --> slaves has updated data from application,
**   and updated data will be used. This is reset in LIN_frame_wr API. */

     extern uint8 Lin_FrmDataInitFlag[(LIN_SYS_NUM_FRMS >> 3) + 1];


     #endif  /* #ifndef LIN_LDF_H */
